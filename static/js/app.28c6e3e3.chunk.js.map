{"version":3,"sources":["assets/img/class_small_demonhunter.png","assets/img/class_small_druid.png","assets/img/class_small_hunter.png","assets/img/class_small_mage.png","assets/img/class_small_paladin.png","assets/img/class_small_priest.png","assets/img/class_small_rogue.png","assets/img/class_small_shaman.png","assets/img/class_small_warlock.png","assets/img/class_small_warrior.png","assets/img/class_small_neutral.png","assets/img/Set1_Icon.png","assets/img/exclude.png","assets/img/techlevel1.png","assets/img/techlevel2.png","assets/img/techlevel3.png","assets/img/techlevel4.png","assets/img/techlevel5.png","assets/img/techlevel6.png","assets/img/techlevel0.png","assets/img/bg_beasts.png","assets/img/bg_demons.png","assets/img/bg_mechs.png","assets/img/bg_pirates.png","assets/img/bg_murlocs.png","assets/img/bg_dragons.png","assets/img/bg_elementals.png","assets/img/bg_neutrals.png","assets/img/GryphonIcon.png","assets/img/ClassicIcon.png","SmallClassImage.js","TechLevelImage.js","TribeImage.js","SoundButton.js","SoundDivider.js","HelperFunctions.js","MinionSounds.js","HeroSounds.js","TokensFlatList.js","SpecialsFlatList.js","Specials.js","SmallSetImage.js","Card.js","FlatListItemSeparator.js","InfoModal.js","ToolbarTitle.js","CardListTab.js","SetList.js","App.js","web-build/register-service-worker.js","assets/img/HallOfFameIcon.png","assets/img/NaxxIcon.png","assets/img/GvGIcon.png","assets/img/BRMIcon.png","assets/img/TGTIcon.png","assets/img/LOEIcon.png","assets/img/OGIcon.png","assets/img/KaraIcon.png","assets/img/GangsIcon.png","assets/img/UNGIcon.png","assets/img/ICCIcon.png","assets/img/LOOTIcon.png","assets/img/GILIcon.png","assets/img/BOTIcon.png","assets/img/TRLIcon.png","assets/img/DALIcon.png","assets/img/UldumIcon.png","assets/img/DRGIcon.png","assets/img/DRGIcon_MiniSet.png","assets/img/DHIIcon.png","assets/img/BTIcon.png","assets/img/SCHIcon.png","assets/img/DMFIcon.png","assets/img/DMFIcon_MiniSet.png","assets/img/BARIcon.png","assets/img/GryphonIconSelected.png","assets/img/Set1_IconSelected.png","assets/img/ClassicIconSelected.png","assets/img/kofi.png","assets/img/bitcoin.png","assets/img/litecoin.png","assets/img sync /^/.*_gem_small/.png$","assets/img/common_gem_small.png","assets/img/epic_gem_small.png","assets/img/legendary_gem_small.png","assets/img/rare_gem_small.png","assets/img sync /^/techlevel.*/.png$","assets/img sync /^/bg_.*/.png$"],"names":["module","exports","AnimatedImage","props","fadeInOpacity","Animated","Value","firstDualImage","multiClassGroup","require","getFirstDualImage","secondDualImage","getSecondDualImage","useEffect","sequence","timing","toValue","duration","useNativeDriver","start","event","finished","setLoaded","loaded","useState","View","Image","style","width","height","opacity","source","SmallClassImage","cardClass","cardImage","TechLevelImage","transform","scale","deviceType","techlevel","techLevelImage","TribeImage","target","tribe","tribeImage","SoundButton","styles","StyleSheet","create","button","alignItems","textAlign","padding","justifyContent","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonList","text","color","fontSize","TouchableOpacity","listButton","onPress","cardID","sound","a","async","Audio","Sound","createAsync","uri","shouldPlay","soundObject","playAsync","playSound","href","accessibilityRole","Text","title","SoundDivider","marginRight","marginBottom","tokenIDs","tokens","map","tokenID","heroIDs","heroes","id","battlegroundsIDs","battlegrounds","duelsIDs","battlegroundTribe","find","x","battlegroundToken","token","err","battlegroundTechLevel","card","techLevel","battlegroundHeroSpecific","heroSpecific","battlegroundRetired","retired","sortCards","cards","type","classOrder","tribeOrder","sort","b","classA","classB","name","tribeA","tribeB","techLevelA","techLevelB","undefined","generalCards","filter","includes","heroCards","bgCards","duelsCards","defaultGamePlaySounds","defaultEmoteSounds","defaultErrorSounds","defaultHolidaySounds","defaultHeroSounds","arannaHeroSounds","arraySplicer","deathKnightGamePlaySounds","deathKnightEmoteSounds","deathKnightHeroSounds","deathKnightRexxarHeroSounds","sharedCustomHeroSounds","galakrondHeroSounds","ragAndLordJarraxxusHeroSounds","medivhHeroSounds","renoHeroSounds","customCthun","customAluneth","customSkulloftheManari","customBarnes","customHecklebot","customVulgarHomunculus","customEvilHeclkerDalaranCrusader","customYogg","customFortuneTeller","startArray","splices","newArray","slice","splice","complicatedAltSound","soundID","standardAltSoundArray","altSoundsID","MinionSounds","hasStinger","nonLegendaryStingers","rarity","hasTrigger","triggers","flexDirection","paddingBottom","HeroSounds","SoundArray","alignSelf","soundArrays","section","SoundButtonArray","sectionTitle","sounds","paddingTop","fontWeight","flexWrap","deathknights","galakronds","TokenImage","isHero","imgSrc","resizeMode","TokensFlatList","hasTokens","parentID","paddingRight","FlatList","horizontal","data","renderItem","item","openNewCard","SpecialImage","marginTop","SpecialsFlatList","hasSpecials","specials","index","specialID","action","Specials","SmallSetImage","cardSet","Card","scrollViewRef","React","useRef","getImage","goToTop","current","scrollTo","animated","newID","addToCardsList","closeCards","image","aspectRatio","switchSetStyle","previousCardExists","position","top","left","zIndex","returnToPreviousCard","Ionicons","size","right","versionGroup","cardVersions","core","wild","classic","cardVersionGroup","hasSwitchSet","switchSet","setSwitcherSet","flex","ScrollView","ref","flavorText","battlegroundCard","flavor","battlegroundFlavor","closeCard","FlatListItemSeparator","InfoModal","textSmall","marginLeft","visibility","infoModalVisibility","TouchableWithoutFeedback","textDecorationLine","paddingLeft","wordBreak","closeInfoModal","ToolbarTitle","useFonts","Roboto_700Bold","fontFamily","CardListTab","route","navigation","state","DeviceInfo","getUserAgent","then","userAgent","setDeviceType","String","toLowerCase","includeNonCollectible","setIncludeNonCollectible","includeRarities","setIncludeRarities","includeTypes","setIncludeTypes","includeBGTokens","setIncludeBGTokens","includeBGHeroSpecific","setIncludeBGHeroSpecific","includeBGRetired","setIncludeBGRetired","includeBGTiers","setIncludeBGTiers","includeBGTribes","setIncludeBGTribes","cardDisplayed","setCardDisplayed","setCard","myCardData","setMyCardData","setCards","loadLimit","setLoadLimit","showFooter","setShowFooter","filterMenuVisibility","setFilterMenuVisibility","setInfoModalVisibility","flatListRef","useScrollToTop","params","typeFilter","filterCards","searchCriteria","applyLoadLimit","increaseLoadLimit","newTypeFilter","newNonCollectibleFilter","newRarityFilter","newBGTokensFilter","newBGTierFilter","newBGTribeFilter","newHeroSpecificFilter","newRetiredFilter","filteredData","rarityMap","concat","typeMap","collectible","toString","toUpperCase","set","tierMap","tokenFilter","heroSpecificFilter","retiredFilter","tribeMap","focus","scrollToOffset","offset","Analytics","cardToShow","showCard","setParams","addListener","e","console","log","navigate","MinionFilters","filterMenu","paddingHorizontal","TypeFilter","Switch","onValueChange","value","RarityFilter","BattlegroundFilters","newBGHeroSpecificFilter","TierFilter","tier","TribeFilter","centerElement","isSearchActive","searchable","autoFocus","placeholder","onChangeText","criteria","search","onSearchClosed","onSearchPressed","rightElement","MaterialCommunityIcons","keyExtractor","flexGrow","ItemSeparatorComponent","ListFooterComponent","length","display","newCardID","newCard","push","pop","SetList","cardSets","cardsets","craftable","App","Tab","createBottomTabNavigator","linking","prefixes","config","screens","Cards","Heroes","Sets","Battlegrounds","Duels","NavigationContainer","Navigator","Screen","component","initialParams","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve"],"mappings":"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","file":"static/js/app.28c6e3e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/class_small_demonhunter.27bc28b0.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_druid.b2cf4d40.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_hunter.982db222.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_mage.9b3b210e.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_paladin.ca95d589.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_priest.74da5ea8.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_rogue.a1f42042.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_shaman.6ebd9c99.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_warlock.02204f8b.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_warrior.8656e5cc.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_neutral.d25d7174.png\";","module.exports = __webpack_public_path__ + \"static/media/Set1_Icon.ac32ff2e.png\";","module.exports = __webpack_public_path__ + \"static/media/exclude.46c8feb2.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel1.4166ac56.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel2.70945d7d.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel3.aee75764.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel4.ad86b855.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel5.deed6cbf.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel6.7c39b1aa.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel0.fa35e5fc.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_beasts.66b989b5.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_demons.3aa3db7d.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_mechs.85d062d4.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_pirates.6b6aba23.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_murlocs.f76f8094.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_dragons.e170ee50.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_elementals.09e2d395.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_neutrals.586b344a.png\";","module.exports = __webpack_public_path__ + \"static/media/GryphonIcon.1968a040.png\";","module.exports = __webpack_public_path__ + \"static/media/ClassicIcon.fb07cda3.png\";","import React, { useState, useEffect } from 'react';\r\nimport {View, Animated, Image} from 'react-native';\r\n\r\nconst SmallClassImage = (props) => {\r\n\r\n\r\n  const cardClass = props.cardClass\r\n  const multiClassGroup = props.multiClassGroup\r\n  var img = 'class_small_neutral'\r\n\r\n  function cardImage() {\r\n    switch (cardClass) {\r\n      case 'DEMONHUNTER': return require('./assets/img/class_small_demonhunter.png')\r\n      case 'DRUID':       return require('./assets/img/class_small_druid.png')\r\n      case 'HUNTER':      return require('./assets/img/class_small_hunter.png')\r\n      case 'MAGE':        return require('./assets/img/class_small_mage.png')\r\n      case 'PALADIN':     return require('./assets/img/class_small_paladin.png')\r\n      case 'PRIEST':      return require('./assets/img/class_small_priest.png')\r\n      case 'ROGUE':       return require('./assets/img/class_small_rogue.png')\r\n      case 'SHAMAN':      return require('./assets/img/class_small_shaman.png')\r\n      case 'WARLOCK':     return require('./assets/img/class_small_warlock.png')\r\n      case 'WARRIOR':     return require('./assets/img/class_small_warrior.png')\r\n      default:            return require('./assets/img/class_small_neutral.png')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      multiClassGroup != null ? <AnimatedImage multiClassGroup={multiClassGroup}/> : <Image style={{width: 34, height: 34}} source={cardImage()}/>\r\n    }\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nconst AnimatedImage = (props) => {\r\n  const fadeInOpacity = new Animated.Value(.75);\r\n  const firstDualImage = getFirstDualImage()\r\n  const secondDualImage = getSecondDualImage()\r\n\r\n  function getFirstDualImage() {\r\n    switch (props.multiClassGroup) {\r\n      case 'HUNTER_DEMONHUNTER': return require('./assets/img/class_small_demonhunter.png')\r\n      case 'DRUID_HUNTER':       return require('./assets/img/class_small_hunter.png')\r\n      case 'DRUID_SHAMAN':      return require('./assets/img/class_small_druid.png')\r\n      case 'MAGE_SHAMAN':        return require('./assets/img/class_small_shaman.png')\r\n      case 'MAGE_ROGUE':     return require('./assets/img/class_small_mage.png')\r\n      case 'ROGUE_WARRIOR':      return require('./assets/img/class_small_rogue.png')\r\n      case 'PALADIN_WARRIOR':       return require('./assets/img/class_small_warrior.png')\r\n      case 'PALADIN_PRIEST':      return require('./assets/img/class_small_paladin.png')\r\n      case 'PRIEST_WARLOCK':     return require('./assets/img/class_small_priest.png')\r\n      case 'WARLOCK_DEMONHUNTER':     return require('./assets/img/class_small_warlock.png')\r\n      default:            return require('./assets/img/class_small_neutral.png')\r\n    }\r\n  }\r\n\r\n  function getSecondDualImage() {\r\n    switch (props.multiClassGroup) {\r\n      case 'HUNTER_DEMONHUNTER': return require('./assets/img/class_small_hunter.png')\r\n      case 'DRUID_HUNTER':       return require('./assets/img/class_small_druid.png')\r\n      case 'DRUID_SHAMAN':      return require('./assets/img/class_small_shaman.png')\r\n      case 'MAGE_SHAMAN':        return require('./assets/img/class_small_mage.png')\r\n      case 'MAGE_ROGUE':     return require('./assets/img/class_small_rogue.png')\r\n      case 'ROGUE_WARRIOR':      return require('./assets/img/class_small_warrior.png')\r\n      case 'PALADIN_WARRIOR':       return require('./assets/img/class_small_paladin.png')\r\n      case 'PALADIN_PRIEST':      return require('./assets/img/class_small_priest.png')\r\n      case 'PRIEST_WARLOCK':     return require('./assets/img/class_small_warlock.png')\r\n      case 'WARLOCK_DEMONHUNTER':     return require('./assets/img/class_small_demonhunter.png')\r\n      default:            return require('./assets/img/class_small_neutral.png')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Animated.sequence([\r\n      Animated.timing(fadeInOpacity, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: true\r\n      })\r\n    ]).start(event => {\r\n        if (event.finished) {\r\n          Animated.timing(fadeInOpacity, {\r\n            toValue: .75,\r\n            duration: 2000,\r\n            useNativeDriver: true\r\n          }).start(event => {\r\n            setLoaded(loaded == firstDualImage ? secondDualImage : firstDualImage)\r\n          })\r\n        }})\r\n\r\n\r\n  })\r\n\r\n  const [loaded, setLoaded] = useState(firstDualImage)\r\n\r\n  return (\r\n    <View>\r\n      <Animated.Image style={{width: 34, height: 34, opacity: fadeInOpacity}} source={loaded}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SmallClassImage;\r\n","import React from 'react';\r\nimport {View, Image} from 'react-native';\r\n\r\nconst TechLevelImage = (props) => {\r\n\r\n  function techLevelImage() {\r\n    switch (props.techlevel) {\r\n      case 1:   return require('./assets/img/techlevel1.png')\r\n      case 2:   return require('./assets/img/techlevel2.png')\r\n      case 3:   return require('./assets/img/techlevel3.png')\r\n      case 4:   return require('./assets/img/techlevel4.png')\r\n      case 5:   return require('./assets/img/techlevel5.png')\r\n      case 6:   return require('./assets/img/techlevel6.png')\r\n      default:  return require('./assets/img/techlevel0.png')\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Image style={{transform: [{scale: props.deviceType == 'mobile' ? .80 : 1.0}], width: 34, height: 34}} source={techLevelImage()}/>\r\n\r\n  )\r\n}\r\nexport default TechLevelImage;\r\n","import React from 'react';\r\nimport {View, Image} from 'react-native';\r\n\r\nconst TribeImage = (props) => {\r\n\r\n  function tribeImage() {\r\n    switch (props.tribe) {\r\n      case \"Beast\":   return require('./assets/img/bg_beasts.png')\r\n      case \"Demon\":   return require('./assets/img/bg_demons.png')\r\n      case \"Mech\":    return require('./assets/img/bg_mechs.png')\r\n      case \"Pirate\":  return require('./assets/img/bg_pirates.png')\r\n      case \"Murloc\":  return require('./assets/img/bg_murlocs.png')\r\n      case \"Dragon\":  return require('./assets/img/bg_dragons.png')\r\n      case \"Elemental\": return require('./assets/img/bg_elementals.png')\r\n      default:  return require('./assets/img/bg_neutrals.png')\r\n    }\r\n  }\r\n\r\n  return (\r\n        <Image target='' style={{transform: [{scale: props.deviceType == 'mobile' ? .80 : 1.0}], width: 34, height: 34}} source={tribeImage()}/>\r\n  )\r\n}\r\nexport default TribeImage;\r\n","import React from 'react';\r\nimport { StyleSheet, Button, TouchableOpacity, TouchableWithoutFeedback, View, Link, Text, Linking } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\nconst SoundButton = (props) => {\r\n  async function playSound(cardID, sound) {\r\n    const soundObject = await Audio.Sound.createAsync(\r\n      { uri: 'https://hearthstonesounds.s3.amazonaws.com/'+cardID+'_'+sound+'.wav' },\r\n      { shouldPlay: true }\r\n    );\r\n    try {\r\n      await soundObject.playAsync();\r\n      // Your sound is playing!\r\n      } catch (error) {\r\n      // An error occurred!\r\n      }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    button: {\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      padding: 10,\r\n      width: props.deviceType == 'mobile' ? \"64px\" : \"72px\",\r\n      height: props.deviceType == 'mobile' ? \"40px\" : \"40px\",\r\n      justifyContent: 'center',\r\n      backgroundColor: \"#2196F3\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    buttonList: {\r\n      width: props.deviceType == 'mobile' ? \"40px\" : \"72px\",\r\n      height: props.deviceType == 'mobile' ? \"32px\" : \"40px\",\r\n    },\r\n    text: {\r\n      alignItems: \"center\",\r\n      justifyContent: 'center',\r\n      color: \"white\",\r\n      fontSize: props.deviceType == 'mobile' ? 10.5 : 12,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <View style={{padding: 4}}>\r\n      <TouchableOpacity\r\n        style={props.listButton ? [styles.button, styles.buttonList] : styles.button}\r\n        onPress= {() => {\r\n          playSound(props.cardID, props.sound)\r\n        }}\r\n        href={'https://hearthstonesounds.s3.amazonaws.com/'+props.cardID+'_'+props.sound+'.wav'}\r\n        accessibilityRole=\"link\" target=\"\"\r\n      >\r\n        <Text style={styles.text}>{props.title}</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SoundButton;\r\n","import React from 'react';\r\nimport { View} from 'react-native';\r\n\r\nconst SoundDivider = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: 1,\r\n        width: \"100%\",\r\n        opacity: 0.25,\r\n        backgroundColor: \"#000000\",\r\n        marginRight: 8,\r\n        marginBottom: 8\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SoundDivider\r\n","import cards from './assets/cards.json';\r\nimport tokens from './assets/tokens.json';\r\nimport heroes from './assets/heroes.json';\r\nimport battlegrounds from './assets/battlegrounds.json';\r\nimport cardVersions from './assets/cardVersions.json';\r\n\r\nconst tokenIDs = tokens.map(a => a.tokenID)\r\nconst heroIDs = heroes.map(a => a.id)\r\nconst battlegroundsIDs = battlegrounds.map(a => a.cardID)\r\nconst duelsIDs = ['PVPDR_Hero_Fireheart']\r\n\r\nconst cardVersionGroup = (cardID) => {\r\n    const cvg = cardVersions.find(x => x.core == cardID || x.wild == cardID || x.classic == cardID)\r\n    return cvg\r\n}\r\n\r\nconst battlegroundCard = (cardID) => {\r\n\r\n  try {\r\n    const card = battlegrounds.find(x => x.cardID == cardID)\r\n    card.heroSpecific = (card.heroSpecific == 1) // Set this to true or false.\r\n    return card\r\n  } catch (err) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst battlegroundTribe = (cardID) => {\r\n  return battlegrounds.find(x => x.cardID == cardID).tribe\r\n}\r\n\r\nconst battlegroundToken = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).token == 1\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst battlegroundTechLevel = (card) => {\r\n  if (card.id == 'GVG_058') return 2\r\n  else if (card.id == 'TB_BaconShop_HP_033t') return 1\r\n  else return card.techLevel\r\n}\r\n\r\nconst battlegroundHeroSpecific = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).heroSpecific == 1\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst battlegroundFlavor = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).flavor\r\n  } catch (err) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst battlegroundRetired = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).retired\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\n\r\nconst sortCards = (cards, type) => {\r\n  function classOrder(a) {\r\n\r\n    // Dual Class Cards\r\n    switch(a.multiClassGroup) {\r\n      case 'HUNTER_DEMONHUNTER': return 1.5\r\n      case 'DRUID_SHAMAN': return 2.5\r\n      case 'DRUID_HUNTER': return 3.5\r\n      case 'MAGE_ROGUE': return 4.5\r\n      case 'PALADIN_PRIEST': return 5.5\r\n      case 'PRIEST_WARLOCK': return 6.5\r\n      case 'ROGUE_WARRIOR': return 7.5\r\n      case 'MAGE_SHAMAN': return 8.5\r\n      case 'WARLOCK_DEMONHUNTER': return 9.5\r\n      case 'PALADIN_WARRIOR': return 10.5\r\n    }\r\n\r\n    switch(a.cardClass) {\r\n      case 'DEMONHUNTER': return 1\r\n      case 'DRUID': return 2\r\n      case 'HUNTER': return 3\r\n      case 'MAGE': return 4\r\n      case 'PALADIN': return 5\r\n      case 'PRIEST': return 6\r\n      case 'ROGUE': return 7\r\n      case 'SHAMAN': return 8\r\n      case 'WARLOCK': return 9\r\n      case 'WARRIOR': return 10\r\n      default: return 99\r\n    }\r\n  }\r\n\r\n  function tribeOrder(a) {\r\n    switch(battlegroundTribe(a.id)) {\r\n      case 'Beast': return 1\r\n      case 'Demon': return 2\r\n      case 'Dragon': return 3\r\n      case 'Mech': return 4\r\n      case 'Murloc': return 5\r\n      case 'Pirate': return 6\r\n      case 'Elemental': return 7\r\n      case 'Neutral': return 8\r\n      default: return 99\r\n    }\r\n  }\r\n\r\n  if(type == 'general' || type == 'heroes') {\r\n    return cards.sort(\r\n      function(a,b) {\r\n        var classA = classOrder(a)\r\n        var classB = classOrder(b)\r\n\r\n        if(classA < classB )  { return -1}\r\n        if(classA > classB )  { return 1}\r\n        if(classA == classB ) {\r\n          if(a.name < b.name )    {return -1}\r\n          if(a.name  > b.name )   {return 1}\r\n          if(a.name  == b.name )  {return 0}\r\n        }\r\n      }\r\n    )\r\n  } else if (type == 'battlegrounds') {\r\n    return cards.sort (\r\n      function(a,b) {\r\n          var tribeA = tribeOrder(a)\r\n          var tribeB = tribeOrder(b)\r\n          var techLevelA = battlegroundTechLevel(a)\r\n          var techLevelB = battlegroundTechLevel(b)\r\n\r\n          if(techLevelA == undefined) {return -1}\r\n          if(techLevelA < techLevelB) {return -1}\r\n          if(techLevelA > techLevelB) {return 1}\r\n          if(techLevelA== techLevelB) {\r\n            if(tribeA < tribeB )  { return -1}\r\n            if(tribeA > tribeB )  { return 1}\r\n            if(tribeA == tribeB ) {\r\n              if(a.name < b.name )   {return -1}\r\n              if(a.name > b.name )   {return 1}\r\n              if(a.name == b.name )  {return 0}\r\n            }\r\n          }\r\n        }\r\n    )\r\n  } else {\r\n    return cards\r\n  }\r\n}\r\n\r\nconst generalCards = sortCards(cards.filter(x => (!heroIDs.includes(x.id))), 'general')\r\nconst heroCards = sortCards(cards.filter(x => heroIDs.includes(x.id)), 'heroes')\r\nconst bgCards = sortCards(cards.filter(x => (battlegroundsIDs.includes(x.id))), 'battlegrounds')\r\nconst duelsCards = sortCards(cards.filter(x => (duelsIDs.includes(x.id))), 'duels')\r\n\r\n\r\nconst defaultGamePlaySounds = [\r\n  ['Opening','S1'],\r\n  ['Opening (Mirror)','S2'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n  ['Chosen in Arena','PA']\r\n]\r\n\r\nconst defaultEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Greetings (Mirror)', 'EM_G2'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O'],\r\n  ['Sorry','EM_S1']\r\n]\r\n\r\nconst defaultErrorSounds = [\r\n  ['Need Weapon', 'E1'],\r\n  ['Mana', 'E2'],\r\n  ['Minion Attacked', 'E3'],\r\n  ['Hero Attacked', 'E4'],\r\n  ['Summon Sickness', 'E5'],\r\n  ['Full Hand', 'E6'],\r\n  ['Too Many Minions', 'E7'],\r\n  ['Stealth Minion', 'E8'],\r\n  ['Can\\'t Play', 'E9'],\r\n  ['Invalid Target', 'E10'],\r\n  ['Taunt Minion', 'E11'],\r\n  ['Generic', 'E12'],\r\n]\r\n\r\nconst defaultHolidaySounds = [\r\n  ['New Year','H_NY'],\r\n  ['Lunar New Year','H_LNY'],\r\n  ['Noble\\nGarden','H_NG'],\r\n  ['Mid\\nSummer','H_MS'],\r\n  ['Pirate Day','H_PD'],\r\n  ['Hallow\\'s End','H_HE'],\r\n  ['Winter Veil','H_WV'],\r\n]\r\n\r\nconst defaultHeroSounds = [\r\n  ['Gameplay', defaultGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst arannaGamePlaySounds = arraySplicer(defaultGamePlaySounds, [[3,0,['Attack (2)', 'A2']],[10,0,['Thinking (4)', 'T4']]])\r\nconst arannaErrorSounds = arraySplicer(defaultErrorSounds, [[1,1,['Mana (1)','E2']],[2,0,['Mana (2)', 'E2A']]])\r\nconst arannaHeroSounds = [\r\n  ['Gameplay', arannaGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', arannaErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst deathKnightGamePlaySounds = [\r\n  ['Intro (1)','I1'],\r\n  ['Intro (2)','I2'],\r\n  ['Summon','S1'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst deathKnightEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O']\r\n]\r\nconst deathKnightHeroSounds = [\r\n  ['Gameplay', deathKnightGamePlaySounds],\r\n  ['Emotes', deathKnightEmoteSounds]\r\n]\r\n\r\nconst deathKnightRexxarGameplaySounds = arraySplicer(deathKnightGamePlaySounds, [[3,0,['Summon (Mirror)', 'S2']]])\r\nconst deathKnightRexxarEmoteSounds = arraySplicer(deathKnightEmoteSounds, [[2,0,['Greetings (Mirror)', 'EM_G2']]])\r\nconst deathKnightRexxarHeroSounds = [\r\n  ['Gameplay', deathKnightRexxarGameplaySounds],\r\n  ['Emotes', deathKnightRexxarEmoteSounds]\r\n]\r\n\r\nconst sharedCustomGamePlaySounds = [\r\n  ['Intro','I1'],\r\n  ['Summon','S1'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst sharedCustomEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O']\r\n]\r\nconst sharedCustomHeroSounds = [\r\n  ['Gameplay', sharedCustomGamePlaySounds],\r\n  ['Emotes', sharedCustomEmoteSounds]\r\n]\r\n\r\nconst galakrondGamePlaySounds = [\r\n  ['Intro','I1'],\r\n  ['Summon','P'],\r\n  ['Opening','S1'],\r\n  ['Opening (Mirror)','S2'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst galakrondHeroSounds = [\r\n  ['Gameplay', galakrondGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst ragAndLordJarraxxusGamePlaySounds = [\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst ragAndLordJarraxxusHeroSounds = [\r\n  ['Gameplay', ragAndLordJarraxxusGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst medivhHolidaySounds = [\r\n  ['New Year','H_NY'],\r\n  ['Lunar New Year','H_LNY'],\r\n  ['Noble\\nGarden','H_NG'],\r\n  ['Mid\\nSummer','H_MS'],\r\n  ['Hallow\\'s End','H_HE'],\r\n  ['Winter Veil','H_WV'],\r\n]\r\nconst medivhHeroSounds = [\r\n  ['Gameplay', defaultGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', medivhHolidaySounds]\r\n]\r\n\r\nconst renoGamePlaySounds = [\r\n  ['Intro','I1'],\r\n  ['Summon','S1'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n  ['Chosen in Arena','PA']\r\n]\r\nconst renoHeroSounds = [\r\n  ['Gameplay', renoGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds]\r\n]\r\n\r\nconst customCthun = [\r\n  ['Whisper (1)', 'SP1'],\r\n  ['Whisper (2)', 'SP2'],\r\n  ['Whisper (3)', 'SP3'],\r\n  ['Whisper (4)', 'SP4'],\r\n  ['Whisper (5)', 'SP5'],\r\n  ['Whisper (6)', 'SP6'],\r\n  ['Whisper (7)', 'SP7'],\r\n  ['Whisper (8)', 'SP8'],\r\n  ['Whisper (9)', 'SP9'],\r\n  ['Whisper (10)', 'SP10'],\r\n  ['Whisper (11)', 'SP11'],\r\n  ['Whisper (11)', 'SP12']\r\n]\r\n\r\nconst customAluneth = [\r\n  ['Play (1)', 'SP1'],\r\n  ['Play (2)', 'SP2'],\r\n  ['Play (3)', 'SP3'],\r\n  ['Trigger (1)', 'SP5'],\r\n  ['Trigger (2)', 'SP5'],\r\n  ['Trigger (3)', 'SP6'],\r\n  ['Trigger (4)', 'SP7'],\r\n  ['Trigger (5)', 'SP8'],\r\n  ['Trigger (6)', 'SP9'],\r\n  ['Death (1)', 'SP10'],\r\n  ['Death (2)', 'SP11'],\r\n  ['Death (3)', 'SP12']\r\n]\r\n\r\nconst customSkulloftheManari = [\r\n  ['Play (1)', 'SP1'],\r\n  ['Play (2)', 'SP2'],\r\n  ['Play (3)', 'SP3'],\r\n  ['Trigger (1)', 'SP4'],\r\n  ['Trigger (2)', 'SP5'],\r\n  ['Trigger (3)', 'SP6'],\r\n  ['Death (1)', 'SP7'],\r\n  ['Death (2)', 'SP8'],\r\n]\r\n\r\nconst customBarnes = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6']\r\n]\r\n\r\nconst customHecklebot = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6'],\r\n  ['Play (7)', 'P7'],\r\n  ['Play (8)', 'P8'],\r\n  ['Attack (9)', 'A9'],\r\n  ['Attack (1)', 'A1'],\r\n  ['Attack (2)', 'A2'],\r\n  ['Attack (3)', 'A3'],\r\n  ['Attack (4)', 'A4'],\r\n  ['Attack (5)', 'A5'],\r\n  ['Attack (6)', 'A6'],\r\n  ['Attack (7)', 'A7'],\r\n  ['Attack (8)', 'A8'],\r\n  ['Attack (9)', 'A9']\r\n]\r\n\r\nconst customVulgarHomunculus = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Attack (9)', 'A9'],\r\n  ['Attack (1)', 'A1'],\r\n  ['Attack (2)', 'A2'],\r\n  ['Attack (3)', 'A3'],\r\n  ['Attack (4)', 'A4']\r\n]\r\n\r\nconst customEvilHeclkerDalaranCrusader = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2']\r\n]\r\n\r\nconst customYogg = [\r\n  ['Spin (1)', 'SP1'],\r\n  ['Spin (2)', 'SP2'],\r\n  ['Spin (3)', 'SP3'],\r\n  ['Spin (4)', 'SP4'],\r\n  ['Spin (5)', 'SP5'],\r\n  ['Spin (6)', 'SP6'],\r\n]\r\n\r\nconst customFortuneTeller = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6']\r\n]\r\n\r\nfunction arraySplicer(startArray, splices) {\r\n  var newArray = startArray.slice(0)\r\n  var x\r\n  for (x of splices) {\r\n    newArray.splice(x[0],x[1],x[2])\r\n  }\r\n  return newArray\r\n}\r\n\r\nfunction complicatedAltSound(cardID, soundID = '') {\r\n  var standardAltSoundArray = ['A1','EM_G1','EM_G2','S2','EM_O','PA','S1','EM_TH1','EM_T','EM_WP','EM_W']\r\n\r\n  // WARRIOR\r\n  // Corrupt Garrosh\r\n  if (['HERO_01b'].includes(cardID)) return 'HERO_01'\r\n  // Nagrand Garrosh, Lu Bao Garrosh, Garrosh of Might\r\n  else if ([\"HERO_01d\",\"HERO_01g\",'HERO_01f'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_01'\r\n  // Rokara\r\n  else if (['HERO_01i','HERO_01j','HERO_01k'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_01l'\r\n  // SHAMAN\r\n  // Warchief Thrall\r\n  else if (['HERO_02d'].includes(cardID)) return 'HERO_02'\r\n  // Earthfury Thrall, Thrall Son of Durotan, Alterac Thrall, Wolfrider Thrall, Frostwolf Thrall\r\n  else if (['HERO_02f','HERO_02g','HERO_02h','HERO_02i','HERO_02j'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_02'\r\n  //ROGUE\r\n  // Cap'n Valeera\r\n  else if (['HERO_03b'].includes(cardID)) return 'HERO_03'\r\n  // Nightslayer Valeera, Diao Chan Valeera, Gladiator Valeera\r\n  else if (['HERO_03d','HERO_03e','HERO_03f'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_03'\r\n  // PALADIN\r\n  // Lightforged Uther\r\n  else if (['HERO_04d'].includes(cardID)) return 'HERO_04'\r\n  // Second War Uther, Horseman Uther, Uther Lawbringer, Guan Yu Uther\r\n  else if (['HERO_04e','HERO_04f','HERO_04g','HERO_04h'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_04'\r\n  // HUNTER\r\n  // Wanderer Rexxar\r\n  else if (['HERO_05b'].includes(cardID)) return 'HERO_05'\r\n  // Warsong Rexxar (Weird Set)\r\n  else if (['HERO_05d'].includes(cardID) && !(['A1','EM_G1','S2','EM_O','PA','S1','EM_TH1','T3','EM_T','EM_WP','SP1'].includes(soundID))) return 'HERO_05'\r\n  // Giantstalker Rexxar, Firefang Rexxar\r\n  else if (['HERO_05e', 'HERO_05g'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_05'\r\n  // DRUID\r\n  // Shan'do Malfurion\r\n  else if (['HERO_06c'].includes(cardID)) return 'HERO_06'\r\n  // Cenarion Malfurion\r\n  else if (['HERO_06e'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_06'\r\n  // WARLOCK\r\n  // Shadow Gul'dan, Felheart Gul'dan\r\n  else if (['HERO_07c','HERO_07e'].includes(cardID)) return 'HERO_07'\r\n  // Felheart Gul'dan :(\r\n  // else if (['HERO_07e'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_07'\r\n  // MAGE\r\n  // Fire Mage Jaina\r\n  else if (['HERO_08c'].includes(cardID)) return 'HERO_08'\r\n  // Scholar Jaina, Arcanist Jaina, Apprentice Jaina, Archmage Jaina, Kul Tiran Jaina\r\n  else if (['HERO_08f','HERO_08g','HERO_08h','HERO_08i','HERO_08j'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_08'\r\n  // PRIEST\r\n  // King Anduin\r\n  else if (['HERO_09c'].includes(cardID)) return 'HERO_09'\r\n  // Anduin of Prophecy, SI:7 Anduin, Zhuge Liang Anduin\r\n  else if (['HERO_09d', 'HERO_09e', 'HERO_09f'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_09'\r\n  // Xyrella\r\n  else if (['HERO_09h','HERO_09i','HERO_09j'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_09k'\r\n  // DEMONHUNTER\r\n  else if (['HERO_10a'].includes(cardID)) return 'HERO_10'\r\n  // Demonbane Illidan\r\n  else if (['HERO_10c'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_10'\r\n  // Kurtrus\r\n  else if (['HERO_10e','HERO_10f','HERO_10g'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_10i'\r\n\r\n  else return cardID\r\n}\r\n\r\nfunction altSoundsID(cardID) {\r\n  if (['BAR_024'].includes(cardID)) return 'ULD_190'\r\n  else if (['BAR_031'].includes(cardID)) return 'UNG_076t1'\r\n  else if (['BAR_034t3'].includes(cardID)) return 'NEW1_017'\r\n  else if (['BAR_034t4'].includes(cardID)) return 'OG_064a'\r\n  else if (['BAR_034t5'].includes(cardID)) return 'CFM_335'\r\n  else if (['BAR_533t'].includes(cardID)) return 'TRL_546'\r\n  else if (['BAR_538'].includes(cardID)) return 'TRL_309t'\r\n  else if (['BAR_745'].includes(cardID)) return 'ULD_154t'\r\n  else return cardID\r\n}\r\n\r\n\r\nexport {tokenIDs, heroIDs, battlegroundsIDs, duelsIDs, cardVersionGroup,\r\n  battlegroundTribe, battlegroundToken, battlegroundHeroSpecific, battlegroundFlavor, battlegroundRetired, battlegroundTechLevel, battlegroundCard,\r\n  generalCards, heroCards, bgCards, duelsCards,\r\n  defaultHeroSounds, arannaHeroSounds, deathKnightHeroSounds, deathKnightRexxarHeroSounds, sharedCustomHeroSounds, galakrondHeroSounds, ragAndLordJarraxxusHeroSounds, medivhHeroSounds, renoHeroSounds,\r\n  customCthun, customAluneth, customSkulloftheManari, customBarnes, customVulgarHomunculus, customHecklebot, customEvilHeclkerDalaranCrusader, customYogg, customFortuneTeller,\r\n  altSoundsID, complicatedAltSound\r\n}\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider'\r\nimport { Text, View } from 'react-native';\r\nimport nonLegendaryStingers from './assets/nonLegendaryStingers.json'\r\nimport triggers from './assets/triggers.json'\r\nimport {altSoundsID} from './HelperFunctions'\r\n\r\nconst MinionSounds = (props) => {\r\n\r\n  const cardID = props.card.id\r\n  const deviceType = props.deviceType\r\n\r\n  const hasStinger = nonLegendaryStingers.map(a => a.cardID).includes(cardID) || props.card.rarity == 'LEGENDARY'\r\n  const hasTrigger = triggers.map(a => a.cardID).includes(cardID)\r\n\r\n  return (\r\n    <>\r\n    <View style={{justifyContent: 'space-around'}}>\r\n    {(hasStinger || hasTrigger) ?\r\n      <View style={{flexDirection: 'row', alignItems: 'center', marginBottom: 8, justifyContent: 'center'}}>\r\n        {hasStinger ?\r\n          <>\r\n            <SoundButton title='Intro' cardID={altSoundsID(cardID)} sound='S' deviceType={deviceType}/>\r\n          </>\r\n          : <></>\r\n        }\r\n        {(hasStinger && hasTrigger) ? <View style={{padding: 4}} /> : <></>}\r\n        {hasTrigger ?\r\n          <SoundButton title='Trigger' cardID={altSoundsID(cardID)} sound='TR' deviceType={deviceType}/>\r\n          : <></>\r\n        }\r\n      </View>\r\n      : <></>\r\n    }\r\n    {['DAL_357t','LOOT_131t1','BGS_046t','BAR_919t'].includes(cardID)\r\n      ? (['UNG_065t','DAL_357t','BGS_046t', 'BAR_919t'].includes(cardID)) ?\r\n          <View style = {{paddingBottom: 8, alignItems: 'center'}}>\r\n            <Text>{\"This card has no sounds!\"}</Text>\r\n          </View>\r\n        :\r\n          <View style = {{paddingBottom: 8, alignItems: 'center'}}>\r\n            <Text>{\"I haven't found these card sounds yet, please check back later!\"}</Text>\r\n          </View>\r\n\r\n      :\r\n\r\n      <View style={{flexDirection: 'row', alignItems: 'center', marginBottom: 8, justifyContent: 'center'}}>\r\n        {['DAL_085','KAR_114','DAL_058','LOOT_013','AT_114', 'DMF_121'].includes(cardID) ? <></> :\r\n          <>\r\n            <><SoundButton title='Play' cardID={altSoundsID(cardID)} sound='P' deviceType={deviceType}/></>\r\n            <><View style={{padding: 4}} /></>\r\n          </>\r\n        }\r\n        {(props.card.id == 'DAL_058' || props.card.id == 'LOOT_013') ? <></> :\r\n          <>\r\n            <SoundButton title='Attack' cardID={altSoundsID(cardID)} sound='A' deviceType={deviceType}/>\r\n            <View style={{padding: 4}} />\r\n          </>\r\n        }\r\n        <SoundButton title='Death' cardID={altSoundsID(cardID)} sound='D' deviceType={deviceType}/>\r\n      </View>\r\n    }\r\n    </View>\r\n    <SoundDivider/>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default MinionSounds\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider';\r\nimport deathknights from './assets/deathknights.json';\r\nimport galakronds from './assets/galakronds.json';\r\nimport { View, Text } from 'react-native';\r\nimport {defaultHeroSounds, arannaHeroSounds, deathKnightHeroSounds, deathKnightRexxarHeroSounds,\r\n  sharedCustomHeroSounds, galakrondHeroSounds, ragAndLordJarraxxusHeroSounds, medivhHeroSounds, renoHeroSounds, complicatedAltSound} from './HelperFunctions'\r\n\r\nconst HeroSounds = (props) => {\r\n\r\n  const cardID = props.cardID\r\n  const deviceType = props.deviceType\r\n\r\n  const RenderSoundArrays = (props) => {\r\n    if (cardID == 'HERO_10b') return <SoundArray soundArrays={arannaHeroSounds}/>\r\n    else if (deathknights.map(a => a.id).includes(cardID) && cardID != \"ICC_828\") return <SoundArray soundArrays={deathKnightHeroSounds}/>\r\n    else if (cardID == 'ICC_828') return <SoundArray soundArrays={deathKnightRexxarHeroSounds}/>\r\n    else if (['BOT_238','GIL_504','TRL_065'].includes(cardID)) return <SoundArray soundArrays={sharedCustomHeroSounds}/>\r\n    else if (cardID == 'YOD_009') return <SoundArray soundArrays={renoHeroSounds}/>\r\n    else if (['EX1_323h','BRM_027h'].includes(cardID)) return <SoundArray soundArrays={ragAndLordJarraxxusHeroSounds}/>\r\n    else if (cardID == 'HERO_08a') return <SoundArray soundArrays={medivhHeroSounds}/>\r\n    else if (galakronds.map(a => a.id).includes(cardID)) return <SoundArray soundArrays={galakrondHeroSounds}/>\r\n    else return <SoundArray soundArrays={defaultHeroSounds}/>\r\n  }\r\n\r\n  const SoundArray = (props) => {\r\n    return (\r\n      <View style={{alignSelf: 'flex-start', width: \"100%\"}}>\r\n        {props.soundArrays.map(section => (\r\n          <SoundButtonArray sectionTitle={section[0]} sounds={section[1]}/>\r\n        ))}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const SoundButtonArray = (props) => {\r\n    return (\r\n      <>\r\n        <View style={{flexDirection: 'row', paddingBottom: 8}}>\r\n          <Text style={{paddingTop: 4, alignSelf: 'flex-start', fontWeight: 'bold', width: \"15%\", fontSize: deviceType == 'mobile' ? 10.5 : 14}}>{props.sectionTitle}</Text>\r\n          <View style={{flexDirection: 'row', flexWrap: 'wrap', width: \"85%\"}}>\r\n            {props.sounds.map(sound => (\r\n              <SoundButton title={sound[0]} cardID={complicatedAltSound(cardID, sound[1])} sound={sound[1]} deviceType={deviceType}/>\r\n            ))}\r\n          </View>\r\n        </View>\r\n        <SoundDivider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{alignSelf: 'flex-start', width: \"100%\"}}>\r\n      <RenderSoundArrays/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default HeroSounds\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider'\r\nimport { View, Text, FlatList, Image, TouchableOpacity } from 'react-native';\r\nimport heroes from './assets/heroes.json';\r\nimport tokens from './assets/tokens.json';\r\nimport {complicatedAltSound} from './HelperFunctions';\r\n\r\nconst TokensFlatList = (props) => {\r\n\r\n  const cardID = complicatedAltSound(props.cardID)\r\n  const hasTokens = tokens.map(a => a.parentID).includes(cardID)\r\n\r\n  return (\r\n    <>\r\n    {hasTokens\r\n      ?\r\n      <>\r\n        <View style={{flexDirection: 'row', alignSelf: 'flex-start', width: \"100%\", paddingBottom: 8}}>\r\n          <Text style={{alignSelf: 'flex-start', paddingRight: 8, fontWeight: 'bold', width: 80}}>Related</Text>\r\n            <FlatList\r\n              horizontal='true'\r\n              data={tokens.filter(x => x.parentID == cardID)}\r\n              renderItem={({item}) => (\r\n                  <TouchableOpacity onPress={() => {props.openNewCard(item.tokenID)}}>\r\n                    <TokenImage cardID={item.tokenID} battlegrounds={props.battlegrounds}/>\r\n                  </TouchableOpacity>\r\n              ) }\r\n            />\r\n      </View>\r\n      <SoundDivider/>\r\n      </>\r\n      : <></>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nconst TokenImage = (props) => {\r\n  const isHero =  heroes.map(a => a.id).includes(props.cardID)\r\n  const imgSrc = getImage(props.cardID)\r\n\r\n    function getImage(cardID) {\r\n      if (isHero || cardID == 'EX1_323h') {\r\n        return 'https://hearthstonesounds.s3.amazonaws.com/' + cardID + '.png'\r\n      } else if (props.battlegrounds) {\r\n        return 'https://hearthstonesounds.s3.amazonaws.com/' + cardID + '_BG.png'\r\n      } else {\r\n        return 'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/' + cardID + '.png'\r\n      }\r\n    }\r\n\r\n  return (\r\n    <View style={{padding: 10}}>\r\n    {(isHero)\r\n      ? <Image source={{uri: imgSrc}} style={{width: 128, height: 176.64, resizeMode:'stretch'}}/>\r\n      : (props.battlegrounds) ? <Image source={{uri: imgSrc}} style={{width: 128, height: 176.64, resizeMode:'stretch'}}/>\r\n        : <Image source={{uri: imgSrc}} style={{width: 128, height: 176.78, resizeMode:'stretch'}}/>\r\n    }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default TokensFlatList\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport { View, Text, FlatList, Image, TouchableOpacity } from 'react-native';\r\nimport heroes from './assets/heroes.json';\r\nimport specials from './assets/specials.json';\r\nimport {altSoundsID, complicatedAltSound} from './HelperFunctions'\r\n\r\nconst SpecialsFlatList = (props) => {\r\n\r\n  // Need a scroll to top when new card is clicked.\r\n  const cardID = props.cardID\r\n  const hasSpecials = specials.map(a => a.parentID).includes(cardID)\r\n\r\n  return (\r\n    <>\r\n    {hasSpecials\r\n      ?\r\n      <View style={{flexDirection: 'row', alignSelf: 'flex-start', width: '100%'}}>\r\n        <Text style={{alignSelf: 'flex-start', paddingRight: 8, fontWeight: 'bold', width: 80}}>Special</Text>\r\n          <FlatList\r\n            horizontal='true'\r\n            data={specials.filter(x => x.parentID == cardID)}\r\n            renderItem={({ item, index }) => (\r\n                <View style={{alignItems: 'center', justifyContent: 'flex-start'}}>\r\n                  <TouchableOpacity onPress={() => {props.openNewCard(item.specialID)}} style={{marginBottom: -24}}>\r\n                    <SpecialImage cardID={item.specialID}/>\r\n                  </TouchableOpacity>\r\n                  <SoundButton title={item.action} cardID={complicatedAltSound(cardID, 'SP'+(index+1))} sound={'SP'+(index+1)} />\r\n                </View>\r\n            ) }\r\n          />\r\n      </View>\r\n      : <></>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nconst SpecialImage = (props) => {\r\n  const cardID = props.cardID\r\n  const isHero = heroes.map(a => a.id).includes(cardID)\r\n  const imgSrc = ((isHero || cardID == 'EX1_323h') ?\r\n    'https://hearthstonesounds.s3.amazonaws.com/' :\r\n    'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/')\r\n    + cardID + '.png'\r\n\r\n  return (\r\n    <View style={{padding: 10}}>\r\n    {isHero\r\n      ? <Image source={{uri: imgSrc}} style={{width: 128, height: 176.64, resizeMode:'stretch'}}/>\r\n      : <Image source={{uri: imgSrc}} style={{width: 128, height: 194, marginTop: -17, resizeMode:'stretch'}}/>\r\n    }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SpecialsFlatList\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider';\r\nimport { View, Text } from 'react-native';\r\nimport { customCthun, customAluneth, customSkulloftheManari, customBarnes,\r\n  customVulgarHomunculus, customHecklebot, customEvilHeclkerDalaranCrusader,\r\n  customYogg, customFortuneTeller } from './HelperFunctions';\r\n\r\nconst Specials = (props) => {\r\n\r\n  const cardID = props.cardID\r\n  const deviceType = props.deviceType\r\n\r\n  const RenderSoundArrays = (props) => {\r\n      if (cardID == 'OG_280') return <SoundButtonArray sounds={customCthun}/>\r\n      else if (cardID == 'LOOT_108') return <SoundButtonArray sounds={customAluneth}/>\r\n      else if (cardID == 'LOOT_420') return <SoundButtonArray sounds={customSkulloftheManari}/>\r\n      else if (cardID == 'KAR_114') return <SoundButtonArray sounds={customBarnes}/>\r\n      else if (cardID == 'DAL_058') return <SoundButtonArray sounds={customHecklebot}/>\r\n      else if (cardID == 'LOOT_013') return <SoundButtonArray sounds={customVulgarHomunculus}/>\r\n      else if (cardID == 'AT_114') return <SoundButtonArray sounds={customEvilHeclkerDalaranCrusader}/>\r\n      else if (cardID == 'DAL_085') return <SoundButtonArray sounds={customEvilHeclkerDalaranCrusader}/>\r\n      else if (cardID == 'DMF_004') return <SoundButtonArray sounds={customYogg}/>\r\n      else if (cardID == 'DMF_121') return <SoundButtonArray sounds={customFortuneTeller}/>\r\n      else return (<></>)\r\n  }\r\n\r\n  const SoundButtonArray = (props) => {\r\n    return (\r\n      <>\r\n        <View style={{flexDirection: 'row', paddingBottom: 8}}>\r\n            <Text style={{paddingTop: 4, alignSelf: 'flex-start', fontWeight: 'bold', width: \"15%\", fontSize: deviceType == 'mobile' ? 10.5 : 14}}>Special</Text>\r\n          <View style={{flexDirection: 'row', flexWrap: 'wrap', width: \"85%\"}}>\r\n            {props.sounds.map(sound => (\r\n              <SoundButton title={sound[0]} cardID={cardID} sound={sound[1]} deviceType={deviceType}/>\r\n            ))}\r\n          </View>\r\n        </View>\r\n        <SoundDivider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{alignSelf: 'flex-start', width: \"100%\"}}>\r\n      <RenderSoundArrays/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Specials\r\n","import React from 'react';\r\nimport {Image} from 'react-native';\r\n\r\nconst SmallSetImage = (props) => {\r\n  const cardSet = props.cardSet\r\n\r\n  function cardImage() {\r\n    switch (cardSet) {\r\n      case 'CORE':\r\n        return require('./assets/img/GryphonIcon.png')\r\n        break;\r\n      case 'EXPERT1':\r\n        return require('./assets/img/Set1_Icon.png')\r\n        break;\r\n      case 'VANILLA':\r\n        return require('./assets/img/ClassicIcon.png')\r\n        break;\r\n      case 'HOF':\r\n        return require('./assets/img/HallOfFameIcon.png')\r\n        break;\r\n      case 'NAXX':\r\n        return require('./assets/img/NaxxIcon.png')\r\n        break;\r\n      case 'GVG':\r\n        return require('./assets/img/GvGIcon.png')\r\n        break;\r\n      case 'BRM':\r\n        return require('./assets/img/BRMIcon.png')\r\n        break;\r\n      case 'TGT':\r\n        return require('./assets/img/TGTIcon.png')\r\n        break;\r\n      case 'LOE':\r\n        return require('./assets/img/LOEIcon.png')\r\n        break;\r\n      case 'OG':\r\n        return require('./assets/img/OGIcon.png')\r\n        break;\r\n      case 'KARA':\r\n        return require('./assets/img/KaraIcon.png')\r\n        break;\r\n      case 'GANGS':\r\n        return require('./assets/img/GangsIcon.png')\r\n        break\r\n      case 'UNGORO':\r\n        return require('./assets/img/UNGIcon.png')\r\n        break;\r\n      case 'ICECROWN':\r\n        return require('./assets/img/ICCIcon.png')\r\n        break;\r\n      case 'LOOTAPALOOZA':\r\n        return require('./assets/img/LOOTIcon.png')\r\n        break;\r\n      case 'GILNEAS':\r\n        return require('./assets/img/GILIcon.png')\r\n        break;\r\n      case 'BOOMSDAY':\r\n        return require('./assets/img/BOTIcon.png')\r\n        break;\r\n      case 'TROLL':\r\n        return require('./assets/img/TRLIcon.png')\r\n        break;\r\n      case 'DALARAN':\r\n        return require('./assets/img/DALIcon.png')\r\n        break;\r\n      case 'ULDUM':\r\n        return require('./assets/img/UldumIcon.png')\r\n        break\r\n      case 'DRAGONS':\r\n        return require('./assets/img/DRGIcon.png')\r\n        break;\r\n      case 'YEAR_OF_THE_DRAGON':\r\n        return require('./assets/img/DRGIcon_MiniSet.png')\r\n        break;\r\n      case 'DEMON_HUNTER_INITIATE':\r\n        return require('./assets/img/DHIIcon.png')\r\n        break;\r\n      case 'BLACK_TEMPLE':\r\n        return require('./assets/img/BTIcon.png')\r\n        break\r\n      case 'SCHOLOMANCE':\r\n        return require('./assets/img/SCHIcon.png')\r\n        break;\r\n      case 'DARKMOON_FAIRE':\r\n        return require('./assets/img/DMFIcon.png')\r\n        break;\r\n      case 'DARKMOON_RACES':\r\n        return require('./assets/img/DMFIcon_MiniSet.png')\r\n        break;\r\n      case 'THE_BARRENS':\r\n        return require('./assets/img/BARIcon.png')\r\n        break;\r\n      default:\r\n        return require('./assets/img/Set1_Icon.png')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Image style={{width: 34, height: 34}} source={cardImage()}/>\r\n  )\r\n}\r\n\r\nexport default SmallSetImage;\r\n","import React, { useState } from 'react';\r\nimport MinionSounds from './MinionSounds';\r\nimport HeroSounds from './HeroSounds';\r\nimport TokensFlatList from './TokensFlatList'\r\nimport SpecialsFlatList from './SpecialsFlatList';\r\nimport Specials from './Specials';\r\nimport SmallSetImage from './SmallSetImage';\r\nimport SoundDivider from './SoundDivider'\r\nimport { StyleSheet, Text, View, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport heroes from './assets/heroes.json';\r\nimport {sortCards, tokenIDs, heroIDs, cardVersionGroup, battlegroundFlavor, battlegroundRetired, battlegroundCard} from './HelperFunctions'\r\n\r\nconst Card = (props) => {\r\n\r\n  const scrollViewRef = React.useRef()\r\n\r\n  const cardID = props.card.id\r\n  const isHero = heroIDs.includes(cardID)\r\n  const imgSrc = getImage(cardID)\r\n\r\n  function getImage(cardID) {\r\n\r\n    if (heroIDs.includes(cardID) || cardID == 'EX1_323h') {\r\n      return 'https://hearthstonesounds.s3.amazonaws.com/' + cardID + '.png'\r\n    } else if (props.battlegrounds) {\r\n      return 'https://hearthstonesounds.s3.amazonaws.com/' + cardID + '_BG.png'\r\n    } else {\r\n      return 'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/' + cardID + '.png'\r\n    }\r\n  }\r\n\r\n  function goToTop() {\r\n      scrollViewRef.current.scrollTo({ animated: true, x: 0 })\r\n  }\r\n\r\n  function findFlavor() {\r\n    if (isHero) {\r\n      return heroes.find(x => x.id == cardID).flavorText\r\n    }\r\n    else if (!props.battlegrounds) {\r\n      return props.card.flavor\r\n    }\r\n    else if (props.battlegrounds && battlegroundCard(cardID).heroSpecific) {\r\n      return battlegroundFlavor(cardID)\r\n    } else if (props.battlegrounds && battlegroundRetired(cardID)) {\r\n      return 'This card is retired and no longer appears in Battlegrounds.'\r\n    }\r\n  }\r\n\r\n  const openNewCard = (newID, addToCardsList=true) => {\r\n    goToTop()\r\n    props.openNewCard(newID, addToCardsList)\r\n  }\r\n\r\n  const closeCards = () => {\r\n    props.closeCards()\r\n  }\r\n\r\n  const SoundLayout = (props) => {\r\n    if (props.card.type == 'MINION') {return (<MinionSounds card={props.card} deviceType={props.deviceType}/>)}\r\n    else if (props.card.type == 'HERO') {return(<HeroSounds cardID={cardID} deviceType={props.deviceType}/>)}\r\n    else {return (<></>)}\r\n  }\r\n\r\n  function imageHeight() {\r\n    if (props.deviceType == 'mobile')\r\n      return \"65%\"\r\n    else if (isHero)\r\n      return 345\r\n    else if (props.battlegrounds)\r\n      return 395\r\n    else\r\n      return 388\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    image: {\r\n      aspectRatio: 1.5,\r\n      height: imageHeight(),\r\n      width: '100%',\r\n      resizeMode: 'contain'\r\n    },\r\n    switchSetStyle: {\r\n      height: '100%', width:40, resizeMode: 'contain'\r\n    }\r\n  })\r\n\r\n  const SetSwitcher = () => {\r\n    const versionGroup = cardVersionGroup(cardID)\r\n    const hasSwitchSet = versionGroup != undefined\r\n    const [switchSet, setSwitcherSet] = useState(hasSwitchSet ? {\r\n      \"core\": versionGroup.core == cardID,\r\n      \"wild\": versionGroup.wild == cardID,\r\n      \"classic\": versionGroup.wild == cardID\r\n    } : {\"core\": false, \"wild\": false, \"classic\": false})\r\n\r\n    return (\r\n      <>\r\n      { hasSwitchSet ?\r\n        <View style={{justifyContent: 'center', height: 40, flexDirection: 'row', position: 'absolute', top: 0, right: 0, left: 0, zIndex : 1}}>\r\n          {versionGroup.core != undefined ? <TouchableOpacity onPress={() => {\r\n            if(cardID != versionGroup.core) {\r\n              setSwitcherSet({\"core\": true, \"wild\": false, \"classic\": false})\r\n              openNewCard(versionGroup.core, false)\r\n            }\r\n          }}><Image source={require(switchSet.core ? './assets/img/GryphonIconSelected.png' : './assets/img/GryphonIcon.png')} style={styles.switchSetStyle}/></TouchableOpacity> : <></>}\r\n          {versionGroup.wild != undefined ? <TouchableOpacity onPress={() => {\r\n            if(cardID != versionGroup.wild) {\r\n              setSwitcherSet({\"core\": false, \"wild\": true, \"classic\": false})\r\n              openNewCard(versionGroup.wild, false)\r\n            }\r\n          }}><Image source={require(switchSet.wild ? './assets/img/Set1_IconSelected.png' : './assets/img/Set1_Icon.png')} style={styles.switchSetStyle}/></TouchableOpacity> : <></>}\r\n          {versionGroup.classic ? <TouchableOpacity onPress={() => {\r\n            if(cardID != versionGroup.classic) {\r\n              setSwitcherSet({\"core\": false, \"wild\": false, \"classic\": true})\r\n              openNewCard(versionGroup.classic, false)\r\n            }\r\n          }}><Image source={require(switchSet.classic ? './assets/img/ClassicIconSelected.png' : './assets/img/ClassicIcon.png')} style={styles.switchSetStyle}/></TouchableOpacity> : <></>}\r\n        </View>\r\n        : <></>\r\n      }\r\n    </>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {props.previousCardExists ?\r\n        <TouchableOpacity style={{position: 'absolute', top: 0, left: 0, zIndex : 1}} onPress={() => {\r\n            goToTop()\r\n            props.returnToPreviousCard()}}\r\n            >\r\n          <Ionicons name=\"md-arrow-round-back\" size={36} color=\"#bdbdbd\" />\r\n        </TouchableOpacity>\r\n        : <></>\r\n      }\r\n      <TouchableOpacity style={{position: 'absolute', top: 0, right: 0, zIndex : 1}} onPress={() => {\r\n          props.closeCards()}}\r\n          >\r\n        <Ionicons name=\"md-close\" size={36} color=\"#bdbdbd\" />\r\n      </TouchableOpacity>\r\n      <SetSwitcher/>\r\n      <View style={{ flex: 1, padding: 8, alignItems: 'center'}}>\r\n      <Image source={{uri: imgSrc}} style={styles.image}/>\r\n\r\n        <ScrollView style={{width: \"100%\"}} ref={scrollViewRef}>\r\n            <Text style={{padding: 16}}>{findFlavor()}</Text>\r\n            <SoundDivider/>\r\n            <SoundLayout card={props.card} deviceType={props.deviceType}/>\r\n\r\n            <TokensFlatList cardID={cardID} openNewCard={openNewCard} closeCard={closeCards} battlegrounds={props.battlegrounds}/>\r\n            <SpecialsFlatList cardID={cardID} openNewCard={openNewCard} closeCard={closeCards}/>\r\n            <Specials cardID={cardID}/>\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport { ActivityIndicator, Text, View, Image, Button, TouchableWithoutFeedback, FlatList} from 'react-native';\r\n\r\nconst FlatListItemSeparator = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: 1,\r\n        width: \"100%\",\r\n        opacity: 0.25,\r\n        backgroundColor: \"#000000\",\r\n        marginRight: 8\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FlatListItemSeparator\r\n","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, TouchableWithoutFeedback, Switch, Linking } from 'react-native';\r\nimport SoundDivider from './SoundDivider'\r\n\r\nconst InfoModal = (props) => {\r\n\r\n  const styles = StyleSheet.create({\r\n    button: {\r\n      alignItems: \"center\", padding: 10, justifyContent: 'center', backgroundColor: \"#2196F3\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    text: {\r\n      alignItems: \"center\", justifyContent: 'center', fontSize: props.deviceType == 'mobile' ? 12 : 14,\r\n    },\r\n    textSmall: {\r\n      alignItems: \"center\", justifyContent: 'center', fontSize: props.deviceType == 'mobile' ? 8 : 10,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={{position: 'absolute',\r\n      top: props.deviceType == 'mobile' ? '10%' : '30%',\r\n      left: 0, right: 0, marginLeft: 'auto', marginRight: 'auto',\r\n      zIndex: 1, backgroundColor: 'white',\r\n      visibility:props.infoModalVisibility,\r\n      padding: 16,\r\n      textAlign: 'center',\r\n      width: props.deviceType == 'mobile' ? '75%' : '25%',\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5}} >\r\n      <Text style={[styles.text, {padding: 8}]}>Welcome to the best source of Hearthstone sounds! Thank you for using HearthSFX.</Text>\r\n      <Text style={[styles.text, {padding: 8}]}>{'For inquiries, suggestions, or ideas please reach out to me at '}\r\n        <TouchableWithoutFeedback href={'mailto:hearthsfx@gmail.com'} accessibilityRole=\"link\" target=\"_blank\" >\r\n          <View>\r\n            <Text style={{color:'blue', textDecorationLine: 'underline'}}>hearthsfx@gmail.com</Text>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        <Text>, </Text>\r\n        <TouchableWithoutFeedback href={'https://twitter.com/HearthSFX'} accessibilityRole=\"link\" target=\"_blank\" >\r\n          <View>\r\n            <Text style={{color:'blue', textDecorationLine: 'underline'}}>Twitter</Text>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        <Text>, or on Discord at BlackLedger#6577.</Text>\r\n      </Text>\r\n      <SoundDivider/>\r\n      <View style={{paddingBottom: 8}}>\r\n        <Text style={[styles.text, {paddingBottom: 8}]}>Interested in helping cover some of the hosting costs? Support me using any of the following:</Text>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space', alignItems: 'center', paddingBottom: 8}}>\r\n            <TouchableWithoutFeedback href={'https://ko-fi.com/hearthsfx'}\r\n            accessibilityRole=\"link\" target=\"_blank\" >\r\n              <Image style={{width: 34, height: 34}} source={require('./assets/img/kofi.png')}/>\r\n            </TouchableWithoutFeedback>\r\n          <Text style={[styles.text, {paddingLeft: 8}]}>Ko-fi</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space', alignItems: 'center', paddingBottom: 8}}>\r\n          <TouchableWithoutFeedback href={'bitcoin:35W3nrEVSq7BdrnXc4ZPGPVMFFhDhmxLR2'}\r\n          accessibilityRole=\"link\" target=\"_blank\" >\r\n            <Image style={{width: 34, height: 34}} source={require('./assets/img/bitcoin.png')}/>\r\n          </TouchableWithoutFeedback>\r\n          <Text style={[styles.text, {paddingLeft: 8, wordBreak: 'break-word'}]}>35W3nrEVSq7BdrnXc4ZPGPVMFFhDhmxLR2</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space', alignItems: 'center', paddingBottom: 8}}>\r\n          <TouchableWithoutFeedback href={'litecoin:MWYuAdzNKRDtocskRmqFwpMD9Fg9U7Yr5R'}\r\n          accessibilityRole=\"link\" target=\"_blank\" >\r\n            <Image style={{width: 34, height: 34}} source={require('./assets/img/litecoin.png')}/>\r\n          </TouchableWithoutFeedback>\r\n          <Text style={[styles.text, {paddingLeft: 8, wordBreak: 'break-word'}]}>MWYuAdzNKRDtocskRmqFwpMD9Fg9U7Yr5R</Text>\r\n        </View>\r\n      </View>\r\n      <SoundDivider/>\r\n      <Text style={[styles.text, {paddingBottom: 8}]}>{'Version 1.0.9\\nHearthstone Patch 20.0.0.77662 (partial)'}</Text>\r\n      <SoundDivider/>\r\n      <Text style={[styles.textSmall, {paddingBottom: 8}]}>{'HearthSFX is not affiliated with or endorsed by Blizzard Entertainment. Images, sounds, and descriptions are trademarked and subject to copyright below.'}</Text>\r\n      <Text style={[styles.textSmall, {paddingBottom: 8}]}>{'Hearthstone®: Heroes of Warcraft™\\n©2014 Blizzard Entertainment, Inc. All rights reserved. Heroes of Warcraft is a trademark, and Hearthstone is a registered trademark of Blizzard Entertainment, Inc. in the U.S. and/or other countries.'}</Text>\r\n\r\n      <TouchableOpacity style={styles.button} onPress= {props.closeInfoModal}>\r\n        <Text style={[styles.text, {color: 'white'}]}>Close</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default InfoModal\r\n","import React from 'react';\r\nimport { useFonts, Roboto_900Black, Roboto_500Medium, Roboto_700Bold} from '@expo-google-fonts/roboto';\r\nimport {Text} from 'react-native';\r\n\r\nconst ToolbarTitle = () => {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Roboto_700Bold,\r\n  });\r\n\r\n  const title = 'HearthSFX'\r\n\r\n  if(!fontsLoaded) {\r\n    return (<></>)\r\n  }\r\n  else {\r\n    return (<Text style={{fontFamily: Roboto_700Bold, fontSize: 20, color: 'white', fontWeight: '500'}}>{title}</Text>)\r\n  }\r\n}\r\n\r\nexport default ToolbarTitle\r\n","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, Button, TouchableOpacity, TouchableWithoutFeedback, FlatList, StatusBar, Switch, Linking } from 'react-native';\r\nimport data from './assets/cards.json';\r\nimport SmallClassImage from './SmallClassImage';\r\nimport TechLevelImage from './TechLevelImage'\r\nimport TribeImage from './TribeImage'\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider';\r\nimport Card from './Card';\r\nimport FlatListItemSeparator from './FlatListItemSeparator';\r\nimport InfoModal from './InfoModal'\r\nimport { NavigationContainer, useScrollToTop, useIsFocused } from '@react-navigation/native';\r\nimport { Toolbar } from 'react-native-material-ui';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport ToolbarTitle from './ToolbarTitle'\r\nimport * as Analytics from 'expo-firebase-analytics';\r\nimport DeviceInfo from 'react-native-device-info';\r\nimport {generalCards, heroCards, bgCards, duelsCards, tokenIDs, duelsIDs, battlegroundTribe, battlegroundToken, battlegroundHeroSpecific, battlegroundFlavor, battlegroundRetired, battlegroundTechLevel, altSoundsID} from './HelperFunctions'\r\n\r\nconst CardListTab = ( { route, navigation, state }) => {\r\n\r\n\r\n  DeviceInfo.getUserAgent().then(userAgent => {\r\n    setDeviceType(String(userAgent).toLowerCase().includes(\"mobi\") ? 'mobile' : 'desktop')\r\n  })\r\n\r\n  // State variables\r\n  const [deviceType, setDeviceType] = useState('')\r\n  const [includeNonCollectible, setIncludeNonCollectible] = useState(false)\r\n  const [includeRarities, setIncludeRarities] = useState([[[undefined,'FREE','COMMON'], true], ['RARE', true], ['EPIC', true], ['LEGENDARY', true]]) // Array represents Free/Common, Rare, Epic, Legendary\r\n  const [includeTypes, setIncludeTypes] = useState([['MINION',true], ['HERO',true], ['SPELL',false], ['WEAPON',false]]) // Array represents Minions, Heroes, Spells, Weapons\r\n  const [includeBGTokens, setIncludeBGTokens] = useState(false)\r\n  const [includeBGHeroSpecific, setIncludeBGHeroSpecific] = useState(false)\r\n  const [includeBGRetired, setIncludeBGRetired] = useState(false)\r\n  const [includeBGTiers, setIncludeBGTiers] = useState([[1, true], [2, true], [3, true], [4, true], [5, true], [6, true]]) // Array represents Tier 1, 2, ...\r\n  const [includeBGTribes, setIncludeBGTribes] = useState([['Beast',true],['Demon',true],['Dragon',true],['Mech',true],['Murloc',true],['Pirate',true],['Elemental',true],['Neutral',true]])\r\n  const [cardDisplayed, setCardDisplayed] = useState('none')\r\n  const [card, setCard] = useState([])\r\n  const [myCardData, setMyCardData] = useState([])\r\n  const [cards, setCards] = useState([])\r\n  const [loadLimit, setLoadLimit] = useState(100)\r\n  const [showFooter, setShowFooter] = useState(true)\r\n  const [filterMenuVisibility, setFilterMenuVisibility] = useState('hidden')\r\n  const [infoModalVisibility, setInfoModalVisibility] = useState('hidden')\r\n\r\n  // Used to move to top of card list on nav to tab.\r\n  const flatListRef = React.useRef()\r\n  useScrollToTop(flatListRef)\r\n\r\n  var {cardSet} = route.params\r\n  const typeFilter = route.name\r\n  var {cardID} = route.params\r\n\r\n  useEffect(() => {\r\n    if(cardID != '' && cardID != undefined)\r\n      setCardDisplayed('')\r\n    else\r\n      setCardDisplayed('none')\r\n  })\r\n\r\n  function filterCards(searchCriteria, applyLoadLimit, increaseLoadLimit,\r\n    newTypeFilter, newNonCollectibleFilter,newRarityFilter,\r\n    newBGTokensFilter, newBGTierFilter, newBGTribeFilter, newHeroSpecificFilter, newRetiredFilter) {\r\n    var filteredData\r\n    if (typeFilter == 'Cards') {\r\n\r\n      var rarityMap = (newRarityFilter == null ? includeRarities : newRarityFilter).map(x => x[1] ? x[0] : '')\r\n      rarityMap = (rarityMap[0].concat(rarityMap.slice(1))) // Concat the first element (undefined, 'FREE', 'COMMON') with the rest for easier mapping.\r\n      const typeMap = (newTypeFilter == null ? includeTypes : newTypeFilter).map(x => x[1] ? x[0] : '')\r\n\r\n      // Darkmoon Races technically belongs to the Darkmoon Fair set, but implement special logic so they can be broken out too.\r\n      if (cardSet == 'DARKMOON_RACES') {\r\n        filteredData = generalCards.filter(x =>\r\n          typeMap.includes(x.type)\r\n          && rarityMap.includes(x.rarity)\r\n          && (x.collectible == true || tokenIDs.includes(((newNonCollectibleFilter == null) ? includeNonCollectible : newNonCollectibleFilter) ? x.id : 'N/A'))\r\n          && ((x.id).toString().slice(0,3) == 'YOP')\r\n          && ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n        )\r\n      } else {\r\n        filteredData = generalCards.filter(x =>\r\n          typeMap.includes(x.type)\r\n          && rarityMap.includes(x.rarity)\r\n          && (x.collectible == true || tokenIDs.includes(((newNonCollectibleFilter == null) ? includeNonCollectible : newNonCollectibleFilter) ? x.id : 'N/A'))\r\n          && (x.set == cardSet || cardSet == 'all')\r\n          && ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n        )\r\n      }\r\n\r\n\r\n      if(applyLoadLimit && !increaseLoadLimit) {\r\n        filteredData = filteredData.slice(0, loadLimit)\r\n        setMyCardData(filteredData)\r\n      } else if (increaseLoadLimit) {\r\n        filteredData = filteredData.slice(loadLimit,loadLimit+100)\r\n        setMyCardData(myCardData.concat(filteredData))\r\n      } else {\r\n        setMyCardData(filteredData)\r\n      }\r\n    }\r\n\r\n    else if (typeFilter == 'Battlegrounds') {\r\n      const tierMap = (newBGTierFilter == null ? includeBGTiers : newBGTierFilter).map(x => x[1] ? x[0] : 0)\r\n      const tokenFilter = (newBGTokensFilter == null ? includeBGTokens : newBGTokensFilter)\r\n      const heroSpecificFilter = (newHeroSpecificFilter == null ? includeBGHeroSpecific : newHeroSpecificFilter)\r\n      const retiredFilter = (newRetiredFilter == null ? includeBGRetired : newRetiredFilter)\r\n      const tribeMap = (newBGTribeFilter == null ? includeBGTribes : newBGTribeFilter).map(x => x[1] ? x[0] : 0)\r\n\r\n      setMyCardData(bgCards.filter(x =>\r\n          (!battlegroundToken(x.id) || battlegroundToken(x.id) == tokenFilter) &&\r\n          (battlegroundTechLevel(x) == undefined || tierMap.includes(battlegroundTechLevel(x))) &&\r\n          (!battlegroundHeroSpecific(x.id) || battlegroundHeroSpecific(x.id) == heroSpecificFilter) &&\r\n          (!battlegroundRetired(x.id) || battlegroundRetired(x.id) == retiredFilter) &&\r\n          tribeMap.includes(battlegroundTribe(x.id)) &&\r\n          ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n        )\r\n      )\r\n    }\r\n\r\n    else if (typeFilter == 'Duels') {\r\n      setMyCardData(duelsCards.filter(x =>\r\n          ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n        )\r\n      )\r\n    }\r\n\r\n    else if (typeFilter == 'Heroes') {\r\n      setMyCardData(heroCards.filter(x =>\r\n        ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n      ))\r\n    }\r\n  }\r\n\r\n  function search(criteria) {\r\n    if(criteria != \"\" && criteria != null) {\r\n      filterCards(criteria, false, false)\r\n      setShowFooter(false)\r\n    }\r\n    else {\r\n      filterCards(null, true, false)\r\n      setShowFooter(true)\r\n    }\r\n  }\r\n\r\n  navigation.addListener('tabPress', e => {\r\n    console.log('tabPress activated')\r\n\r\n    if (typeFilter == 'Cards') {\r\n      cardID = null\r\n      navigation.navigate(\r\n        'Cards',\r\n        {cardSet: 'all'}\r\n      )\r\n    } else if (typeFilter == 'Heroes') {\r\n      filterCards()\r\n      navigation.navigate(\r\n        'Heroes'\r\n      )\r\n      focus()\r\n    } else if (typeFilter == 'Battlegrounds') {\r\n      filterCards()\r\n      navigation.navigate(\r\n        'Battlegrounds'\r\n      )\r\n    }\r\n    focus()\r\n  })\r\n\r\n  navigation.addListener('focus', e => {\r\n    focus()\r\n  })\r\n\r\n  function focus() {\r\n    goToTop()\r\n    Analytics.setCurrentScreen('CardListTab ' + typeFilter)\r\n\r\n    if (typeFilter == 'Cards' && cardSet != 'all') {\r\n      filterCards(null, false, false)\r\n\r\n    }\r\n    else if (typeFilter == 'Cards' && cardSet == 'all') {\r\n      filterCards(null, true, false)\r\n    }\r\n    else if (['Heroes', 'Battlegrounds', 'Duels'].includes(typeFilter)) {\r\n      filterCards()\r\n    }\r\n\r\n    if (cardID != '') {\r\n      const cardToShow = data.find(x => x.id == cardID)\r\n\r\n      if (cardToShow != undefined) {\r\n        showCard(cardToShow)\r\n      }\r\n\r\n    }\r\n    else {\r\n      navigation.setParams({\r\n        cardID: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  function goToTop() {\r\n    flatListRef.current.scrollToOffset({ animated: true, offset: 0 })\r\n  }\r\n\r\n  function showCard(card) {\r\n    setCard(card)\r\n    setCards([card])\r\n    setFilterMenuVisibility('hidden')\r\n    setInfoModalVisibility('hidden')\r\n    navigation.setParams({\r\n      cardID: card.id\r\n    })\r\n  }\r\n\r\n  const returnToPreviousCard = () => {\r\n    setCard(cards[cards.length-2])\r\n    navigation.setParams({\r\n      cardID: cards[cards.length-2].id\r\n    })\r\n    cards.pop()\r\n  }\r\n\r\n  const CardListFooter = () => {\r\n\r\n    if (typeFilter != 'Cards') {\r\n      return (<></>)\r\n    } else {\r\n      var rarityMap = includeRarities.map(x => x[1] ? x[0] : '')\r\n      rarityMap = (rarityMap[0].concat(rarityMap.slice(1))) // Concat the first element (undefined, 'FREE', 'COMMON') with the rest for easier mapping.\r\n      const typeMap = includeTypes.map(x => x[1] ? x[0] : '')\r\n\r\n      return (\r\n        <>\r\n        { (myCardData.length < generalCards.filter(x =>\r\n          typeMap.includes(x.type)\r\n          && rarityMap.includes(x.rarity)\r\n          && (x.set === cardSet || cardSet === 'all')\r\n          && (x.collectible == true || tokenIDs.includes(includeNonCollectible ? x.id : 'N/A'))).length && showFooter) ?\r\n          <TouchableOpacity style={styles.button} onPress= {() => {\r\n            filterCards(null, false, true)\r\n            setLoadLimit(loadLimit+100)\r\n          }}>\r\n            <Text style={styles.text}>Load More</Text>\r\n          </TouchableOpacity>\r\n          : <></>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const FilterMenu = () => {\r\n    if (typeFilter == 'Cards') {\r\n      return (<MinionFilters/>)\r\n    } else if (typeFilter == 'Battlegrounds') {\r\n      return (<BattlegroundFilters/>)\r\n    } else\r\n      return (<></>)\r\n  }\r\n\r\n  const MinionFilters = () => {\r\n    return (\r\n      <View style={styles.filterMenu}>\r\n        <View style={{paddingBottom: 16, paddingHorizontal: 16}}>\r\n          <TypeFilter name='Minion'  index={0} />\r\n          <TypeFilter name='Heroes'  index={1} />\r\n          <TypeFilter name='Spells'  index={2} />\r\n          <TypeFilter name='Weapons' index={3} />\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16, paddingBottom: 16}}>\r\n            <Text style={{paddingRight: 16}}>Non-Collectible</Text>\r\n            <Switch onValueChange={(newNonCollectibleFilter) => {\r\n              setIncludeNonCollectible(newNonCollectibleFilter)\r\n              filterCards(null, true, false, null, newNonCollectibleFilter)\r\n            }} value={includeNonCollectible} />\r\n          </View>\r\n          <SoundDivider />\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n            <RarityFilter name='common'     index={0} />\r\n            <RarityFilter name='rare'       index={1} />\r\n            <RarityFilter name='epic'       index={2} />\r\n            <RarityFilter name='legendary'  index={3} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const TypeFilter = (props) => {\r\n    var index = props.index\r\n    return (\r\n      <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16}}>\r\n        <Text style={{paddingRight: 16}}>{props.name}</Text>\r\n        <Switch onValueChange={ () => {\r\n            var newTypeFilter = includeTypes.slice(0,index).concat([[includeTypes[index][0],!includeTypes[index][1]]], includeTypes.slice(index+1))\r\n            setIncludeTypes(newTypeFilter)\r\n            filterCards(null, true, false, newTypeFilter)\r\n          }} value={includeTypes[index][1]} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const RarityFilter = (props) => {\r\n    var index = props.index\r\n    return (\r\n      <TouchableOpacity onPress={ () => {\r\n        var newRarityFilter = includeRarities.slice(0,index).concat([[includeRarities[index][0],!includeRarities[index][1]]], includeRarities.slice(index+1))\r\n        setIncludeRarities(newRarityFilter)\r\n        filterCards(null, true, false, null, null, newRarityFilter)\r\n      }}>\r\n        <Image style={{width: 34, height: 44}} source={require('./assets/img/'+props.name+'_gem_small.png')}/>\r\n        <Image style={{width: 34, height: 44, marginTop: -44, visibility: ((includeRarities[index][1] || filterMenuVisibility == 'hidden') ? 'hidden' : 'visible')}} source={require('./assets/img/exclude.png')}/>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  const BattlegroundFilters = () => {\r\n    return (\r\n      <View style={styles.filterMenu} >\r\n        <View style={{padding: 16}}>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n            <Text style={{paddingRight: 16}}>Tokens</Text>\r\n            <Switch onValueChange={(newBGTokensFilter) => {\r\n              setIncludeBGTokens(newBGTokensFilter)\r\n              filterCards(null, true, false, null, null, null, newBGTokensFilter)\r\n            }} value={includeBGTokens} />\r\n          </View>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16}}>\r\n            <Text style={{paddingRight: 16}}>Hero-Specific</Text>\r\n            <Switch onValueChange={(newBGHeroSpecificFilter) => {\r\n              setIncludeBGHeroSpecific(newBGHeroSpecificFilter)\r\n              filterCards(null, true, false, null, null, null, null, null, null, newBGHeroSpecificFilter)\r\n            }} value={includeBGHeroSpecific} />\r\n          </View>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16, paddingBottom: 16}}>\r\n            <Text style={{paddingRight: 16}}>Retired</Text>\r\n            <Switch onValueChange={(newRetiredFilter) => {\r\n              setIncludeBGRetired(newRetiredFilter)\r\n              filterCards(null, true, false, null, null, null, null, null, null, null, newRetiredFilter)\r\n            }} value={includeBGRetired} />\r\n          </View>\r\n          <SoundDivider />\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n            <TierFilter tier={1}/>\r\n            <TierFilter tier={2}/>\r\n            <TierFilter tier={3}/>\r\n          </View>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8, paddingBottom: 16}}>\r\n            <TierFilter tier={4}/>\r\n            <TierFilter tier={5}/>\r\n            <TierFilter tier={6}/>\r\n          </View>\r\n          <SoundDivider />\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n            <TribeFilter index={0} name={'beasts'}/>\r\n            <TribeFilter index={1} name={'demons'}/>\r\n            <TribeFilter index={2} name={'dragons'}/>\r\n          </View>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n            <TribeFilter index={3} name={'mechs'}/>\r\n            <TribeFilter index={4} name={'murlocs'}/>\r\n            <TribeFilter index={5} name={'pirates'}/>\r\n          </View>\r\n          <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n            <TribeFilter index={6} name={'elementals'}/>\r\n            <TribeFilter index={7} name={'neutrals'}/>\r\n            <View style={{padding: 16}} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const TierFilter = (props) => {\r\n    var tier = props.tier\r\n    return (\r\n      <View style={{paddingHorizontal: 4}}>\r\n        <TouchableOpacity onPress={() => {\r\n          var newBGTierFilter = includeBGTiers.slice(0,tier-1).concat([[tier,!includeBGTiers[tier-1][1]]], includeBGTiers.slice(tier))\r\n          filterCards(null, true, false, null, null, null, null, newBGTierFilter, null)\r\n          setIncludeBGTiers(newBGTierFilter)\r\n        }}>\r\n          <Image style={{width: 42, height: 44}} source={require('./assets/img/techlevel'+tier+'.png')}/>\r\n          <Image style={{width: 34, height: 44, marginTop: -44, marginLeft: 4, visibility: ((includeBGTiers[tier-1][1] || filterMenuVisibility == 'hidden') ? 'hidden' : 'visible')}} source={require('./assets/img/exclude.png')}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const TribeFilter = (props) => {\r\n    var index = props.index\r\n    return (\r\n      <TouchableOpacity onPress={() => {\r\n        var newBGTribeFilter = includeBGTribes.slice(0,index).concat([[includeBGTribes[index][0],!includeBGTribes[index][1]]], includeBGTribes.slice(index+1))\r\n        filterCards(null, true, false, null, null, null, null, null, newBGTribeFilter)\r\n        setIncludeBGTribes(newBGTribeFilter)\r\n      }}>\r\n        <Image style={{width: 34, height: 34}} source={require('./assets/img/bg_'+props.name+'.png')}/>\r\n        <Image style={{width: 26.15, height: 34, marginTop: -32, marginLeft: 4, visibility: ((includeBGTribes[index][1] || filterMenuVisibility == 'hidden') ? 'hidden' : 'visible')}} source={require('./assets/img/exclude.png')}/>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    button: {\r\n      alignItems: \"center\", padding: 10, justifyContent: 'center', backgroundColor: \"#2196F3\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    text: {\r\n      alignItems: \"center\", justifyContent: 'center', color: \"white\", fontSize: 14,\r\n    },\r\n    filterMenu:\r\n      {position: 'absolute', right:48, top:56, zIndex: 1, backgroundColor: 'white', visibility:filterMenuVisibility,\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    }\r\n  })\r\n\r\n  return (\r\n\r\n      <>\r\n      <Toolbar\r\n          centerElement={<ToolbarTitle deviceType = {deviceType} />}\r\n          isSearchActive={false}\r\n          searchable={{\r\n            autoFocus: true,\r\n            placeholder: 'Search',\r\n            onChangeText: (criteria) => { search(criteria) },\r\n            onSearchClosed: () => {\r\n              filterCards(null, true)\r\n              setShowFooter(true)},\r\n            onSearchPressed: () => {\r\n              setFilterMenuVisibility('hidden')\r\n              setInfoModalVisibility('hidden')\r\n            }\r\n          }}\r\n          rightElement= {\r\n            <>\r\n              <TouchableOpacity style={{paddingTop: 8, paddingRight: 8}} onPress={() => {\r\n                infoModalVisibility == 'hidden' ? setInfoModalVisibility('visible') : setInfoModalVisibility('hidden')\r\n              }}>\r\n                <MaterialCommunityIcons name=\"information-outline\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n              {typeFilter == 'Cards' || typeFilter == 'Battlegrounds' ?\r\n                <TouchableOpacity style={{paddingTop: 8}} onPress={() => {\r\n                    filterMenuVisibility == 'hidden' ? setFilterMenuVisibility('visible') : setFilterMenuVisibility('hidden')\r\n                  }}>\r\n                <MaterialCommunityIcons name=\"filter-variant\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n            : <></>}\r\n\r\n            </>\r\n          }\r\n        />\r\n        <FilterMenu/>\r\n        <InfoModal closeInfoModal={() => setInfoModalVisibility('hidden')} infoModalVisibility={infoModalVisibility} deviceType={deviceType}/>\r\n        <View style={{ flex: 1, padding: 8, flexDirection: 'row'}}>\r\n            <View style={{flex: (cardDisplayed == 'none' || deviceType == 'desktop') ? 3 : 0}}>\r\n              <FlatList\r\n              data={myCardData}\r\n              keyExtractor={item => item.id}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity onPress= {() => {\r\n                              showCard(item)\r\n                            }}>\r\n\r\n                  <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center'\r\n                  , justifyContent: 'space-between'\r\n                  , marginTop: 4, marginBottom: 4, marginRight: 8}}>\r\n                    { typeFilter == 'Battlegrounds' ?\r\n                        <>\r\n                          <TribeImage tribe={battlegroundTribe(item.id)} deviceType={deviceType}/>\r\n                          <TechLevelImage techlevel={battlegroundTechLevel(item)} deviceType={deviceType}/>\r\n                        </>\r\n                        : <SmallClassImage cardClass={item.cardClass} multiClassGroup={item.multiClassGroup}/>\r\n                    }\r\n\r\n                    <Text style={{flexGrow: 1}} >{item.name}</Text>\r\n                    {item.type == 'MINION' && !['BGS_046t', 'BAR_919t'].includes(item.id) ?\r\n                      <>\r\n                      {['KAR_114','DAL_058','LOOT_013','AT_114','DAL_085','DMF_121'].includes(item.id) ? <></> :\r\n                        <>\r\n                          <SoundButton title='Play' cardID={altSoundsID(item.id)} sound='P' deviceType={deviceType} listButton={true} />\r\n                        </>\r\n                      }\r\n                      {(['DAL_058','LOOT_013'].includes(item.id)) ? <></> :\r\n                        <>\r\n                          <SoundButton title='Attack' cardID={altSoundsID(item.id)} sound='A' deviceType={deviceType} listButton={true}  />\r\n                        </>\r\n                      }\r\n                      <SoundButton title='Death' cardID={altSoundsID(item.id)} sound='D' deviceType={deviceType} listButton={true}  />\r\n                      </>\r\n                      : <></>\r\n                  }\r\n                  </View>\r\n                </TouchableOpacity>\r\n\r\n              )}\r\n              ItemSeparatorComponent={FlatListItemSeparator}\r\n              ListFooterComponent={CardListFooter}\r\n              ref={flatListRef}\r\n            />\r\n            </View>\r\n\r\n            <View style={{flex: 2, justifyContent:'center', display:cardDisplayed}}>\r\n               <Card card={card}\r\n                  battlegrounds={(typeFilter == 'Battlegrounds') ? true : false}\r\n                  openNewCard={(newCardID, addToCardsList=true) => {\r\n                    var newCard = data.find(x => x.id == newCardID)\r\n                    if(addToCardsList)\r\n                      cards.push(newCard)\r\n                    setCard(newCard)\r\n                    navigation.setParams({\r\n                      cardID: newCardID\r\n                    })\r\n                  }}\r\n                  closeCards={() => {\r\n                    navigation.setParams({\r\n                      cardID: ''\r\n                    })\r\n                  }}\r\n                  returnToPreviousCard={returnToPreviousCard}\r\n                  previousCardExists={(cards.length>1) ? true : false}\r\n                  deviceType={deviceType} />\r\n            </View>\r\n          </View>\r\n          </>\r\n        )\r\n      }\r\n\r\nexport default CardListTab;\r\n","import React from 'react';\r\nimport { Text, View, TouchableWithoutFeedback, FlatList} from 'react-native';\r\nimport FlatListItemSeparator from './FlatListItemSeparator';\r\nimport SmallSetImage from './SmallSetImage';\r\nimport cardsets from './assets/cardsets.json';\r\nimport { Toolbar } from 'react-native-material-ui';\r\nimport ToolbarTitle from './ToolbarTitle'\r\nimport * as Analytics from 'expo-firebase-analytics';\r\n\r\nconst SetList = ({ navigation }) => {\r\n  Analytics.setCurrentScreen('SetListTab')\r\n\r\n  const cardSets = cardsets.filter(x => x.craftable === 1)\r\n\r\n  return (\r\n    <>\r\n    <Toolbar centerElement={<ToolbarTitle/>}/>\r\n    <View style={{ flex: 1, padding: 8 }}>\r\n      <FlatList\r\n        data={cardSets}\r\n        renderItem={({ item }) => (\r\n          <TouchableWithoutFeedback onPress= {e => {\r\n              navigation.navigate('Cards', {\r\n                cardSet: item.set,\r\n                cardID: ''\r\n              })\r\n            }\r\n          }>\r\n          <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center'\r\n          , justifyContent: 'space-between'\r\n          , marginTop: 4, marginBottom: 4, marginRight: 8}}>\r\n            <SmallSetImage cardSet={item.set}/>\r\n            <Text style={{flexGrow: 1}}>{item.name}</Text>\r\n          </View>\r\n          </TouchableWithoutFeedback>\r\n        )}\r\n        ItemSeparatorComponent={FlatListItemSeparator}\r\n      />\r\n    </View>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SetList\r\n","import React from 'react';\r\nimport * as Linking from 'expo-linking';\r\nimport CardListTab from './CardListTab';\r\nimport Card from './Card';\r\nimport SetList from './SetList';\r\nimport { View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationEvents } from \"react-navigation\";\r\n\r\nconst App = ({navigation}) => {\r\n  const Tab = createBottomTabNavigator();\r\n  const config = {\r\n    screens: {\r\n      Cards: 'cards/:cardSet?/:cardID?',\r\n      Heroes: 'heroes/:cardID?',\r\n      Sets: 'sets',\r\n      Battlegrounds: 'battlegrounds/:cardID?',\r\n      Duels: 'duels/:cardID?'\r\n    }\r\n  }\r\n  const linking = {\r\n    prefixes: ['https://hearthsfx.github.io'],\r\n    config: config\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer linking={linking}>\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Cards\" component={CardListTab} initialParams = {{cardSet: 'all'}} />\r\n        <Tab.Screen name=\"Heroes\" component={CardListTab} initialParams = {{}} />\r\n        <Tab.Screen name=\"Sets\" component={SetList}/>\r\n        <Tab.Screen name=\"Battlegrounds\" component={CardListTab} initialParams = {{}} />\r\n         \r\n       </Tab.Navigator>\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/HallOfFameIcon.37379c27.png\";","module.exports = __webpack_public_path__ + \"static/media/NaxxIcon.3b105f8e.png\";","module.exports = __webpack_public_path__ + \"static/media/GvGIcon.8743247a.png\";","module.exports = __webpack_public_path__ + \"static/media/BRMIcon.446540f2.png\";","module.exports = __webpack_public_path__ + \"static/media/TGTIcon.253b1f48.png\";","module.exports = __webpack_public_path__ + \"static/media/LOEIcon.9975dfb8.png\";","module.exports = __webpack_public_path__ + \"static/media/OGIcon.53624503.png\";","module.exports = __webpack_public_path__ + \"static/media/KaraIcon.c214d778.png\";","module.exports = __webpack_public_path__ + \"static/media/GangsIcon.be4ad498.png\";","module.exports = __webpack_public_path__ + \"static/media/UNGIcon.01f6a5f3.png\";","module.exports = __webpack_public_path__ + \"static/media/ICCIcon.45a747ea.png\";","module.exports = __webpack_public_path__ + \"static/media/LOOTIcon.edfb0176.png\";","module.exports = __webpack_public_path__ + \"static/media/GILIcon.836508be.png\";","module.exports = __webpack_public_path__ + \"static/media/BOTIcon.e5ff7520.png\";","module.exports = __webpack_public_path__ + \"static/media/TRLIcon.a700a78e.png\";","module.exports = __webpack_public_path__ + \"static/media/DALIcon.88d1b880.png\";","module.exports = __webpack_public_path__ + \"static/media/UldumIcon.76a3f13f.png\";","module.exports = __webpack_public_path__ + \"static/media/DRGIcon.bde25580.png\";","module.exports = __webpack_public_path__ + \"static/media/DRGIcon_MiniSet.a5fcd6d5.png\";","module.exports = __webpack_public_path__ + \"static/media/DHIIcon.3c827183.png\";","module.exports = __webpack_public_path__ + \"static/media/BTIcon.1c69bd42.png\";","module.exports = __webpack_public_path__ + \"static/media/SCHIcon.5e6aa75c.png\";","module.exports = __webpack_public_path__ + \"static/media/DMFIcon.f4c83930.png\";","module.exports = __webpack_public_path__ + \"static/media/DMFIcon_MiniSet.3af851b6.png\";","module.exports = __webpack_public_path__ + \"static/media/BARIcon.b0ffa042.png\";","module.exports = __webpack_public_path__ + \"static/media/GryphonIconSelected.6c7aa2ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Set1_IconSelected.824ca641.png\";","module.exports = __webpack_public_path__ + \"static/media/ClassicIconSelected.4a1d9442.png\";","module.exports = __webpack_public_path__ + \"static/media/kofi.96681ac5.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.ab09bc27.png\";","module.exports = __webpack_public_path__ + \"static/media/litecoin.e0409b43.png\";","var map = {\n\t\"./common_gem_small.png\": 620,\n\t\"./epic_gem_small.png\": 621,\n\t\"./legendary_gem_small.png\": 622,\n\t\"./rare_gem_small.png\": 623\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 619;","module.exports = __webpack_public_path__ + \"static/media/common_gem_small.c3cb9701.png\";","module.exports = __webpack_public_path__ + \"static/media/epic_gem_small.2056dd5b.png\";","module.exports = __webpack_public_path__ + \"static/media/legendary_gem_small.60d2f3cd.png\";","module.exports = __webpack_public_path__ + \"static/media/rare_gem_small.f2054728.png\";","var map = {\n\t\"./techlevel0.png\": 239,\n\t\"./techlevel1.png\": 233,\n\t\"./techlevel2.png\": 234,\n\t\"./techlevel3.png\": 235,\n\t\"./techlevel4.png\": 236,\n\t\"./techlevel5.png\": 237,\n\t\"./techlevel6.png\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 624;","var map = {\n\t\"./bg_beasts.png\": 240,\n\t\"./bg_demons.png\": 241,\n\t\"./bg_dragons.png\": 245,\n\t\"./bg_elementals.png\": 246,\n\t\"./bg_mechs.png\": 242,\n\t\"./bg_murlocs.png\": 244,\n\t\"./bg_neutrals.png\": 247,\n\t\"./bg_pirates.png\": 243\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 625;"],"sourceRoot":""}
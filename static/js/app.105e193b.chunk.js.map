{"version":3,"sources":["assets/img/exclude.png","assets/img/techlevel0.png","assets/img/techlevel1.png","assets/img/techlevel2.png","assets/img/techlevel3.png","assets/img/techlevel4.png","assets/img/techlevel5.png","assets/img/techlevel6.png","assets/img/bg_bartenders.png","assets/img/bg_beasts.png","assets/img/bg_demons.png","assets/img/bg_dragons.png","assets/img/bg_elementals.png","assets/img/bg_mechs.png","assets/img/bg_murlocs.png","assets/img/bg_neutrals.png","assets/img/bg_pirates.png","assets/img/common_gem_small.png","assets/img/epic_gem_small.png","assets/img/legendary_gem_small.png","assets/img/rare_gem_small.png","assets/img/ClassicIcon.png","assets/img/ClassicIconSelected.png","assets/img/GryphonIcon.png","assets/img/GryphonIconSelected.png","assets/img/Set1_Icon.png","assets/img/Set1_IconSelected.png","assets/img/bitcoin.png","assets/img/class_small_deathknight.png","assets/img/class_small_demonhunter.png","assets/img/class_small_druid.png","assets/img/class_small_hunter.png","assets/img/class_small_mage.png","assets/img/class_small_neutral.png","assets/img/class_small_paladin.png","assets/img/class_small_priest.png","assets/img/class_small_rogue.png","assets/img/class_small_shaman.png","assets/img/class_small_warlock.png","assets/img/class_small_warrior.png","assets/img/kofi.png","assets/img/litecoin.png","SoundDivider.js","filters/MinionFilters.js","filters/BattlegroundFilters.js","VolumeContext.js","DeviceContext.js","SoundButton.js","assets/nonLegendaryStingers.js","assets/triggers.js","HelperFunctions.js","MinionSounds.js","HeroSounds.js","TokensFlatList.js","SpecialsFlatList.js","Specials.js","SmallSetImage.js","Card.js","FlatListItemSeparator.js","InfoModal.js","ToolbarTitle.js","VolumeSlider.js","SmallClassImage.js","TribeImage.js","TechLevelImage.js","CardListItem.js","CardListTab.js","SetList.js","App.js","web-build/register-service-worker.js","assets/img sync /^/.*_gem_small/.png$","assets/img sync /^/techlevel.*/.png$","assets/img sync /^/bg_.*s/.png$","assets/img sync /^/.*$","assets/img/AVIcon.png","assets/img/AVIcon_MiniSet.png","assets/img/BARIcon.png","assets/img/BARIcon_MiniSet.png","assets/img/BOTIcon.png","assets/img/BRMIcon.png","assets/img/BTIcon.png","assets/img/BotBIcon.png","assets/img/BotBIcon_MiniSet.png","assets/img/DALIcon.png","assets/img/DHIIcon.png","assets/img/DMFIcon.png","assets/img/DMFIcon_MiniSet.png","assets/img/DRGIcon.png","assets/img/DRGIcon_MiniSet.png","assets/img/FSG_major_icon_79.png","assets/img/GILIcon.png","assets/img/GangsIcon.png","assets/img/GvGIcon.png","assets/img/HallOfFameIcon.png","assets/img/HydraIcon.png","assets/img/ICCIcon.png","assets/img/KaraIcon.png","assets/img/LOEIcon.png","assets/img/LOOTIcon.png","assets/img/NaxxIcon.png","assets/img/OGIcon.png","assets/img/PoAIcon.png","assets/img/REVIcon.png","assets/img/REVIcon_MiniSet.png","assets/img/RLKIcon.png","assets/img/RLKIcon_MiniSet.png","assets/img/SCHIcon.png","assets/img/SCIcon.png","assets/img/SCIcon_MiniSet.png","assets/img/SWIcon.png","assets/img/SWIcon_MiniSet.png","assets/img/TGTIcon.png","assets/img/TRLIcon.png","assets/img/TTNIcon.png","assets/img/TTNIcon_MiniSet.png","assets/img/TwistIcon.png","assets/img/UNGIcon.png","assets/img/UldumIcon.png","assets/img/WolfIcon.png","assets/img/twitter.png"],"names":["module","exports","SoundDivider","View","style","height","width","opacity","backgroundColor","marginRight","marginBottom","MinionFilters","props","visibility","filterCards","cardFiltersHook","nonCollectible","setNonCollectible","types","setTypes","rarityFilters","setRarityFilters","cardFilterDict","styles","StyleSheet","create","filterMenu","position","right","top","zIndex","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","TypeFilter","type","mappedType","mapTypes","flexDirection","justifyContent","paddingTop","Text","paddingRight","Switch","onValueChange","newTypeFilter","value","RarityFilter","rarity","TouchableOpacity","onPress","newRarityFilter","Image","source","require","toLowerCase","marginTop","paddingBottom","paddingHorizontal","map","newNonCollectibleFilter","BattlegroundFilters","bgFiltersHook","includeBGTiers","setIncludeBGTiers","includeBGTokens","setIncludeBGTokens","includeBGTribes","setIncludeBGTribes","includeBGHeroSpecific","setIncludeBGHeroSpecific","includeBGRetired","setIncludeBGRetired","bgDict","TierFilter","tier","newBGTierFilter","marginLeft","TribeFilter","tribe","newBGTribeFilter","padding","newBGTokensFilter","newBGHeroSpecificFilter","newRetiredFilter","VolumeContext","React","createContext","volume","setVolume","DeviceContext","SoundButton","useContext","deviceType","button","alignItems","textAlign","buttonList","text","color","fontSize","listButton","sound","a","async","Audio","Sound","createAsync","uri","shouldPlay","soundObject","playAsync","playSound","href","accessibilityRole","target","title","stingers","triggers","tokenIDs","tokens","tokenID","heroIDs","heroes","id","battlegroundsIDs","battlegrounds","cardID","duelsIDs","AVHeroCards","AVHeroPowers","battlegroundBartenderIDs","cardVersionGroup","Set","specials","filter","x","undefined","soundID","parentID","cardVersions","find","core","wild","classic","nonCoreCardVersions","concat","battlegroundTribe","TypeError","battlegroundToken","token","err","battlegroundTechLevel","card","techLevel","battlegroundHeroSpecific","heroSpecific","battlegroundRetired","retired","sortCards","cards","classOrder","cardClass","tribeOrder","sort","b","classA","classB","name","tribeA","tribeB","techLevelA","techLevelB","generalCards","includes","heroCards","bgCards","duelsCards","defaultGamePlaySounds","defaultEmoteSounds","defaultErrorSounds","defaultHolidaySounds","deathKnightGamePlaySounds","deathKnightEmoteSounds","deathKnightHeroSounds","deathKnightRexxarHeroSounds","arraySplicer","sharedCustomHeroSounds","heroCardCustomSounds","galakrondHeroSounds","ragAndLordJarraxxusHeroSounds","medivhHeroSounds","renoHeroSounds","bartenderGeneralSounds","bartenderShopSounds","bartenderRecruitSounds","bartenderSounds","customVenari","customCthun","customAluneth","customSkulloftheManari","customBarnes","customHecklebot","customVulgarHomunculus","customEvilHeclkerDalaranCrusader","customYogg","customFortuneTeller","customCheesemonger","customElitistSnob","customHipster","customHipsterPlayArray","customHipsterSounds","getCardSounds","sounds","random","audio","i","length","push","transferStudentTokens","replace","startArray","splices","newArray","slice","splice","complicatedAltSound","standardAltSoundArray","altSoundsID","excludeRandom","cardSounds","multi","flat","validSounds","matchedValidSound","row","buildHeroSoundArray","heroSoundDicts","heroSounds","heroSoundDict","soundArray","section","soundsNotMapped","console","log","MinionSounds","HeroSounds","SoundArray","alignSelf","soundArrays","rework","SoundButtonArray","sectionTitle","fontWeight","flexWrap","deathknights","galakronds","TokenImage","isHero","imgSrc","resizeMode","TokensFlatList","hasTokens","tokenList","FlatList","horizontal","data","renderItem","item","openNewCard","SpecialImage","isAVHeroCard","SpecialsFlatList","index","special_id","action","Specials","fullSoundFileName","SmallSetImage","cardSet","Card","scrollViewRef","useRef","getImage","goToTop","current","scrollTo","animated","newID","addToCardsList","closeCards","image","aspectRatio","switchSetStyle","previousCardExists","left","returnToPreviousCard","Ionicons","size","versionGroup","useState","switchSet","setSwitcherSet","flex","ScrollView","ref","formatText","regex","RegExp","match","found_opening_tag","found_tag_type","groups","split","text_before","substring","text_leftover","regex_close","found_closing_tag","text_mid","text_end","description","battlegroundCard","flavor","battlegroundFlavor","closeCard","FlatListItemSeparator","InfoModal","textSmall","infoModalVisibility","TouchableWithoutFeedback","textDecorationLine","paddingLeft","wordBreak","closeInfoModal","ToolbarTitle","useFonts","Roboto_700Bold","fontFamily","VolumeSlider","volumeSlider","min","max","onChange","step","minimumTrackTintColor","maximumTrackTintColor","shadowProps","shadowOffsetHeight","cardClassImageDict","AnimatedImage","fadeInOpacity","Animated","Value","multiClassList","useEffect","sequence","timing","toValue","duration","useNativeDriver","start","event","finished","setMultiClassIndex","multiClassIndex","SmallClassImage","classes","TribeImage","transform","scale","tribeImage","TechLevelImage","techlevel","techLevelImage","CardListItem","typeFilter","showCard","includeRowSounds","flexGrow","CardListTab","route","navigation","state","cardDisplayed","setCardDisplayed","setCard","myCardData","setMyCardData","setCards","loadLimit","setLoadLimit","showFooter","setShowFooter","toolbarVisibilities","setToolbarVisilities","bgFilterDict","1","2","3","4","5","6","flatListRef","useScrollToTop","params","searchCriteria","applyLoadLimit","increaseLoadLimit","newCardFilterDict","newBGFilterDict","filteredData","collectible","set","toString","toUpperCase","focus","scrollToOffset","offset","cardToShow","setParams","addListener","e","navigate","centerElement","isSearchActive","searchable","autoFocus","placeholder","onChangeText","criteria","search","onSearchClosed","onSearchPressed","rightElement","MaterialCommunityIcons","keyExtractor","ItemSeparatorComponent","ListFooterComponent","display","newCardID","newCard","pop","SetList","cardSets","cardsets","craftable","App","Tab","createBottomTabNavigator","linking","prefixes","config","screens","Cards","Heroes","Sets","Battlegrounds","Duels","volumeHook","setDeviceType","DeviceInfo","getUserAgent","then","userAgent","String","Provider","NavigationContainer","Navigator","Screen","component","initialParams","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve"],"mappings":"sllHAAAA,EAAOC,QAAU,IAA0B,qC,y38BCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,y1MCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,s0HCkB5BC,EAfM,WACnB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,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/app.105e193b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/exclude.46c8feb2.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel0.fa35e5fc.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel1.4166ac56.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel2.70945d7d.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel3.aee75764.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel4.ad86b855.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel5.deed6cbf.png\";","module.exports = __webpack_public_path__ + \"static/media/techlevel6.7c39b1aa.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_bartenders.b4dd822e.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_beasts.66b989b5.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_demons.3aa3db7d.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_dragons.e170ee50.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_elementals.09e2d395.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_mechs.85d062d4.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_murlocs.f76f8094.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_neutrals.586b344a.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_pirates.6b6aba23.png\";","module.exports = __webpack_public_path__ + \"static/media/common_gem_small.c3cb9701.png\";","module.exports = __webpack_public_path__ + \"static/media/epic_gem_small.2056dd5b.png\";","module.exports = __webpack_public_path__ + \"static/media/legendary_gem_small.60d2f3cd.png\";","module.exports = __webpack_public_path__ + \"static/media/rare_gem_small.f2054728.png\";","module.exports = __webpack_public_path__ + \"static/media/ClassicIcon.fb07cda3.png\";","module.exports = __webpack_public_path__ + \"static/media/ClassicIconSelected.4a1d9442.png\";","module.exports = __webpack_public_path__ + \"static/media/GryphonIcon.1968a040.png\";","module.exports = __webpack_public_path__ + \"static/media/GryphonIconSelected.6c7aa2ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Set1_Icon.ac32ff2e.png\";","module.exports = __webpack_public_path__ + \"static/media/Set1_IconSelected.824ca641.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.ab09bc27.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_deathknight.44129737.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_demonhunter.27bc28b0.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_druid.b2cf4d40.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_hunter.982db222.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_mage.9b3b210e.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_neutral.d25d7174.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_paladin.ca95d589.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_priest.74da5ea8.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_rogue.a1f42042.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_shaman.6ebd9c99.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_warlock.02204f8b.png\";","module.exports = __webpack_public_path__ + \"static/media/class_small_warrior.8656e5cc.png\";","module.exports = __webpack_public_path__ + \"static/media/kofi.96681ac5.png\";","module.exports = __webpack_public_path__ + \"static/media/litecoin.e0409b43.png\";","import React from 'react';\r\nimport { View} from 'react-native';\r\n\r\nconst SoundDivider = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: 1,\r\n        width: \"100%\",\r\n        opacity: 0.25,\r\n        backgroundColor: \"#000000\",\r\n        marginRight: 8,\r\n        marginBottom: 8\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SoundDivider\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Button, TouchableOpacity, TouchableWithoutFeedback, Switch} from 'react-native';\r\nimport SoundDivider from '../SoundDivider';\r\n\r\n\r\n\r\nconst MinionFilters = (props) => {\r\n  const visibility = props.visibility\r\n  const filterCards = props.filterCards\r\n  const [nonCollectible, setNonCollectible] = props.cardFiltersHook['nonCollectible']\r\n  const [types, setTypes] = props.cardFiltersHook['types']\r\n  const [rarityFilters, setRarityFilters] = props.cardFiltersHook['rarity']\r\n\r\n  const cardFilterDict = {\r\n    'nonCollectible': nonCollectible,\r\n    'types': types,\r\n    'rarity': rarityFilters\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    filterMenu:\r\n      {position: 'absolute', right:48, top:56, zIndex: 1, backgroundColor: 'white', visibility: visibility,\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    }\r\n  })\r\n\r\n  const TypeFilter = (props) => {\r\n    var type = props.type\r\n    var mappedType = mapTypes(type)\r\n\r\n    function mapTypes(type) {\r\n    switch(type) {\r\n        case 'Minions': return 'MINION'\r\n        case 'Heroes': return 'HERO'\r\n        case 'Spells': return 'SPELL'\r\n        case 'Weapons': return 'WEAPON'\r\n        case 'Locations': return 'LOCATION'\r\n      }\r\n    }\r\n\r\n    return (\r\n      <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16}}>\r\n        <Text style={{paddingRight: 16}}>{type}</Text>\r\n        <Switch onValueChange={() => {\r\n            var newTypeFilter = types\r\n            newTypeFilter[mappedType] = !newTypeFilter[mappedType]\r\n            cardFilterDict['types'] = newTypeFilter\r\n            setTypes(newTypeFilter)\r\n            filterCards(null, true, false, cardFilterDict)\r\n          }} value={types[mappedType]} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const RarityFilter = (props) => {\r\n    var rarity = props.rarity\r\n    return (\r\n      <TouchableOpacity onPress={ () => {\r\n        var newRarityFilter = rarityFilters\r\n        newRarityFilter[rarity] = !newRarityFilter[rarity]\r\n        cardFilterDict['rarity'] = newRarityFilter\r\n        setRarityFilters(newRarityFilter)\r\n        filterCards(null, true, false, cardFilterDict)\r\n      }}>\r\n        <Image style={{width: 34, height: 44}} source={require('../assets/img/'+rarity.toLowerCase()+'_gem_small.png')}/>\r\n        <Image style={{width: 34, height: 44, marginTop: -44, visibility: ((rarityFilters[rarity] || visibility == 'hidden') ? 'hidden' : 'visible')}} source={require('../assets/img/exclude.png')}/>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={styles.filterMenu}>\r\n      <View style={{paddingBottom: 16, paddingHorizontal: 16}}>\r\n        {['Minions', 'Heroes', 'Spells', 'Weapons', 'Locations'].map(type => <TypeFilter type={type} />)}\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16, paddingBottom: 16}}>\r\n          <Text style={{paddingRight: 16}}>Non-Collectible</Text>\r\n          <Switch onValueChange={(newNonCollectibleFilter) => {\r\n            cardFilterDict['nonCollectible'] = newNonCollectibleFilter\r\n            setNonCollectible(newNonCollectibleFilter)\r\n            filterCards(null, true, false, cardFilterDict)\r\n          }} value={nonCollectible} />\r\n        </View>\r\n        <SoundDivider />\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n          {['COMMON', 'RARE', 'EPIC', 'LEGENDARY'].map(rarity => <RarityFilter rarity={rarity} />)}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default MinionFilters\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Button, TouchableOpacity, TouchableWithoutFeedback, Switch} from 'react-native';\r\nimport SoundDivider from '../SoundDivider';\r\n\r\nconst BattlegroundFilters = (props) => {\r\n\r\n  const visibility = props.visibility\r\n  const filterCards = props.filterCards\r\n  const [includeBGTiers, setIncludeBGTiers] = props.bgFiltersHook['bgTiers']\r\n  const [includeBGTokens, setIncludeBGTokens] = props.bgFiltersHook['bgTokens']\r\n  const [includeBGTribes, setIncludeBGTribes] = props.bgFiltersHook['bgTribes']\r\n  const [includeBGHeroSpecific, setIncludeBGHeroSpecific] = props.bgFiltersHook['bgHeroSpecific']\r\n  const [includeBGRetired, setIncludeBGRetired] =  props.bgFiltersHook['bgRetired']\r\n\r\n  const bgDict = {'bgTierFilter': includeBGTiers, 'bgTribeFilter': includeBGTribes, 'bgTokensFilter': includeBGTokens, 'bgHeroSpecificFilter': includeBGHeroSpecific, 'bgRetiredFilter': includeBGRetired}\r\n\r\n  const TierFilter = (props) => {\r\n    var tier = props.tier\r\n    return (\r\n      <View style={{paddingHorizontal: 4}}>\r\n        <TouchableOpacity onPress={() => {\r\n          var newBGTierFilter = includeBGTiers\r\n          newBGTierFilter[tier] = !newBGTierFilter[tier]\r\n          bgDict['bgTierFilter'] = newBGTierFilter\r\n          filterCards(null, true, false, null, null, null, bgDict)\r\n          setIncludeBGTiers(newBGTierFilter)\r\n        }}>\r\n          <Image style={{width: 42, height: 44}} source={require('../assets/img/techlevel'+tier+'.png')}/>\r\n          <Image style={{width: 34, height: 44, marginTop: -44, marginLeft: 4, visibility: ((includeBGTiers[tier] || visibility == 'hidden') ? 'hidden' : 'visible')}} source={require('../assets/img/exclude.png')}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const TribeFilter = (props) => {\r\n    var tribe = props.tribe\r\n    return (\r\n      <TouchableOpacity onPress={() => {\r\n        var newBGTribeFilter = includeBGTribes\r\n        newBGTribeFilter[tribe] = !newBGTribeFilter[tribe]\r\n        bgDict['bgTribeFilter'] = newBGTribeFilter\r\n        filterCards(null, true, false, null, null, null, bgDict)\r\n        setIncludeBGTribes(newBGTribeFilter)\r\n      }}>\r\n        <Image style={{width: 34, height: 34}} source={require('../assets/img/bg_'+tribe.toLowerCase()+'s.png')}/>\r\n        <Image style={{width: 26.15, height: 34, marginTop: -32, marginLeft: 4, visibility: ((includeBGTribes[tribe] || visibility == 'hidden') ? 'hidden' : 'visible')}} source={require('../assets/img/exclude.png')}/>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    filterMenu:\r\n      {position: 'absolute', right:48, top:56, zIndex: 1, backgroundColor: 'white', visibility:visibility,\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={styles.filterMenu} >\r\n      <View style={{padding: 16}}>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n          <Text style={{paddingRight: 16}}>Tokens</Text>\r\n          <Switch onValueChange={(newBGTokensFilter) => {\r\n            bgDict['bgTokensFilter'] = newBGTokensFilter\r\n            filterCards(null, true, false, null, null, null, bgDict)\r\n            setIncludeBGTokens(newBGTokensFilter)\r\n          }} value={includeBGTokens} />\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16}}>\r\n          <Text style={{paddingRight: 16}}>Hero-Specific</Text>\r\n          <Switch onValueChange={(newBGHeroSpecificFilter) => {\r\n            bgDict['bgHeroSpecific'] = newBGHeroSpecificFilter\r\n            filterCards(null, true, false, null, null, null, bgDict)\r\n            setIncludeBGHeroSpecific(newBGHeroSpecificFilter)\r\n          }} value={includeBGHeroSpecific} />\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 16, paddingBottom: 16}}>\r\n          <Text style={{paddingRight: 16}}>Retired</Text>\r\n          <Switch onValueChange={(newRetiredFilter) => {\r\n            bgDict['bgRetired'] = newRetiredFilter\r\n            filterCards(null, true, false, null, null, null, bgDict)\r\n            setIncludeBGRetired(newRetiredFilter)\r\n          }} value={includeBGRetired} />\r\n        </View>\r\n        <SoundDivider />\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n          {[1,2,3].map(tier =>(<TierFilter tier={tier}/>))}\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8, paddingBottom: 16}}>\r\n          {[4,5,6].map(tier =>(<TierFilter tier={tier}/>))}\r\n        </View>\r\n        <SoundDivider />\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n          {['Beast', 'Demon', 'Dragon'].map(tribe => (<TribeFilter tribe={tribe}/>))}\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n          {['Mech', 'Murloc', 'Pirate'].map(tribe => (<TribeFilter tribe={tribe}/>))}\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 8}}>\r\n          {['Elemental', 'Neutral'].map(tribe => (<TribeFilter tribe={tribe}/>))}\r\n        <View style={{padding: 16}} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BattlegroundFilters\r\n","import React from 'react';\r\n\r\nconst VolumeContext = React.createContext({\r\n  volume: 1.0,\r\n  setVolume: () => {}\r\n})\r\n\r\nexport default VolumeContext\r\n","import React from 'react';\r\n\r\nconst DeviceContext = React.createContext('desktop')\r\n\r\nexport default DeviceContext\r\n","import React from 'react';\r\nimport { StyleSheet, Button, TouchableOpacity, TouchableWithoutFeedback, View, Link, Text, Linking } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\nimport VolumeContext from './VolumeContext'\r\nimport DeviceContext from './DeviceContext'\r\n\r\nconst SoundButton = (props) => {\r\n\r\n  const [volume] = React.useContext(VolumeContext)\r\n  const deviceType = React.useContext(DeviceContext)\r\n\r\n  async function playSound(sound) {\r\n    const soundObject = await Audio.Sound.createAsync(\r\n      { uri: 'https://hearthstonesounds.s3.amazonaws.com/'+sound+'.wav' },\r\n      {\r\n        shouldPlay: true,\r\n        volume: volume * 0.01\r\n      }\r\n    );\r\n    try {\r\n      await soundObject.playAsync()\r\n      // Your sound is playing!\r\n      } catch (error) {\r\n      // An error occurred!\r\n      }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    button: {\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      padding: 10,\r\n      width: deviceType == 'mobile' ? \"64px\" : \"72px\",\r\n      height: deviceType == 'mobile' ? \"40px\" : \"40px\",\r\n      justifyContent: 'center',\r\n      backgroundColor: \"#2196F3\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    buttonList: {\r\n      width: deviceType == 'mobile' ? \"40px\" : \"72px\",\r\n      height: deviceType == 'mobile' ? \"32px\" : \"40px\",\r\n    },\r\n    text: {\r\n      alignItems: \"center\",\r\n      justifyContent: 'center',\r\n      color: \"white\",\r\n      fontSize: deviceType == 'mobile' ? 10.5 : 12,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <View style={{padding: 4}}>\r\n      <TouchableOpacity\r\n        style={props.listButton ? [styles.button, styles.buttonList] : styles.button}\r\n        onPress= {() => {\r\n          playSound(props.sound)\r\n        }}\r\n        href={'https://hearthstonesounds.s3.amazonaws.com/'+props.sound+'.wav'}\r\n        accessibilityRole=\"link\" target=\"\"\r\n      >\r\n        <Text style={styles.text}>{props.title}</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SoundButton;\r\n","const stingers = [\r\n  \"BT_019t\",\r\n  \"BT_028t\",\r\n  \"BT_109t\",\r\n  \"BT_123t\",\r\n  \"BT_136t\",\r\n  \"BT_197t\",\r\n  \"BT_210t\",\r\n  \"BT_309t\",\r\n  \"BT_713t\",\r\n  \"ULD_705t\",\r\n  \"UNG_940t8\",\r\n  \"UNG_116t\",\r\n  \"UNG_954t1\",\r\n  \"UNG_942t\",\r\n  \"UNG_920t1\",\r\n  \"BGS_120\",\r\n  \"SW_039t3_t\",\r\n  \"SW_428t4\",\r\n  \"SW_322t4\",\r\n  \"SW_450t4\",\r\n  \"SW_313t4\",\r\n  \"SW_433t3\",\r\n  \"SW_052t3\",\r\n  \"SW_031t7\",\r\n  \"SW_091t4\",\r\n  \"SW_028t5\",\r\n]\r\n\r\nexport default stingers\r\n","\r\n\r\nconst triggers = [\r\n  \"EX1_006\",  \r\n  \"EX1_102\",\r\n  \"EX1_298\",\r\n  \"EX1_557\",  \r\n  \"EX1_559\",  \r\n  \"EX1_562\",  \r\n  \"EX1_tk33\",  \r\n  \"GVG_007\",  \r\n  \"GVG_028\",  \r\n  \"GVG_035\",  \r\n  \"GVG_065\",  \r\n  \"GVG_066\",  \r\n  \"GVG_088\",  \r\n  \"GVG_092\",  \r\n  \"GVG_094\",  \r\n  \"GVG_100\",  \r\n  \"GVG_111\",  \r\n  \"GVG_112\",  \r\n  \"BRM_019\",  \r\n  \"AT_006\",  \r\n  \"AT_036\",  \r\n  \"AT_088\",  \r\n  \"AT_110\",  \r\n  \"AT_127\",  \r\n  \"AT_130\",  \r\n  \"OG_200\",  \r\n  \"OG_229\",  \r\n  \"OG_286\",  \r\n  \"KAR_021\",  \r\n  \"KAR_096\",  \r\n  \"UNG_919\",  \r\n  \"ICC_204\",  \r\n  \"ICC_238\",  \r\n  \"ICC_289\",  \r\n  \"ICC_405\",  \r\n  \"ICC_858\",  \r\n  \"ICC_900\",  \r\n  \"LOOT_165\",  \r\n  \"LOOT_394\",  \r\n  \"LOOT_414\",  \r\n  \"LOOT_519\",  \r\n  \"LOOT_526\",  \r\n  \"GIL_817\",  \r\n  \"GIL_664\",  \r\n  \"GIL_692\",  \r\n  \"GIL_693\",  \r\n  \"GIL_826\",  \r\n  \"BOT_034\",  \r\n  \"BOT_103\",  \r\n  \"BOT_258\",  \r\n  \"BOT_280\",  \r\n  \"BOT_411\",  \r\n  \"BOT_433\",  \r\n  \"BOT_566\",  \r\n  \"BOT_914\",  \r\n  \"TRL_252\",  \r\n  \"TRL_257\",  \r\n  \"TRL_521\",  \r\n  \"TRL_531\",  \r\n  \"DAL_357\",  \r\n  \"DAL_553\",  \r\n  \"DAL_558\",  \r\n  \"ULD_133\",  \r\n  \"ULD_180\",  \r\n  \"ULD_240\",  \r\n  \"ULD_329\",  \r\n  \"DRG_036\",  \r\n  \"DRG_104\",  \r\n  \"YOD_038\",  \r\n  \"BT_351\",  \r\n  \"BT_004\",  \r\n  \"BT_009\",  \r\n  \"BT_121\",  \r\n  \"BT_190\",  \r\n  \"BT_256\",  \r\n  \"BT_258\",  \r\n  \"BT_305\",  \r\n  \"BT_850\",  \r\n  \"BT_934\",  \r\n  \"SCH_120\",  \r\n  \"SCH_141\",  \r\n  \"SCH_142\",  \r\n  \"SCH_157\",  \r\n  \"SCH_224\",  \r\n  \"SCH_230\",  \r\n  \"SCH_231\",  \r\n  \"SCH_232\",  \r\n  \"SCH_234\",  \r\n  \"SCH_236\",  \r\n  \"SCH_241\",  \r\n  \"SCH_243\",  \r\n  \"SCH_248\",  \r\n  \"SCH_313\",  \r\n  \"SCH_607\",  \r\n  \"SCH_532\",  \r\n  \"SCH_614\",  \r\n  \"DMF_068\",  \r\n  \"YOP_018\",  \r\n  \"YOP_020\",\r\n  \"BAR_020\",\r\n  \"BAR_021\",\r\n  \"BAR_022\",\r\n  \"BAR_025\",\r\n  \"BAR_033\",\r\n  \"BAR_043\",\r\n  \"BAR_070\",\r\n  \"BAR_071\",\r\n  \"BAR_073\",\r\n  \"BAR_078\",\r\n  \"BAR_312\",\r\n  \"BAR_320\",\r\n  \"BAR_840\",\r\n  \"BAR_843\",\r\n  \"BAR_871\",\r\n  \"BAR_896\",\r\n  \"BAR_912\",\r\n  \"CS3_019\",\r\n  \"CS3_032\",\r\n  \"WC_008\",\r\n  \"WC_035\",\r\n  \"SW_024\",  \r\n  \"SW_030\",  \r\n  \"SW_042\",  \r\n  \"SW_045\",  \r\n  \"SW_050\",  \r\n  \"SW_055\",  \r\n  \"SW_066\",  \r\n  \"SW_307\",  \r\n  \"SW_323\",  \r\n  \"SW_400\",  \r\n  \"SW_446\",  \r\n  \"SW_061\",  \r\n  \"DED_519\",  \r\n  \"AV_118\",  \r\n  \"AV_139\",  \r\n  \"AV_143\",  \r\n  \"AV_222\",  \r\n  \"AV_238\",  \r\n  \"ONY_003\",  \r\n  \"TSC_032\",  \r\n  \"TSC_647\",  \r\n  \"TSC_002\",  \r\n  \"TSC_007\",  \r\n  \"TSC_013\",  \r\n  \"TSC_083\",  \r\n  \"TSC_087\",  \r\n  \"TSC_218\",  \r\n  \"TSC_633\",  \r\n  \"TSC_642\",  \r\n  \"TSC_657\",  \r\n  \"TSC_753\",  \r\n  \"TSC_934\",  \r\n  \"TSC_942\",  \r\n  \"TSC_962\",  \r\n  \"TSC_962t\",\r\n  \"TID_000\",\r\n  \"TID_003\",\r\n  \"TID_704\",\r\n  \"REV_000\",\r\n  \"REV_002\",\r\n  \"REV_006\",\r\n  \"REV_018\",\r\n  \"REV_022\",\r\n  \"REV_316\",\r\n  \"REV_925\",\r\n  \"MAW_025\",\r\n  \"RLK_827\",\r\n  \"RLK_677\",\r\n  \"RLK_607\",\r\n  \"RLK_571\",\r\n  \"RLK_919\"\r\n]\r\n\r\nexport default triggers","import cards from './assets/cards2.json';\r\nimport tokens from './assets/tokens.json';\r\nimport heroes from './assets/heroes.json';\r\nimport newHeroes from './assets/newHeroes.json';\r\nimport battlegrounds from './assets/battlegrounds.json';\r\nimport cardVersions from './assets/cardVersions.json';\r\nimport specials from './assets/specials.json';\r\nimport stingers from './assets/nonLegendaryStingers.js';\r\nimport triggers from './assets/triggers';\r\n\r\nconst tokenIDs = tokens.map(a => a.tokenID)\r\nconst heroIDs = heroes.map(a => a.id)\r\nconst battlegroundsIDs = battlegrounds.map(a => a.cardID)\r\nconst duelsIDs = [\r\n  'PVPDR_Hero_Fireheart',\r\n  'PVPDR_Hero_Illucia',\r\n  'PVPDR_Hero_Lilian',\r\n  'PVPDR_Hero_Mozaki',\r\n  'PVPDR_Hero_Omu',\r\n  'PVPDR_Hero_Rattlegore',\r\n  'PVPDR_Hero_Slate',\r\n  'PVPDR_Hero_Stelina',\r\n  'PVPDR_Hero_Turalyon',\r\n  'PVPDR_Hero_Willow',\r\n]\r\n\r\nconst AVHeroCards = [\r\n  'AV_204',\r\n  'AV_113',\r\n  'AV_200',\r\n  'AV_205',\r\n  'AV_206',\r\n  'AV_207',\r\n  'AV_203',\r\n  'AV_258',\r\n  'AV_316',\r\n  'AV_202'\r\n]\r\n\r\nconst AVHeroPowers = [\r\n  'AV_113p',\r\n  'AV_200p2',\r\n  'AV_202p',\r\n  'AV_203p',\r\n  'AV_204p',\r\n  'AV_205p',\r\n  'AV_206p',\r\n  'AV_207p',\r\n  'AV_207p2',\r\n  'AV_258p',\r\n  'AV_258p2',\r\n  'AV_258pt',\r\n  'AV_258pt3',\r\n  'AV_258pt4',\r\n  'AV_258pt7',\r\n  'AV_316hp'\r\n]\r\n\r\n// TODO - Add default Bob voicelines.\r\nconst battlegroundBartenderIDs = [\r\n  //'TB_BaconShopBob',\r\n  'TB_BaconShopBob_SKIN_A',\r\n  'TB_BaconShopBob_SKIN_B',\r\n  'TB_BaconShopBob_SKIN_C',\r\n  'TB_BaconShopBob_SKIN_D'\r\n]\r\n\r\nconst newHeroSpecials = [...new Set(specials.filter(x => x.soundID != undefined).map(x => x.parentID))]\r\n\r\nconst cardVersionGroup = (cardID) => {\r\n    const cvg = cardVersions.find(x => x.core == cardID || x.wild == cardID || x.classic == cardID)\r\n    return cvg\r\n}\r\n\r\nconst nonCoreCardVersions = () => {\r\n  return cardVersions.map(a => a.wild).concat(cardVersions.map(a => a.classic))\r\n}\r\n\r\nconst battlegroundCard = (cardID) => {\r\n\r\n  try {\r\n    const card = battlegrounds.find(x => x.cardID == cardID)\r\n    card.heroSpecific = (card.heroSpecific == 1) // Set this to true or false.\r\n    return card\r\n  } catch (err) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst battlegroundTribe = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).tribe\r\n  } catch (TypeError) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst battlegroundToken = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).token == 1\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst battlegroundTechLevel = (card) => {\r\n  if (card.id == 'GVG_058') return 2\r\n  else if (card.id == 'TB_BaconShop_HP_033t') return 1\r\n  else return card.techLevel\r\n}\r\n\r\nconst battlegroundHeroSpecific = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).heroSpecific == 1\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst battlegroundFlavor = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).flavor\r\n  } catch (err) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst battlegroundRetired = (cardID) => {\r\n  try {\r\n    return battlegrounds.find(x => x.cardID == cardID).retired\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst sortCards = (cards, type) => {\r\n  function classOrder(a) {\r\n    // Dual Class Cards\r\n    switch(a.cardClass) {\r\n      case 'DEATHKNIGHT': return 0\r\n      case 'DEMONHUNTER': return 1\r\n      case 'DRUID': return 2\r\n      case 'HUNTER': return 3\r\n      case 'MAGE': return 4\r\n      case 'PALADIN': return 5\r\n      case 'PRIEST': return 6\r\n      case 'ROGUE': return 7\r\n      case 'SHAMAN': return 8\r\n      case 'WARLOCK': return 9\r\n      case 'WARRIOR': return 10\r\n      default: return 99\r\n    }\r\n  }\r\n\r\n  function tribeOrder(a) {\r\n    switch(battlegroundTribe(a.id)) {\r\n      case 'Beast': return 1\r\n      case 'Demon': return 2\r\n      case 'Dragon': return 3\r\n      case 'Mech': return 4\r\n      case 'Murloc': return 5\r\n      case 'Pirate': return 6\r\n      case 'Elemental': return 7\r\n      case 'Neutral': return 8\r\n      default: return 99\r\n    }\r\n  }\r\n\r\n  if(type == 'general' || type == 'heroes') {\r\n    return cards.sort(\r\n      function(a,b) {\r\n        var classA = classOrder(a)\r\n        var classB = classOrder(b)\r\n\r\n        if(classA < classB )  { return -1}\r\n        if(classA > classB )  { return 1}\r\n        if(classA == classB ) {\r\n          if(a.name < b.name )    {return -1}\r\n          if(a.name > b.name )   {return 1}\r\n          if(a.name == b.name )  {return 0}\r\n        }\r\n      }\r\n    )\r\n  } else if (type == 'battlegrounds') {\r\n    return cards.sort (\r\n      function(a,b) {\r\n          var tribeA = tribeOrder(a)\r\n          var tribeB = tribeOrder(b)\r\n          var techLevelA = battlegroundTechLevel(a)\r\n          var techLevelB = battlegroundTechLevel(b)\r\n\r\n          if(techLevelA == undefined) {return -1}\r\n          if(techLevelA < techLevelB) {return -1}\r\n          if(techLevelA > techLevelB) {return 1}\r\n          if(techLevelA== techLevelB) {\r\n            if(tribeA < tribeB )  { return -1}\r\n            if(tribeA > tribeB )  { return 1}\r\n            if(tribeA == tribeB ) {\r\n              if(a.name < b.name )   {return -1}\r\n              if(a.name > b.name )   {return 1}\r\n              if(a.name == b.name )  {return 0}\r\n            }\r\n          }\r\n        }\r\n    )\r\n  } else {\r\n    return cards\r\n  }\r\n}\r\n\r\nconst generalCards = sortCards(cards.filter(x => (!heroIDs.includes(x.id))), 'general')\r\nconst heroCards = sortCards(cards.filter(x => heroIDs.includes(x.id)), 'heroes')\r\nconst bgCards = sortCards(cards.filter(x => (battlegroundsIDs.includes(x.id)) || battlegroundBartenderIDs.includes(x.id)), 'battlegrounds')\r\nconst duelsCards = sortCards(cards.filter(x => (duelsIDs.includes(x.id))), 'duels')\r\n\r\nconst defaultGamePlaySounds = [\r\n  ['Opening','S1'],\r\n  ['Opening (Mirror)','S2'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n  ['Chosen in Arena','PA']\r\n]\r\n\r\nconst defaultEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Greetings (Mirror)', 'EM_G2'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O'],\r\n  ['Sorry','EM_S1']\r\n]\r\n\r\nconst defaultErrorSounds = [\r\n  ['Need Weapon', 'E1'],\r\n  ['Mana', 'E2'],\r\n  ['Minion Attacked', 'E3'],\r\n  ['Hero Attacked', 'E4'],\r\n  ['Summon Sickness', 'E5'],\r\n  ['Full Hand', 'E6'],\r\n  ['Too Many Minions', 'E7'],\r\n  ['Stealth Minion', 'E8'],\r\n  ['Can\\'t Play', 'E9'],\r\n  ['Invalid Target', 'E10'],\r\n  ['Taunt Minion', 'E11'],\r\n  ['Generic', 'E12'],\r\n]\r\n\r\nconst defaultHolidaySounds = [\r\n  ['New Year','H_NY'],\r\n  ['Lunar New Year','H_LNY'],\r\n  ['Noble\\nGarden','H_NG'],\r\n  ['Mid\\nSummer','H_MS'],\r\n  ['Pirate Day','H_PD'],\r\n  ['Hallow\\'s End','H_HE'],\r\n  ['Winter Veil','H_WV'],\r\n]\r\n\r\nconst defaultHeroSounds = [\r\n  ['Gameplay', defaultGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst deathKnightGamePlaySounds = [\r\n  ['Intro (1)','I1'],\r\n  ['Intro (2)','I2'],\r\n  ['Summon','S1'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst deathKnightEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O']\r\n]\r\nconst deathKnightHeroSounds = [\r\n  ['Gameplay', deathKnightGamePlaySounds],\r\n  ['Emotes', deathKnightEmoteSounds]\r\n]\r\n\r\n\r\n\r\nconst deathKnightRexxarGameplaySounds = arraySplicer(deathKnightGamePlaySounds, [[3,0,['Summon (Mirror)', 'S2']]])\r\nconst deathKnightRexxarEmoteSounds = arraySplicer(deathKnightEmoteSounds, [[2,0,['Greetings (Mirror)', 'EM_G2']]])\r\nconst deathKnightRexxarHeroSounds = [\r\n  ['Gameplay', deathKnightRexxarGameplaySounds],\r\n  ['Emotes', deathKnightRexxarEmoteSounds]\r\n]\r\n\r\nconst sharedCustomGamePlaySounds = [\r\n  ['Intro','I1'],\r\n  ['Summon','S1'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst sharedCustomEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O']\r\n]\r\nconst sharedCustomHeroSounds = [\r\n  ['Gameplay', sharedCustomGamePlaySounds],\r\n  ['Emotes', sharedCustomEmoteSounds]\r\n]\r\n\r\nconst heroCardCustomGamePlaySounds = [\r\n  ['Intro', 'S'],\r\n  ['Play','P'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\n\r\nconst heroCardCustomEmoteSounds = [\r\n  ['Thanks','EM_TH1'],\r\n  ['Greetings', 'EM_G1'],\r\n  ['Greetings (Mirror)', 'EM_G2'],\r\n  ['Wow','EM_W'],\r\n  ['Threaten','EM_T'],\r\n  ['Well Played','EM_WP'],\r\n  ['Oops','EM_O']\r\n]\r\n\r\nconst heroCardCustomSounds = [\r\n  ['Gameplay', heroCardCustomGamePlaySounds],\r\n  ['Emotes', heroCardCustomEmoteSounds],\r\n]\r\n\r\nconst galakrondGamePlaySounds = [\r\n  ['Intro','I1'],\r\n  ['Summon','P'],\r\n  ['Opening','S1'],\r\n  ['Opening (Mirror)','S2'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst galakrondHeroSounds = [\r\n  ['Gameplay', galakrondGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst ragAndLordJarraxxusGamePlaySounds = [\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n]\r\nconst ragAndLordJarraxxusHeroSounds = [\r\n  ['Gameplay', ragAndLordJarraxxusGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', defaultHolidaySounds]\r\n]\r\n\r\nconst medivhHolidaySounds = [\r\n  ['New Year','H_NY'],\r\n  ['Lunar New Year','H_LNY'],\r\n  ['Noble\\nGarden','H_NG'],\r\n  ['Hallow\\'s End','H_HE'],\r\n  ['Winter Veil','H_WV'],\r\n]\r\nconst medivhHeroSounds = [\r\n  ['Gameplay', defaultGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds],\r\n  ['Errors', defaultErrorSounds],\r\n  ['Holidays', medivhHolidaySounds]\r\n]\r\n\r\nconst renoGamePlaySounds = [\r\n  ['Intro','I1'],\r\n  ['Summon','S1'],\r\n  ['Attack','A1'],\r\n  ['Concede','C'],\r\n  ['Death','D'],\r\n  ['Out of Time','T'],\r\n  ['Thinking (1)','T1'],\r\n  ['Thinking (2)','T2'],\r\n  ['Thinking (3)','T3'],\r\n  ['Low on Cards','LC'],\r\n  ['Out of Cards','NC'],\r\n  ['Chosen in Arena','PA']\r\n]\r\nconst renoHeroSounds = [\r\n  ['Gameplay', renoGamePlaySounds],\r\n  ['Emotes', defaultEmoteSounds]\r\n]\r\n\r\nconst bartenderGeneralSounds = [\r\n  ['Selected', 'BG_S'],\r\n  ['New Game (1)','BG_NG1'],\r\n  ['New Game (2)','BG_NG2'],\r\n  ['New Game (3)','BG_NG3']\r\n]\r\n\r\nconst bartenderShopSounds = [\r\n  ['General (1)', 'BG_G1'],\r\n  ['General (2)', 'BG_G2'],\r\n  ['General (3)', 'BG_G3'],\r\n  ['Flavor (1)','BG_F1'],\r\n  ['Flavor (2)','BG_F2'],\r\n  ['Flavor (3)','BG_F3'],\r\n  ['Flavor (4)','BG_F4'],\r\n  ['Flavor (5)','BG_F5'],\r\n  ['Flavor (6)','BG_F6'],\r\n  ['Flavor (7)','BG_F7'],\r\n  ['Flavor (8)','BG_F8'],\r\n  ['Idle (1)','BG_I1'],\r\n  ['Idle (2)','BG_I2'],\r\n  ['Idle (3)','BG_I3'],\r\n  ['Idle (4)','BG_I4'],\r\n  ['Idle (5)','BG_I5'],\r\n  ['Upgrade (1)','BG_SU1'],\r\n  ['Upgrade (2)','BG_SU2'],\r\n  ['Upgrade (3)','BG_SU3'],\r\n  ['Upgrade (4)','BG_SU4']\r\n]\r\n\r\nconst bartenderRecruitSounds = [\r\n  ['Hire (1)','BG_H1'],\r\n  ['Hire (2)','BG_H2'],\r\n  ['Recruit Small (1)','BG_RS1'],\r\n  ['Recruit Small (2)','BG_RS2'],\r\n  ['Recruit Small (3)','BG_RS3'],\r\n  ['Recruit Med (1)','BG_RM1'],\r\n  ['Recruit Med (2)','BG_RM2'],\r\n  ['Recruit Med (3)','BG_RM3'],\r\n  ['Recruit Large (1)','BG_RL1'],\r\n  ['Recruit Large (2)','BG_RL2'],\r\n  ['Recruit Large (3)','BG_RL3'],\r\n  ['Freezing (1)','BG_FR1'],\r\n  ['Freezing (2)','BG_FR2'],\r\n  ['Selling (1)','BG_SE1'],\r\n  ['Selling (2)','BG_SE2'],\r\n  ['Triple (1)','BG_T1'],\r\n  ['Triple (2)','BG_T2'],\r\n  ['Triple (3)','BG_T3'],\r\n  ['After Triple (1)','BG_AT1'],\r\n  ['After Triple (2)','BG_AT2'],\r\n  ['After Triple (3)','BG_AT3']\r\n]\r\n\r\nconst bartenderCombatSounds = [\r\n  ['Combat Start (1)','BG_CS1'],\r\n  ['Combat Start (2)','BG_CS2'],\r\n  ['Ahead (1)','BG_A1'],\r\n  ['Ahead (2)','BG_A2'],\r\n  ['Ahead (3)','BG_A3'],\r\n  ['Behind (1)','BG_B1'],\r\n  ['Behind (2)','BG_B2'],\r\n  ['Behind (3)','BG_B3'],\r\n  ['Loss (1)','BG_L1'],\r\n  ['Loss (2)','BG_L2'],\r\n  ['Loss (3)','BG_L3'],\r\n  ['Win (1)','BG_W1'],\r\n  ['Win (2)','BG_W2'],\r\n  ['Win (3)','BG_WI3'],\r\n  ['First Place (1)','BG_FP1'],\r\n  ['First Place (2)','BG_FP2'],\r\n  ['First Place (3)','BG_FP3']\r\n]\r\n\r\nconst bartenderSounds = [\r\n  ['Start', bartenderGeneralSounds],\r\n  ['Shop', bartenderShopSounds],\r\n  ['Recruit', bartenderRecruitSounds],\r\n  ['Combat', bartenderCombatSounds]\r\n]\r\n\r\nconst venariCombatSounds = [\r\n  ['Combat Start (1)','BG_CS1'],\r\n  ['Combat Start (2)','BG_CS2'],\r\n  ['Ahead (1)','BG_A1'],\r\n  ['Ahead (2)','BG_A2'],\r\n  ['Ahead (3)','BG_A3'],\r\n  ['Behind (1)','BG_B1'],\r\n  ['Behind (2)','BG_B2'],\r\n  ['Behind (3)','BG_B3'],\r\n  ['Loss (1)','BG_L1'],\r\n  ['Loss (2)','BG_L2'],\r\n  ['Loss (3)','BG_L3'],\r\n  ['Loss (4)','BG_L4'],\r\n  ['Win (1)','BG_W1'],\r\n  ['Win (2)','BG_W2'],\r\n  ['Win (3)','BG_WI3'],\r\n  ['First Place (1)','BG_FP1'],\r\n  ['First Place (2)','BG_FP2'],\r\n  ['First Place (3)','BG_FP3']\r\n]\r\n\r\nconst customVenari = [\r\n  ['Start', bartenderGeneralSounds],\r\n  ['Shop', bartenderShopSounds],\r\n  ['Recruit', bartenderRecruitSounds],\r\n  ['Combat', venariCombatSounds]\r\n]\r\n\r\nconst customCthun = [\r\n  ['Whisper (1)', 'SP1'],\r\n  ['Whisper (2)', 'SP2'],\r\n  ['Whisper (3)', 'SP3'],\r\n  ['Whisper (4)', 'SP4'],\r\n  ['Whisper (5)', 'SP5'],\r\n  ['Whisper (6)', 'SP6'],\r\n  ['Whisper (7)', 'SP7'],\r\n  ['Whisper (8)', 'SP8'],\r\n  ['Whisper (9)', 'SP9'],\r\n  ['Whisper (10)', 'SP10'],\r\n  ['Whisper (11)', 'SP11'],\r\n  ['Whisper (11)', 'SP12']\r\n]\r\n\r\nconst customAluneth = [\r\n  ['Play (1)', 'SP1'],\r\n  ['Play (2)', 'SP2'],\r\n  ['Play (3)', 'SP3'],\r\n  ['Trigger (1)', 'SP5'],\r\n  ['Trigger (2)', 'SP5'],\r\n  ['Trigger (3)', 'SP6'],\r\n  ['Trigger (4)', 'SP7'],\r\n  ['Trigger (5)', 'SP8'],\r\n  ['Trigger (6)', 'SP9'],\r\n  ['Death (1)', 'SP10'],\r\n  ['Death (2)', 'SP11'],\r\n  ['Death (3)', 'SP12']\r\n]\r\n\r\nconst customSkulloftheManari = [\r\n  ['Play (1)', 'SP1'],\r\n  ['Play (2)', 'SP2'],\r\n  ['Play (3)', 'SP3'],\r\n  ['Trigger (1)', 'SP4'],\r\n  ['Trigger (2)', 'SP5'],\r\n  ['Trigger (3)', 'SP6'],\r\n  ['Death (1)', 'SP7'],\r\n  ['Death (2)', 'SP8'],\r\n]\r\n\r\nconst customBarnes = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6']\r\n]\r\n\r\nconst customHecklebot = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6'],\r\n  ['Play (7)', 'P7'],\r\n  ['Play (8)', 'P8'],\r\n  ['Attack (9)', 'A9'],\r\n  ['Attack (1)', 'A1'],\r\n  ['Attack (2)', 'A2'],\r\n  ['Attack (3)', 'A3'],\r\n  ['Attack (4)', 'A4'],\r\n  ['Attack (5)', 'A5'],\r\n  ['Attack (6)', 'A6'],\r\n  ['Attack (7)', 'A7'],\r\n  ['Attack (8)', 'A8'],\r\n  ['Attack (9)', 'A9']\r\n]\r\n\r\nconst customVulgarHomunculus = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Attack (9)', 'A9'],\r\n  ['Attack (1)', 'A1'],\r\n  ['Attack (2)', 'A2'],\r\n  ['Attack (3)', 'A3'],\r\n  ['Attack (4)', 'A4']\r\n]\r\n\r\nconst customEvilHeclkerDalaranCrusader = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2']\r\n]\r\n\r\nconst customYogg = [\r\n  ['Spin (1)', 'SP1'],\r\n  ['Spin (2)', 'SP2'],\r\n  ['Spin (3)', 'SP3'],\r\n  ['Spin (4)', 'SP4'],\r\n  ['Spin (5)', 'SP5'],\r\n  ['Spin (6)', 'SP6'],\r\n]\r\n\r\nconst customFortuneTeller = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6']\r\n]\r\n\r\nconst customCheesemonger = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5'],\r\n  ['Play (6)', 'P6']\r\n]\r\n\r\nconst customElitistSnob = [\r\n  ['Play (1)', 'P1'],\r\n  ['Play (2)', 'P2'],\r\n  ['Play (3)', 'P3'],\r\n  ['Play (4)', 'P4'],\r\n  ['Play (5)', 'P5']\r\n]\r\n\r\nfunction customHipster() {\r\n  let customHipsterPlayArray = []\r\n  let customHipsterSounds = getCardSounds(cards.find(card => card.id == \"ETC_103\"), false).find(sounds => (sounds.name == \"Play\" && sounds.random)).audio\r\n\r\n  for (let i = 0; i < customHipsterSounds.length; i++) { \r\n    customHipsterPlayArray.push(['Play' + ' (' + (i + 1) + ')', customHipsterSounds[i]])\r\n  }\r\n\r\n  return customHipsterPlayArray\r\n}\r\n\r\nconst transferStudentTokens = cards.filter(card => card['id'].includes('SCH_199t') && card['type'] == 'MINION')\r\n  .sort((a,b) => a['id'].replace('SCH_199t', '') - b['id'].replace('SCH_199t', ''))\r\n  .map(card => card['id'])\r\n\r\nfunction arraySplicer(startArray, splices) {\r\n  var newArray = startArray.slice(0)\r\n  var x\r\n  for (x of splices) {\r\n    newArray.splice(x[0],x[1],x[2])\r\n  }\r\n  return newArray\r\n}\r\n\r\nfunction complicatedAltSound(cardID, soundID = '') {\r\n  var standardAltSoundArray = ['A1','EM_G1','EM_G2','S2','EM_O','PA','S1','EM_TH1','EM_T','EM_WP','EM_W']\r\n\r\n  // if (newHeroes[cardID]) {\r\n  //   if (\r\n  //       (newHeroes[cardID].altSounds == 'standardAlt' && !standardAltSoundArray.includes(soundID)) || // Case one, standard array.\r\n  //       (newHeroes[cardID].altSounds == 'all') || // Case two, replace for all sounds.\r\n  //       (!newHeroes[cardID].altSounds.includes(soundID)) // Case three, replace for sounds in specific array.\r\n  //   ) {\r\n  //     return newHeroes[cardID].parent\r\n  //   }\r\n  // }\r\n  \r\n\r\n  // WARRIOR\r\n  // Corrupt Garrosh\r\n  if (['HERO_01b'].includes(cardID)) return 'HERO_01'\r\n  // Nagrand Garrosh, Lu Bao Garrosh, Garrosh of Might, Garrosh of Wrath, Pirate King Garrosh, Forge-wrought Garrosh, Garrosh the Wild\r\n  else if ([\"HERO_01d\",\"HERO_01g\",'HERO_01f','HERO_01h','HERO_01n','HERO_01p','HERO_01s'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_01'\r\n  // Rokara\r\n  else if (['HERO_01i','HERO_01j','HERO_01k','HERO_01m'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_01l'\r\n  // Magni\r\n  else if (['HERO_01q'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_01a'\r\n  // SHAMAN\r\n  // Warchief Thrall\r\n  else if (['HERO_02d'].includes(cardID)) return 'HERO_02'\r\n  // Earthfury Thrall, Thrall Son of Durotan, Alterac Thrall, Wolfrider Thrall, Frostwolf Thrall, Ten Storm Thrall, Frog Prince Thrall, Mechaconduit Thrall, Snowman Thrall, Jade Serpent Thrall\r\n  else if (['HERO_02f','HERO_02g','HERO_02h','HERO_02i','HERO_02j','HERO_02k','HERO_02n','HERO_02o','HERO_02t','HERO_02u'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_02'\r\n  // Bru'kan\r\n  else if (['HERO_02p','HERO_02q','HERO_02r'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_02s'\r\n  //ROGUE\r\n  // Cap'n Valeera\r\n  else if (['HERO_03b'].includes(cardID)) return 'HERO_03'\r\n  // Nightslayer Valeera, Gladiator Valeera, Deathmantle Valeera, Titanblade Valeera, Valeera the Nice, Garden Party Valeera\r\n  else if (['HERO_03d','HERO_03f','HERO_03g','HERO_03n', 'HERO_03o', 'HERO_03q'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_03'\r\n  // Chef Scabbs, Agent Scabbs, Investigator Scabbs -> Undercover Scabbs for some voicelines.\r\n  else if (['HERO_03i','HERO_03j','HERO_03k'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_03l'\r\n  // PALADIN\r\n  // Lightforged Uther\r\n  else if (['HERO_04d'].includes(cardID)) return 'HERO_04'\r\n  // Second War Uther, Horseman Uther, Uther Lawbringer, Guan Yu Uther, Judgement Uther, Righteous Infero Uther, Ascended Uther, Star Ascendant Uther, Greench Uther\r\n  else if (['HERO_04e','HERO_04f','HERO_04g','HERO_04h','HERO_04i','HERO_04k','HERO_04m','HERO_04n','HERO_04s'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_04'\r\n  // Cariel\r\n  else if (['HERO_04o','HERO_04p','HERO_04q'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_04r'\r\n  // HUNTER\r\n  // Wanderer Rexxar\r\n  else if (['HERO_05b'].includes(cardID)) return 'HERO_05'\r\n  // Warsong Rexxar (Weird Set)\r\n  else if (['HERO_05d'].includes(cardID) && !(['A1','EM_G1','S2','EM_O','PA','S1','EM_TH1','T3','EM_T','EM_WP','SP1'].includes(soundID))) return 'HERO_05'\r\n  // Giantstalker Rexxar, Firefang Rexxar, Dragonstalker Rexxar, Flamewalker Rexxar, Robin Hood Rexxar, 'Iron Hunter Rexxar', Snowflipper Rexxar, Black Ox Rexxar, Denwatcher Rexxar\r\n  else if (['HERO_05e','HERO_05g','HERO_05f','HERO_05j','HERO_05o','HERO_05p','HERO_05r','HERO_05t'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_05'\r\n  // DRUID\r\n  // Shan'do Malfurion\r\n  else if (['HERO_06c'].includes(cardID)) return 'HERO_06'\r\n  // Cenarion Malfurion, Storm's Rage Malfurion, Emerald Malfurion, Druid of the Flame Malfurion, Winter Fury Malfurion, Steel Guardian Malfurion, Ice Lord Malfurion\r\n  else if (['HERO_06e','HERO_06g','HERO_06i','HERO_06j','HERO_06o','HERO_06p','HERO_06q'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_06'\r\n  // Guff Runetotem, Spelunker Guff, Fangbound Guff, Fauna Friend Guff\r\n  else if (['HERO_06k','HERO_06l','HERO_06m'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_06n'\r\n  // Cherry Blossom Lunara\r\n  else if (['HERO_06t'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_06a'    \r\n  // WARLOCK\r\n  // Shadow Gul'dan\r\n  else if (['HERO_07c'].includes(cardID)) return 'HERO_07'\r\n  // Felheart Gul'dan, Nemesis Gul'dan, Shadowmoon Gul'Dan, House of Rituals Gul'dan, Fel Colossus Gul'dan, Hatcher Gul'dan\r\n   else if (['HERO_07e','HERO_07f','HERO_07g','HERO_07m','HERO_07n','HERO_07r'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_07'\r\n  // Scholomance Tamsin, Impressive Tasmin, Summoner Tamsin -> Tamsin Triumphant\r\n   else if (['HERO_07i','HERO_07j','HERO_07k'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_07l'\r\n  // Nemsy\r\n  else if (['HERO_07o'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_07a'    \r\n  // MAGE\r\n  // Fire Mage Jaina\r\n  else if (['HERO_08c'].includes(cardID)) return 'HERO_08'\r\n  // Scholar Jaina, Arcanist Jaina, Apprentice Jaina, Archmage Jaina, Kul Tiran Jaina, Netherwind Jaina, Red Riding Hood Jaina, Arcane Sentinel Jaina, Frost Fairy Jaina, Red Crane Jaina, Festival Jaina\r\n  else if (['HERO_08f','HERO_08g','HERO_08h','HERO_08i','HERO_08j','HERO_08k','HERO_08n','HERO_08o','HERO_08t','HERO_08u','HERO_08w'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_08'\r\n  // Varden\r\n  else if (['HERO_08p','HERO_08q','HERO_08r'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_08s'\r\n  // PRIEST\r\n  // King Anduin\r\n  else if (['HERO_09c'].includes(cardID)) return 'HERO_09'\r\n  // Anduin of Prophecy, SI:7 Anduin, Zhuge Liang Anduin, Transcendence Anduin, Prince Charming Anduin, Holy Leviathan Anduin, Little Lion Anduin\r\n  else if (['HERO_09d', 'HERO_09e', 'HERO_09f','HERO_09g','HERO_09m','HERO_09n','HERO_09q'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_09'\r\n  // Xyrella\r\n  else if (['HERO_09h','HERO_09i','HERO_09j','HERO_09l'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_09k'\r\n  // Tyrande\r\n  else if (['HERO_09o'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_09a'\r\n  // DEMONHUNTER\r\n  else if (['HERO_10a'].includes(cardID)) return 'HERO_10'\r\n  // Demonbane Illidan, Felravager Illidan, Skullbearer Illidan, Ember Court Illidan, Infernal Armor Illidan, Illidan the Naughty, Sha Illidan, Sabertender Illidan\r\n  else if (['HERO_10c','HERO_10d','HERO_10h','HERO_10k', 'HERO_10l','HERO_10m','HERO_10n','HERO_10p'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_10'\r\n  // Kurtrus\r\n  else if (['HERO_10e','HERO_10f','HERO_10g','HERO_10j'].includes(cardID) && !(standardAltSoundArray.includes(soundID))) return 'HERO_10i'\r\n  // Lord Jaraxxus\r\n  else if (['CORE_EX1_323'].includes(cardID)) return 'EX1_323h'\r\n  // Death Knights\r\n  else if (['CORE_ICC_827'].includes(cardID)) return 'ICC_827'\r\n  else if (['CORE_ICC_829'].includes(cardID)) return 'ICC_829'\r\n  else if (['CORE_ICC_481'].includes(cardID)) return 'ICC_481'\r\n  else if (['CORE_ICC_830'].includes(cardID)) return 'ICC_830'\r\n  else if (['CORE_ICC_834'].includes(cardID)) return 'ICC_834'\r\n  else if (['CORE_ICC_832'].includes(cardID)) return 'ICC_832'\r\n  else if (['CORE_ICC_833'].includes(cardID)) return 'ICC_833'\r\n  else if (['CORE_ICC_828'].includes(cardID)) return 'ICC_828'\r\n  else if (['CORE_ICC_831'].includes(cardID)) return 'ICC_831'\r\n\r\n  else return cardID\r\n}\r\n\r\nfunction altSoundsID(cardID) {\r\n\r\n  if (['BAR_024','BAR_031','BAR_034t3','BAR_034t5','BAR_533t','BAR_538','BAR_745','CS3_037','SW_072',\r\n        'SW_075','SW_031t8','SW_097','SW_429t','SW_443t','SW_463t','DED_517t','DED_514','AV_113t3t2','AV_215',\r\n        'AV_218t','AV_294','AV_337', 'ONY_001t', 'ONY_012t','TSC_029t2','TSC_219t2','TSC_219t3','TSC_219t4',\r\n        'TSC_610','TSC_638t3','TSC_638t4','TSC_659','TSC_919','TSC_919t','TSC_932t','TSC_937t3',\r\n        'TID_700','TID_711t2','TID_711t3','TID_711t4','TID_711t5','TID_711t6','TID_712t','TID_712t2','TID_744'\r\n      ].includes(cardID) || cardVersionGroup(cardID) != undefined) \r\n  {\r\n    if (cardID == 'BAR_024') return 'ULD_190'\r\n    if (cardID == 'BAR_031') return 'UNG_076t1'\r\n    if (cardID == 'BAR_034t3') return 'NEW1_017'\r\n    if (cardID == 'BAR_034t4') return 'OG_064a'\r\n    if (cardID == 'BAR_034t5') return 'CFM_335'\r\n    if (cardID == 'BAR_533t') return 'TRL_546'\r\n    if (cardID == 'BAR_538') return 'TRL_309t'\r\n    if (cardID == 'BAR_745') return 'ULD_154t'\r\n    if (cardID == 'CS3_037') return 'UNG_801'\r\n    if (cardID == 'SW_072') return 'UNG_086'\r\n    if (cardID == 'SW_075') return 'OG_326'\r\n    if (cardID == 'SW_031t8') return 'LOE_016'\r\n    if (cardID == 'SW_097') return 'EX1_556'\r\n    if (cardID == 'SW_429t') return 'TRL_546'\r\n    if (cardID == 'SW_443t') return 'CFM_343'\r\n    if (cardID == 'SW_463t') return 'KAR_030'\r\n    if (cardID == 'DED_517t') return 'EX1_089'\r\n    if (cardID == 'DED_514') return 'GIL_838'\r\n    if (cardID == 'AV_113t3t2') return 'EX1_554t'\r\n    if (cardID == 'AV_215') return 'DRG_065'\r\n    if (cardID == 'AV_218t') return 'CS2_tk1'\r\n    if (cardID == 'AV_294') return 'BGS_021'\r\n    if (cardID == 'AV_337') return 'TRL_550'\r\n    if (cardID == 'ONY_001t') return 'GIL_190t'\r\n    if (cardID == 'ONY_012t') return 'TRLA_127'\r\n    if (cardID == 'TSC_029t2') return 'TSC_029t'\r\n    if (['TSC_219t2','TSC_219t3','TSC_219t4'].includes(cardID)) return 'TSC_219t'\r\n    if (cardID == 'TSC_610') return 'SW_434'\r\n    if (cardID == 'TSC_638t3') return 'TSC_638t2'\r\n    if (cardID == 'TSC_638t4') return 'TSC_638'\r\n    if (cardID == 'TSC_659') return 'BT_133'\r\n    if (['TSC_919','TSC_919t'].includes(cardID)) return 'EX1_089'\r\n    if (cardID == 'TSC_932t') return 'ULD_292'\r\n    if (cardID == 'TSC_937t3') return 'TSC_937t'\r\n    if (cardID == ('TID_700')) return 'ULD_292'\r\n    if (['TID_711t2','TID_711t3','TID_711t4','TID_711t5','TID_711t6'].includes(cardID)) return 'TID_711t'\r\n    if (['TID_712t','TID_712t2'].includes(cardID)) return 'TSC_219t'\r\n    if (cardID == 'TID_744') return 'TSC_003'\r\n\r\n    // Cards with version groups will always be mapped to the wild (oldest) version's sounds.\r\n    else if (cardVersionGroup(cardID) != undefined) return cardVersionGroup(cardID).wild\r\n    else return cardID\r\n\r\n  } else return cardID\r\n\r\n}\r\n\r\nfunction getCardSounds (card, excludeRandom = true) {\r\n  // This handles the multi sound case.\r\n  let cardSounds = card.sounds\r\n\r\n  // Handle cards without a sound array defined (this is for most pre-Return to Naxx cards)\r\n  if ((cardSounds == undefined || cardSounds.length == 0) && card.type == 'MINION') {\r\n    cardSounds = [\r\n      {\r\n        \"name\": \"Play\",\r\n        \"audio\": altSoundsID(card.id) + \"_P\"\r\n      },\r\n      {\r\n        \"name\": \"Attack\",\r\n        \"audio\": altSoundsID(card.id) + \"_A\"\r\n      },\r\n      {\r\n        \"name\": \"Death\",\r\n        \"audio\": altSoundsID(card.id) + \"_D\"\r\n      },\r\n    ]\r\n\r\n    if (stingers.includes(card.id) || card.rarity == 'LEGENDARY') {\r\n      cardSounds.push(\r\n        {\r\n          \"name\": \"MusicStinger\",\r\n          \"audio\": altSoundsID(card.id) + \"_S\"\r\n        })\r\n    }\r\n\r\n    if (triggers.includes(card.id)) {\r\n      cardSounds.push(\r\n        {\r\n          \"name\": \"Trigger\",\r\n          \"audio\": altSoundsID(card.id) + \"_TR\"\r\n        })\r\n    }  \r\n  } else {\r\n    cardSounds = cardSounds.map(sound => sound.multi != undefined ? sound.multi : sound).flat()\r\n  }\r\n\r\n  // By storing valid sounds in this structure, each dictionary will create a row of sounds.\r\n  const validSounds = [\r\n    {'value': 'Stinger', 'name': 'Intro', 'row': 1}, \r\n    {'value': 'Trigger','name': 'Trigger', 'row': 1}, \r\n    {'value': 'Play', 'name': 'Play', 'row': 2}, \r\n    {'value': 'Attack', 'name': 'Attack', 'row': 2}, \r\n    {'value': 'Death', 'name': 'Death', 'row': 2}\r\n  ]    \r\n\r\n  // Exclude underlays for now.\r\n  cardSounds = cardSounds.filter(sound => !(sound.name.includes('Underlay')) && !(sound.name == 'Special'))\r\n\r\n  // Exclude random if needed.\r\n  if (excludeRandom) {\r\n    cardSounds = cardSounds.filter(sound => !sound.random)\r\n  }\r\n\r\n  // Determine sound rows.\r\n  for (let i = 0; i < cardSounds.length; i++) {\r\n    const matchedValidSound = validSounds.find(row => cardSounds[i].name.includes(row.value))\r\n    if (matchedValidSound) {\r\n      cardSounds[i].row = matchedValidSound.row\r\n      cardSounds[i].name = matchedValidSound.name\r\n    }\r\n  }    \r\n\r\n  return cardSounds\r\n}\r\n\r\nfunction buildHeroSoundArray(card) {\r\n  //console.log(card.sounds)\r\n\r\n  let cardSounds = card.sounds.filter(sound => sound[\"name\"] != 'Special')\r\n\r\n  let soundSections = [\r\n    'Gameplay',\r\n    'Emotes',\r\n    'Errors',\r\n    'Holidays'\r\n  ]\r\n\r\n  let heroSoundDicts = [\r\n    // Gameplay\r\n    {'name': 'Opening', 'section': 'Gameplay', 'order': 0},\r\n    {'name': 'Mirror Start', 'section': 'Gameplay', 'buttonName': 'Opening (Mirror)', 'order': 1},\r\n    {'name': 'Attack', 'section': 'Gameplay', 'order': 2},\r\n    {'name': 'Concede', 'section': 'Gameplay', 'order': 3},\r\n    {'name': 'Death', 'section': 'Gameplay', 'order': 4},\r\n    {'name': 'Out of Time', 'section': 'Gameplay', 'order': 5},\r\n    {'name': 'Thinking (1)', 'section': 'Gameplay', 'order': 6},\r\n    {'name': 'Thinking (2)', 'section': 'Gameplay', 'order': 7},\r\n    {'name': 'Thinking (3)', 'section': 'Gameplay', 'order': 8},\r\n    {'name': 'Low on Cards', 'section': 'Gameplay', 'order': 9},\r\n    {'name': 'Out of Cards', 'section': 'Gameplay', 'order': 10},\r\n    {'name': 'Picked in Arena', 'section': 'Gameplay', 'order': 11},\r\n    \r\n    // Emotes\r\n    {'name': 'Thanks', 'section': 'Emotes', 'order': 1},\r\n    {'name': 'Greetings', 'section': 'Emotes', 'order': 2},\r\n    {'name': 'Greetings (Mirror)', 'section': 'Emotes', 'order': 3},\r\n    {'name': 'Wow', 'section': 'Emotes', 'order': 4},\r\n    {'name': 'Threaten', 'section': 'Emotes', 'order': 5},\r\n    {'name': 'Well Played', 'section': 'Emotes', 'order': 6},\r\n    {'name': 'Oops', 'section': 'Emotes', 'order': 7},\r\n    {'name': 'Sorry', 'section': 'Emotes', 'order': 8},\r\n    \r\n    // Errors\r\n    {'name': 'Need Weapon', 'section': 'Errors', 'order': 1},\r\n    {'name': 'Mana', 'section': 'Errors', 'order': 2},\r\n    {'name': 'Minion Attacked', 'section': 'Errors', 'order': 3},\r\n    {'name': 'Hero Attacked', 'section': 'Errors', 'order': 4},\r\n    {'name': 'Summon Sickness', 'section': 'Errors', 'order': 5},\r\n    {'name': 'Full Hand', 'section': 'Errors', 'order': 6},\r\n    {'name': 'Too Many Minions', 'section': 'Errors', 'order': 7},\r\n    {'name': 'Stealth Minion', 'section': 'Errors', 'order': 8},\r\n    {'name': 'Can\\'t Play', 'section': 'Errors', 'order': 9},\r\n    {'name': 'Invalid Target', 'section': 'Errors', 'order': 10},\r\n    {'name': 'Taunt Minion', 'section': 'Errors', 'order': 11},\r\n    {'name': 'Generic', 'section': 'Errors', 'order': 12},\r\n\r\n    //Holidays\r\n    {'name': 'New Year', 'section': 'Holidays', 'order': 1},\r\n    {'name': 'Lunar New Year', 'section': 'Holidays', 'order': 2},\r\n    {'name': 'Noblegarden', 'section': 'Holidays', 'buttonName': 'Noble Garden', 'order': 3},\r\n    {'name': 'Mid Summer', 'section': 'Holidays', 'order': 4},\r\n    {'name': 'Pirate Day', 'section': 'Holidays', 'buttonName': 'Pirate\\'s Day', 'order': 5},\r\n    {'name': 'Hallow\\'s End', 'section': 'Holidays', 'order': 6},\r\n    {'name': 'Winter Veil', 'section': 'Holidays', 'order': 7},\r\n  ]\r\n\r\n  let heroSounds = cardSounds.filter(sound => heroSoundDicts.map(x => x['name']).includes(sound['name']))\r\n\r\n  heroSounds = heroSounds.map(sound => {\r\n    let heroSoundDict = heroSoundDicts.find(x => x['name'] == sound['name'])\r\n    sound['buttonName'] = heroSoundDict['buttonName'] != undefined ? heroSoundDict['buttonName'] : sound['name']\r\n    sound['order'] = heroSoundDict['order']\r\n    sound['section'] = heroSoundDict['section']\r\n    return sound\r\n  })\r\n\r\n  let soundArray = soundSections.map(section => {\r\n    return {'title': section, 'sounds': heroSounds.filter(sound => sound['section'] == section).sort((a,b) => a['order'] - b['order'])}\r\n  })\r\n    \r\n\r\n  let soundsNotMapped = cardSounds.filter(sound => !heroSoundDicts.map(x => x['name']).includes(sound['name']))\r\n  \r\n  if (soundsNotMapped.length != 0)\r\n    console.log(soundsNotMapped)\r\n\r\n  return soundArray\r\n}\r\n\r\nexport {tokenIDs, heroIDs, AVHeroCards, AVHeroPowers, battlegroundsIDs, duelsIDs, cardVersionGroup, newHeroSpecials,\r\n  battlegroundTribe, battlegroundToken, battlegroundHeroSpecific, battlegroundFlavor, battlegroundRetired, battlegroundTechLevel, battlegroundCard, battlegroundBartenderIDs, bartenderSounds, customVenari,\r\n  generalCards, heroCards, bgCards, duelsCards,\r\n  defaultHeroSounds, deathKnightHeroSounds, deathKnightRexxarHeroSounds, sharedCustomHeroSounds, galakrondHeroSounds, ragAndLordJarraxxusHeroSounds, medivhHeroSounds, renoHeroSounds, heroCardCustomSounds,\r\n  customCthun, customAluneth, customSkulloftheManari, customBarnes, customVulgarHomunculus, customHecklebot, customEvilHeclkerDalaranCrusader, customYogg, customFortuneTeller, customCheesemonger, customElitistSnob, customHipster, transferStudentTokens,\r\n  altSoundsID, complicatedAltSound, nonCoreCardVersions, getCardSounds, buildHeroSoundArray\r\n}\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider';\r\nimport { Text, View } from 'react-native';\r\nimport { getCardSounds } from './HelperFunctions'\r\n\r\nconst MinionSounds = (props) => {\r\n\r\n  const card = props.card\r\n  const cardsMissingSounds = ['UNG_065t','DAL_357t','BGS_046t', 'BAR_919t','SW_028t6']\r\n  \r\n  let cardSounds = getCardSounds(card)\r\n    \r\n  return (\r\n      <>\r\n        <View style={{justifyContent: 'space-around'}}>\r\n\r\n          {/*Cards with no sounds render differently.*/}\r\n          {(cardsMissingSounds.includes(card.id) ? <Text>{\"This card has no sounds!\"}</Text> : \r\n              <>\r\n                {/* Build a distinct array of row numbers and render a set of buttons for each. */}\r\n                {[...new Set(cardSounds.map(sound => sound.row))].sort().map(row => (\r\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginBottom: 8, justifyContent: 'center'}}>\r\n                      {/* Filter mapped sounds for only those that match the row. */}\r\n                      {cardSounds.filter(sound => sound.row == row).map(sound => (\r\n                        <SoundButton title={sound.name} sound={sound.audio}/>\r\n                      ))} \r\n                    </View>\r\n                  ))}\r\n              </>\r\n          )}\r\n        </View>\r\n        <SoundDivider/>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default MinionSounds","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider';\r\nimport deathknights from './assets/deathknights.json';\r\nimport galakronds from './assets/galakronds.json';\r\nimport { View, Text } from 'react-native';\r\nimport DeviceContext from './DeviceContext'\r\nimport {defaultHeroSounds, deathKnightHeroSounds, deathKnightRexxarHeroSounds, AVHeroCards,\r\n  sharedCustomHeroSounds, galakrondHeroSounds, ragAndLordJarraxxusHeroSounds, medivhHeroSounds, renoHeroSounds, complicatedAltSound, \r\n  battlegroundBartenderIDs, bartenderSounds, customVenari, heroCardCustomSounds, buildHeroSoundArray} from './HelperFunctions'\r\n\r\nconst HeroSounds = (props) => {\r\n\r\n  let card = props.card\r\n  let cardID = card.id\r\n  let deviceType = React.useContext(DeviceContext)\r\n\r\n  const RenderSoundArrays = (props) => {\r\n    if (deathknights.map(a => a.id).includes(cardID) && cardID != \"ICC_828\") return <SoundArray soundArrays={deathKnightHeroSounds}/>\r\n    else if (cardID == 'ICC_828') return <SoundArray soundArrays={deathKnightRexxarHeroSounds}/>\r\n    else if (['BOT_238','GIL_504','TRL_065'].includes(cardID)) return <SoundArray soundArrays={sharedCustomHeroSounds}/>\r\n    else if (cardID == 'YOD_009') return <SoundArray soundArrays={renoHeroSounds}/>\r\n    else if (['EX1_323h','CORE_EX1_323','BRM_027h'].includes(cardID)) return <SoundArray soundArrays={ragAndLordJarraxxusHeroSounds}/>\r\n    else if (cardID == 'HERO_08a') return <SoundArray soundArrays={medivhHeroSounds}/>\r\n    else if (galakronds.map(a => a.id).includes(cardID)) return <SoundArray soundArrays={galakrondHeroSounds}/>\r\n    else if (cardID == 'TB_BaconShopBob_SKIN_B') return <SoundArray soundArrays={customVenari}/>\r\n    else if (battlegroundBartenderIDs.includes(cardID)) return <SoundArray soundArrays={bartenderSounds}/>\r\n    else if (AVHeroCards.includes(cardID)) return <SoundArray soundArrays={heroCardCustomSounds} />\r\n    else return <SoundArray soundArrays={buildHeroSoundArray(card)} rework={true}/>\r\n  }\r\n\r\n  const SoundArray = (props) => {\r\n    return (\r\n      <View style={{alignSelf: 'flex-start', width: \"100%\"}}>\r\n        {props.soundArrays.map(section => (\r\n          <> {props.rework ? \r\n            <SoundButtonArray sectionTitle={section[\"title\"]} sounds={section[\"sounds\"]} rework={props.rework}/> :           \r\n            <SoundButtonArray sectionTitle={section[0]} sounds={section[1]} rework={props.rework}/>\r\n          }\r\n          </>\r\n        ))}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const SoundButtonArray = (props) => {\r\n    return (\r\n      <>\r\n        <View style={{flexDirection: 'row', paddingBottom: 8}}>\r\n          <Text style={{paddingTop: 4, alignSelf: 'flex-start', fontWeight: 'bold', width: \"15%\", fontSize: deviceType == 'mobile' ? 10.5 : 14}}>{props.sectionTitle}</Text>\r\n          <View style={{flexDirection: 'row', flexWrap: 'wrap', width: \"85%\"}}> \r\n              {props.sounds.map(sound => ( \r\n                <>\r\n                {props.rework ? \r\n                  <SoundButton title={sound[\"buttonName\"]} sound={sound.audio}/> :\r\n                  <SoundButton title={sound[0]} cardID={complicatedAltSound(cardID, sound[1])} sound={complicatedAltSound(cardID, sound[1]) + '_' + sound[1]}/>\r\n                }\r\n                </>\r\n              ))}\r\n          </View>\r\n        </View>\r\n        <SoundDivider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{alignSelf: 'flex-start', width: \"100%\"}}>\r\n      <RenderSoundArrays/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default HeroSounds\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider'\r\nimport { View, Text, FlatList, Image, TouchableOpacity } from 'react-native';\r\nimport heroes from './assets/heroes.json';\r\nimport tokens from './assets/tokens.json';\r\nimport {complicatedAltSound, AVHeroPowers, transferStudentTokens} from './HelperFunctions';\r\n\r\nconst TokensFlatList = (props) => {\r\n\r\n  const heroTokens = {\r\n    \"WARRIOR\": [\"HERO_01bp\"],\r\n    \"SHAMAN\": [\"HERO_02bp\",\"NEW1_009\",\"CS2_050\",\"CS2_051\",\"CS2_052\",\"AT_132_SHAMANe\"],\r\n    \"ROGUE\": [\"HERO_03bp\",\"CS2_082\"],\r\n    \"PALADIN\": [\"HERO_04bp\",\"CS2_101t\"],\r\n    \"HUNTER\": [\"HERO_05bp\"],\r\n    \"DRUID\": [\"HERO_06bp\"],\r\n    \"WARLOCK\": [\"HERO_07bp\"],\r\n    \"MAGE\": [\"HERO_08bp\"],\r\n    \"PRIEST\": [\"HERO_09bp\"],\r\n    \"DEMONHUNTER\": [\"HERO_10bp\"],\r\n    \"DEATHKNIGHT\": [\"HERO_11bp\", \"HERO_11bpt\"]\r\n  }\r\n\r\n  const cardID = complicatedAltSound(props.cardID)\r\n  const isHero =  heroes.map(a => a.id).includes(props.cardID)\r\n  const hasTokens = (tokens.map(a => a.parentID).includes(cardID) || isHero || cardID == 'SCH_199')\r\n  let tokenList = (isHero ? heroTokens[props.cardClass] : tokens.filter(x => x.parentID == cardID).map(a => a.tokenID))\r\n\r\n  /* Transfer student special case */\r\n  if (cardID == 'SCH_199') {\r\n    tokenList = transferStudentTokens\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {hasTokens\r\n      ?\r\n      <>\r\n        <View style={{flexDirection: 'row', alignSelf: 'flex-start', width: \"100%\", paddingBottom: 8}}>\r\n          <Text style={{alignSelf: 'flex-start', paddingRight: 8, fontWeight: 'bold', width: 80}}>Related</Text>\r\n            <FlatList\r\n              horizontal='true'\r\n              data={(tokenList)}\r\n              renderItem={({item}) => (\r\n                  <TouchableOpacity onPress={() => {props.openNewCard(item)}}>\r\n                    <TokenImage cardID={item} battlegrounds={props.battlegrounds}/>\r\n                  </TouchableOpacity>\r\n              ) }\r\n            />\r\n      </View>\r\n      <SoundDivider/>\r\n      </>\r\n      : <></>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nconst TokenImage = (props) => {\r\n  const isHero =  heroes.map(a => a.id).includes(props.cardID)\r\n  const imgSrc = getImage(props.cardID)\r\n\r\n    function getImage(cardID) {\r\n      if (isHero || ['EX1_323h'].includes(cardID) || AVHeroPowers.includes(cardID)) {\r\n        return 'https://hearthstonesounds.s3.amazonaws.com/' + cardID + '.png'\r\n      } else if (props.battlegrounds) {\r\n        return 'https://art.hearthstonejson.com/v1/bgs/latest/enUS/256x/' + cardID + '.png'\r\n      } else {\r\n        return 'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/' + cardID + '.png'\r\n      }\r\n    }\r\n\r\n  return (\r\n    <View style={{padding: 10}}>\r\n      <Image source={{uri: imgSrc}} style={{width: 128, height: 194, resizeMode:'stretch'}}/> \r\n    </View>\r\n  )\r\n}\r\n\r\nexport default TokensFlatList\r\n","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport { View, Text, FlatList, Image, TouchableOpacity } from 'react-native';\r\nimport SoundDivider from './SoundDivider'\r\nimport heroes from './assets/heroes.json';\r\nimport specials from './assets/specials.json';\r\nimport {AVHeroCards, newHeroSpecials} from './HelperFunctions'\r\n\r\nconst SpecialsFlatList = (props) => {\r\n\r\n  // Need a scroll to top when new card is clicked.\r\n  let specials = props.card.sounds.filter(sound => sound.name == 'Special')\r\n\r\n  return (\r\n    <>\r\n    {specials.length > 0\r\n      ?\r\n      <>\r\n        <View style={{flexDirection: 'row', alignSelf: 'flex-start', width: '100%', paddingBottom: 8}}>\r\n          <Text style={{alignSelf: 'flex-start', paddingRight: 8, fontWeight: 'bold', width: 80}}>Special</Text>\r\n            <FlatList\r\n              horizontal='true'\r\n              data={specials}\r\n              renderItem={({ item, index }) => (\r\n                  <View style={{alignItems: 'center', justifyContent: 'flex-start'}}>\r\n                    <TouchableOpacity onPress={() => {item.special_id.includes(\"HERO_00\") ? {} : props.openNewCard(item.special_id)}} style={{marginBottom: -24}}>\r\n                      <SpecialImage cardID={item.special_id}/>\r\n                    </TouchableOpacity>\r\n                    <SoundButton title={item.action} sound={item.audio} />\r\n                  </View>\r\n              ) }\r\n            />\r\n        </View>\r\n        <SoundDivider/>\r\n      </>\r\n      : <></>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nconst SpecialImage = (props) => {\r\n  const cardID = props.cardID\r\n  const isHero = heroes.map(a => a.id).includes(cardID) || cardID.includes(\"HERO_00\")\r\n\r\n  const isAVHeroCard = AVHeroCards.includes(cardID)\r\n  const imgSrc = ((isHero || AVHeroCards.includes(cardID) ||\r\n    ['TB_BaconShop_HERO_11','BG20_HERO_201','TB_BaconShop_HERO_27','TB_BaconShop_HERO_78','EX1_323h'].includes(cardID)) ?\r\n    'https://hearthstonesounds.s3.amazonaws.com/hero_images/' :\r\n    'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/')\r\n    + cardID + '.png'\r\n\r\n  return (\r\n    <View style={{padding: 10}}>\r\n    {isHero \r\n      ? <Image source={{uri: imgSrc}} style={{width: 160, height: 160, resizeMode:'stretch', marginBottom: 17, marginRight: -16, marginLeft: -16}}/>\r\n      : isAVHeroCard \r\n        ? <Image source={{uri: imgSrc}} style={{width: 120, height: 165.76, resizeMode:'contain', marginLeft: 4, marginRight: 4, marginBottom: 21.24, marginTop: -10}}/>\r\n        : <Image source={{uri: imgSrc}} style={{width: 128, height: 194, marginTop: -17, resizeMode:'stretch'}}/>\r\n    }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SpecialsFlatList","import React from 'react';\r\nimport SoundButton from './SoundButton';\r\nimport SoundDivider from './SoundDivider';\r\nimport { View, Text } from 'react-native';\r\nimport { customCthun, customAluneth, customSkulloftheManari, customBarnes,\r\n  customVulgarHomunculus, customHecklebot, customEvilHeclkerDalaranCrusader,\r\n  customYogg, customFortuneTeller, customCheesemonger, customElitistSnob,\r\n  customHipster } from './HelperFunctions';\r\n\r\nconst Specials = (props) => {\r\n\r\n  const cardID = props.cardID\r\n  const deviceType = props.deviceType\r\n\r\n  const RenderSoundArrays = (props) => {\r\n      if (cardID == 'OG_280') return <SoundButtonArray sounds={customCthun}/>\r\n      else if (cardID == 'LOOT_108') return <SoundButtonArray sounds={customAluneth}/>\r\n      else if (cardID == 'LOOT_420') return <SoundButtonArray sounds={customSkulloftheManari}/>\r\n      else if (cardID == 'KAR_114') return <SoundButtonArray sounds={customBarnes}/>\r\n      else if (cardID == 'DAL_058') return <SoundButtonArray sounds={customHecklebot}/>\r\n      else if (cardID == 'LOOT_013') return <SoundButtonArray sounds={customVulgarHomunculus}/>\r\n      else if (cardID == 'AT_114') return <SoundButtonArray sounds={customEvilHeclkerDalaranCrusader}/>\r\n      else if (cardID == 'DAL_085') return <SoundButtonArray sounds={customEvilHeclkerDalaranCrusader}/>\r\n      else if (cardID == 'DMF_004') return <SoundButtonArray sounds={customYogg}/>\r\n      else if (cardID == 'DMF_121') return <SoundButtonArray sounds={customFortuneTeller}/>\r\n      else if (cardID == 'SW_073') return <SoundButtonArray sounds={customCheesemonger}/>\r\n      else if (cardID == 'REV_961') return <SoundButtonArray sounds={customElitistSnob}/>\r\n      else if (cardID == 'ETC_103') return <SoundButtonArray sounds={customHipster()} fullSoundFileName={true}/>\r\n      else return (<></>)\r\n  }\r\n\r\n  const SoundButtonArray = (props) => {\r\n    return (\r\n      <>\r\n        <View style={{flexDirection: 'row', paddingBottom: 8}}>\r\n            <Text style={{paddingTop: 4, alignSelf: 'flex-start', fontWeight: 'bold', width: \"15%\", fontSize: deviceType == 'mobile' ? 10.5 : 14}}>Special</Text>\r\n          <View style={{flexDirection: 'row', flexWrap: 'wrap', width: \"85%\"}}>\r\n            {props.sounds.map(sound => (\r\n              <SoundButton title={sound[0]} cardID={cardID} sound={props.fullSoundFileName ? sound[1] : cardID + '_' + sound[1]} deviceType={deviceType}/>\r\n            ))}\r\n          </View>\r\n        </View>\r\n        <SoundDivider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{alignSelf: 'flex-start', width: \"100%\"}}>\r\n      <RenderSoundArrays/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Specials\r\n","import React from 'react';\r\nimport {Image} from 'react-native';\r\n\r\nconst SmallSetImage = (props) => {\r\n  const cardSet = props.cardSet\r\n\r\n  const cardImageDict = {\r\n    \"TITANS\": \"TTNIcon.png\",\r\n    \"CORE\": \"WolfIcon.png\",\r\n    \"EXPERT1\": \"Set1_Icon.png\",\r\n    \"VANILLA\": \"ClassicIcon.png\",\r\n    \"HOF\": \"HallOfFameIcon.png\",\r\n    \"NAXX\": \"NaxxIcon.png\",\r\n    \"GVG\": \"GvGIcon.png\",\r\n    \"BRM\": \"BRMIcon.png\",\r\n    \"TGT\": \"TGTIcon.png\",\r\n    \"LOE\": \"LOEIcon.png\",\r\n    \"OG\": \"OGIcon.png\",\r\n    \"KARA\": \"KaraIcon.png\",\r\n    \"GANGS\": \"GangsIcon.png\",\r\n    \"UNGORO\": \"UNGIcon.png\",\r\n    \"ICECROWN\": \"ICCIcon.png\",\r\n    \"LOOTAPALOOZA\": \"LOOTIcon.png\",\r\n    \"GILNEAS\": \"GILIcon.png\",\r\n    \"BOOMSDAY\": \"BOTIcon.png\",\r\n    \"TROLL\": \"TRLIcon.png\",\r\n    \"DALARAN\": \"DALIcon.png\",\r\n    \"ULDUM\": \"UldumIcon.png\",\r\n    \"DRAGONS\": \"DRGIcon.png\",\r\n    \"YEAR_OF_THE_DRAGON\": \"DRGIcon_MiniSet.png\",\r\n    \"DEMON_HUNTER_INITIATE\": \"DHIIcon.png\",\r\n    \"BLACK_TEMPLE\": \"BTIcon.png\",\r\n    \"SCHOLOMANCE\": \"SCHIcon.png\",\r\n    \"DARKMOON_FAIRE\": \"DMFIcon.png\",\r\n    \"DARKMOON_RACES\": \"DMFIcon_MiniSet.png\",\r\n    \"THE_BARRENS\": \"BARIcon.png\",\r\n    \"WAILING_CAVERNS\": \"BARIcon_MiniSet.png\",\r\n    \"STORMWIND\": \"SWIcon.png\",\r\n    \"DEADMINES\": \"SWIcon_MiniSet.png\",\r\n    \"ALTERAC_VALLEY\": \"AVIcon.png\",\r\n    \"ONYXIA\": \"AVIcon_MiniSet.png\",\r\n    \"THE_SUNKEN_CITY\": \"SCIcon.png\",          \r\n    \"THRONE_TIDES\": \"SCIcon_MiniSet.png\",\r\n    \"REVENDRETH\": \"REVIcon.png\",\r\n    \"MAW_AND_DISORDER\": \"REVIcon_MiniSet.png\",   \r\n    \"PATH_OF_ARTHAS\": \"PoAIcon.png\",                     \r\n    \"RETURN_OF_THE_LICH_KING\": \"RLKIcon.png\",\r\n    \"RETURN_TO_NAXXRAMAS\": \"RLKIcon_MiniSet.png\",\r\n    \"BATTLE_OF_THE_BANDS\": \"BotBIcon.png\",\r\n    \"AUDIOPOCALYPSE\": \"BotBIcon_MiniSet.png\",\r\n    \"YOGG\": \"TTNIcon_MiniSet.png\",\r\n  }\r\n\r\n\r\n  return (\r\n    <Image style={{width: 34, height: 34}} source={require('./assets/img/' + cardImageDict[cardSet])}/>\r\n  )\r\n}\r\n\r\nexport default SmallSetImage;\r\n","import React from 'react';\r\nimport MinionSounds from './MinionSounds';\r\nimport HeroSounds from './HeroSounds';\r\nimport TokensFlatList from './TokensFlatList'\r\nimport SpecialsFlatList from './SpecialsFlatList';\r\nimport Specials from './Specials';\r\nimport SmallSetImage from './SmallSetImage';\r\nimport SoundDivider from './SoundDivider'\r\nimport { StyleSheet, Text, View, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport heroes from './assets/heroes.json';\r\nimport DeviceContext from './DeviceContext'\r\nimport {sortCards, tokenIDs, heroIDs, AVHeroCards, AVHeroPowers, cardVersionGroup, battlegroundFlavor, battlegroundRetired, battlegroundCard, battlegroundTribe} from './HelperFunctions'\r\n\r\nconst Card = (props) => {\r\n\r\n  const scrollViewRef = React.useRef()\r\n  const deviceType = React.useContext(DeviceContext)\r\n\r\n  const cardID = props.card.id\r\n  const isHero = heroIDs.includes(cardID)\r\n  const imgSrc = getImage(cardID)\r\n\r\n  function getImage(cardID) {\r\n\r\n    if (heroIDs.includes(cardID))\r\n      return 'https://hearthstonesounds.s3.amazonaws.com/hero_images/' + cardID + '.png'\r\n    else if (cardID == 'EX1_323h' || (props.battlegrounds && battlegroundTribe(cardID) == 'Bartender') || AVHeroPowers.includes(cardID) || AVHeroCards.includes(cardID))\r\n      return 'https://hearthstonesounds.s3.amazonaws.com/' + cardID + '.png'\r\n    else if (props.battlegrounds)\r\n      return 'https://art.hearthstonejson.com/v1/bgs/latest/enUS/256x/' + cardID + '.png'\r\n    else\r\n      return 'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/' + cardID + '.png'\r\n  }\r\n\r\n  function goToTop() {\r\n      scrollViewRef.current.scrollTo({ animated: true, x: 0 })\r\n  }\r\n\r\n  function findFlavor() {\r\n    if (isHero)\r\n      return heroes.find(x => x.id == cardID).description\r\n    else if (!props.battlegrounds)\r\n      return props.card.flavor\r\n    else if (props.battlegrounds && battlegroundCard(cardID).heroSpecific)\r\n      return battlegroundFlavor(cardID)\r\n    else if (props.battlegrounds && battlegroundRetired(cardID))\r\n      return 'This card is retired and no longer appears in Battlegrounds.'\r\n  }\r\n\r\n  function formatText(text) {\r\n\r\n    // Check to see if there are any html tags.\r\n    let regex = new RegExp(/<(?<type>\\S+?)>/)\r\n    let valid_tag_types = ['b', 'i', 'color']\r\n    if (text && text.match(regex) != null) {\r\n\r\n      let found_opening_tag = text.match(regex)\r\n\r\n      let found_tag_type = found_opening_tag.groups.type\r\n\r\n      // Handle color tags differently. Store color for later.\r\n      if (found_tag_type.includes('color')) {\r\n        var color = found_tag_type.split(\"=\")[1]\r\n        found_tag_type = 'color'\r\n      }\r\n\r\n\r\n      // Capture text before the HTML tag.\r\n      let text_before = text.substring(0,found_opening_tag.index)\r\n      \r\n      // Capture text after the opening HTML tag\r\n      let text_leftover = text.substring(found_opening_tag.index + found_opening_tag[0].length)\r\n\r\n      // There are some \"actions\" wrapped in <> - like <sniff> for SW_110. \r\n      // Don't clip the tag-like string but skip further processing. Continue the recursive chain though.\r\n      if (!valid_tag_types.includes(found_tag_type)) {\r\n        text_before = formatText(text_before) + found_opening_tag[0]\r\n        text_leftover = formatText(text_leftover)\r\n        return [text_before, text_leftover]\r\n      }\r\n\r\n      // Find the corresponding closing HTML tag.\r\n      let regex_close = new RegExp(\"<(\\/\"+found_tag_type+\")>\")\r\n      let found_closing_tag = text_leftover.match(regex_close)\r\n\r\n      // Build an object that wraps the text between HTML tags.\r\n      let text_mid = text_leftover.substring(0,found_closing_tag.index)\r\n\r\n      // Capture text after the closing HTML tag.\r\n      let text_end = text_leftover.substring(found_closing_tag.index + found_closing_tag[0].length)\r\n\r\n      // Recursively format test on before, mid, and end.\r\n      text_before = formatText(text_before)\r\n      text_mid = formatText(text_mid)\r\n      text_end = formatText(text_end)\r\n\r\n      // Create object wrapped in HTML tags for the middle text.\r\n      if (found_tag_type == 'color') {\r\n        text_mid = <font color={color}>{text_mid}</font>\r\n      } else if (found_tag_type == 'i') {\r\n        text_mid = <i>{text_mid}</i>\r\n      } else if (found_tag_type == 'b') {\r\n        text_mid = <b>{text_mid}</b>\r\n      }\r\n\r\n      return [text_before, text_mid, text_end]\r\n\r\n    } else {\r\n      return text\r\n    }\r\n\r\n  }\r\n\r\n  const openNewCard = (newID, addToCardsList=true) => {\r\n    goToTop()\r\n    props.openNewCard(newID, addToCardsList)\r\n  }\r\n\r\n  const closeCards = () => {\r\n    props.closeCards()\r\n  }\r\n\r\n  const SoundLayout = (props) => {\r\n    if (props.card.type == 'MINION' || props.card.id == 'EX1_323') {return (<MinionSounds card={props.card}/>)}\r\n    else if (props.card.type == 'HERO') {return(<HeroSounds card={props.card}/>)}\r\n    else {return (<></>)}\r\n  }\r\n\r\n  function imageHeight() {\r\n    if (deviceType == 'mobile')\r\n      return \"65%\"\r\n    else if (isHero)\r\n      return 345\r\n    else if (props.battlegrounds)\r\n      return 395\r\n    else\r\n      return 388\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    image: {\r\n      aspectRatio: 1.5,\r\n      height: imageHeight(),\r\n      width: '100%',\r\n      resizeMode: 'contain'\r\n    },\r\n    switchSetStyle: {\r\n      height: '100%', width:40, resizeMode: 'contain'\r\n    }\r\n  })\r\n\r\n  const SetSwitcher = () => {\r\n    const versionGroup = cardVersionGroup(cardID)\r\n    const [switchSet, setSwitcherSet] = React.useState(versionGroup != undefined ? {\r\n      \"core\": versionGroup.core == cardID,\r\n      \"wild\": versionGroup.wild == cardID,\r\n      \"classic\": versionGroup.classic == cardID\r\n    } : {\"core\": false, \"wild\": false, \"classic\": false})\r\n\r\n    return (\r\n      <>\r\n      { (versionGroup != undefined) ?\r\n        <View style={{justifyContent: 'center', height: 40, flexDirection: 'row', position: 'absolute', top: 0, right: 0, left: 0, zIndex : 1}}>\r\n          {versionGroup.core != undefined ? <TouchableOpacity onPress={() => {\r\n            if(cardID != versionGroup.core) {\r\n              setSwitcherSet({\"core\": true, \"wild\": false, \"classic\": false})\r\n              openNewCard(versionGroup.core, false)\r\n            }\r\n          }}><Image source={require(switchSet.core ? './assets/img/GryphonIconSelected.png' : './assets/img/GryphonIcon.png')} style={styles.switchSetStyle}/></TouchableOpacity> : <></>}\r\n          {versionGroup.wild != undefined ? <TouchableOpacity onPress={() => {\r\n            if(cardID != versionGroup.wild) {\r\n              setSwitcherSet({\"core\": false, \"wild\": true, \"classic\": false})\r\n              openNewCard(versionGroup.wild, false)\r\n            }\r\n          }}><Image source={require(switchSet.wild ? './assets/img/Set1_IconSelected.png' : './assets/img/Set1_Icon.png')} style={styles.switchSetStyle}/></TouchableOpacity> : <></>}\r\n          {versionGroup.classic ? <TouchableOpacity onPress={() => {\r\n            if(cardID != versionGroup.classic) {\r\n              setSwitcherSet({\"core\": false, \"wild\": false, \"classic\": true})\r\n              openNewCard(versionGroup.classic, false)\r\n            }\r\n          }}><Image source={require(switchSet.classic ? './assets/img/ClassicIconSelected.png' : './assets/img/ClassicIcon.png')} style={styles.switchSetStyle}/></TouchableOpacity> : <></>}\r\n        </View>\r\n        : <></>\r\n      }\r\n    </>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {props.previousCardExists ?\r\n        <TouchableOpacity style={{position: 'absolute', top: 0, left: 0, zIndex : 2}} onPress={() => {\r\n            goToTop()\r\n            props.returnToPreviousCard()}}\r\n            >\r\n          <Ionicons name=\"md-arrow-round-back\" size={36} color=\"#bdbdbd\" />\r\n        </TouchableOpacity>\r\n        : <></>\r\n      }\r\n      <TouchableOpacity style={{position: 'absolute', top: 0, right: 0, zIndex : 2}} onPress={() => {\r\n          props.closeCards()}}\r\n          >\r\n        <Ionicons name=\"md-close\" size={36} color=\"#bdbdbd\" />\r\n      </TouchableOpacity>\r\n      <SetSwitcher/>\r\n      <View style={{ flex: 1, padding: 8, alignItems: 'center'}}>\r\n      <Image source={{uri: imgSrc}} style={styles.image}/>\r\n\r\n        <ScrollView style={{width: \"100%\"}} ref={scrollViewRef}>\r\n          <Text style={{padding: 16}}>{formatText(findFlavor())}</Text>\r\n          <SoundDivider/>\r\n          <SoundLayout card={props.card}/>\r\n          <SpecialsFlatList card={props.card} openNewCard={openNewCard} closeCard={closeCards}/>\r\n          <Specials cardID={cardID}/>\r\n          <TokensFlatList cardID={cardID} cardClass = {props.card.cardClass} openNewCard={openNewCard} closeCard={closeCards} battlegrounds={props.battlegrounds}/>\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport { ActivityIndicator, Text, View, Image, Button, TouchableWithoutFeedback, FlatList} from 'react-native';\r\n\r\nconst FlatListItemSeparator = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: 1,\r\n        width: \"100%\",\r\n        opacity: 0.25,\r\n        backgroundColor: \"#000000\",\r\n        marginRight: 8\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FlatListItemSeparator\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, TouchableWithoutFeedback, Switch, Linking } from 'react-native';\r\nimport SoundDivider from './SoundDivider'\r\nimport DeviceContext from './DeviceContext'\r\n\r\nconst InfoModal = (props) => {\r\n\r\n  const deviceType = React.useContext(DeviceContext)\r\n\r\n  const styles = StyleSheet.create({\r\n    button: {\r\n      alignItems: \"center\", padding: 10, justifyContent: 'center', backgroundColor: \"#2196F3\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    text: {\r\n      alignItems: \"center\", justifyContent: 'center', fontSize: deviceType == 'mobile' ? 12 : 14,\r\n    },\r\n    textSmall: {\r\n      alignItems: \"center\", justifyContent: 'center', fontSize: deviceType == 'mobile' ? 8 : 10,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <View style={{position: 'absolute',\r\n      top: deviceType == 'mobile' ? '10%' : '30%',\r\n      left: 0, right: 0, marginLeft: 'auto', marginRight: 'auto',\r\n      zIndex: 1, backgroundColor: 'white',\r\n      visibility:props.infoModalVisibility,\r\n      padding: 16,\r\n      textAlign: 'center',\r\n      width: deviceType == 'mobile' ? '75%' : '25%',\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5}} >\r\n      <Text style={[styles.text, {padding: 8}]}>Welcome to the best source of Hearthstone sounds! Thank you for using HearthSFX.</Text>\r\n      <Text style={[styles.text, {padding: 8}]}>{'For inquiries, suggestions, or ideas please reach out to me at '}\r\n        <TouchableWithoutFeedback href={'mailto:hearthsfx@gmail.com'} accessibilityRole=\"link\" target=\"_blank\" >\r\n          <View>\r\n            <Text style={{color:'blue', textDecorationLine: 'underline'}}>hearthsfx@gmail.com</Text>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        <Text>, </Text>\r\n        <TouchableWithoutFeedback href={'https://twitter.com/HearthSFX'} accessibilityRole=\"link\" target=\"_blank\" >\r\n          <View>\r\n            <Text style={{color:'blue', textDecorationLine: 'underline'}}>Twitter</Text>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        <Text>, or on Discord @BlackLedger.</Text>\r\n      </Text>\r\n      <SoundDivider/>\r\n      <View style={{paddingBottom: 8}}>\r\n        <Text style={[styles.text, {paddingBottom: 8}]}>Interested in helping cover some of the hosting costs? Support me using any of the following:</Text>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space', alignItems: 'center', paddingBottom: 8}}>\r\n            <TouchableWithoutFeedback href={'https://ko-fi.com/hearthsfx'}\r\n            accessibilityRole=\"link\" target=\"_blank\" >\r\n              <Image style={{width: 34, height: 34}} source={require('./assets/img/kofi.png')}/>\r\n            </TouchableWithoutFeedback>\r\n          <Text style={[styles.text, {paddingLeft: 8}]}>Ko-fi</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space', alignItems: 'center', paddingBottom: 8}}>\r\n          <TouchableWithoutFeedback href={'bitcoin:35W3nrEVSq7BdrnXc4ZPGPVMFFhDhmxLR2'}\r\n          accessibilityRole=\"link\" target=\"_blank\" >\r\n            <Image style={{width: 34, height: 34}} source={require('./assets/img/bitcoin.png')}/>\r\n          </TouchableWithoutFeedback>\r\n          <Text style={[styles.text, {paddingLeft: 8, wordBreak: 'break-word'}]}>35W3nrEVSq7BdrnXc4ZPGPVMFFhDhmxLR2</Text>\r\n        </View>\r\n        <View style={{flexDirection: 'row', justifyContent: 'space', alignItems: 'center', paddingBottom: 8}}>\r\n          <TouchableWithoutFeedback href={'litecoin:MWYuAdzNKRDtocskRmqFwpMD9Fg9U7Yr5R'}\r\n          accessibilityRole=\"link\" target=\"_blank\" >\r\n            <Image style={{width: 34, height: 34}} source={require('./assets/img/litecoin.png')}/>\r\n          </TouchableWithoutFeedback>\r\n          <Text style={[styles.text, {paddingLeft: 8, wordBreak: 'break-word'}]}>MWYuAdzNKRDtocskRmqFwpMD9Fg9U7Yr5R</Text>\r\n        </View>\r\n      </View>\r\n      <SoundDivider/>\r\n      <Text style={[styles.text, {paddingBottom: 8}]}>{'Hearthstone Patch 27.0.0.181554'}</Text>\r\n      <SoundDivider/>\r\n      <Text style={[styles.textSmall, {paddingBottom: 8}]}>{'HearthSFX is not affiliated with or endorsed by Blizzard Entertainment. Images, sounds, and descriptions are trademarked and subject to copyright below.'}</Text>\r\n      <Text style={[styles.textSmall, {paddingBottom: 8}]}>{'Hearthstone®: Heroes of Warcraft™\\n©2014 Blizzard Entertainment, Inc. All rights reserved. Heroes of Warcraft is a trademark, and Hearthstone is a registered trademark of Blizzard Entertainment, Inc. in the U.S. and/or other countries.'}</Text>\r\n\r\n      <TouchableOpacity style={styles.button} onPress= {props.closeInfoModal}>\r\n        <Text style={[styles.text, {color: 'white'}]}>Close</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default InfoModal\r\n","import React from 'react';\r\nimport { useFonts, Roboto_700Bold} from '@expo-google-fonts/roboto';\r\nimport {Text} from 'react-native';\r\n\r\nconst ToolbarTitle = () => {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Roboto_700Bold ,\r\n  });\r\n\r\n  const title = 'HearthSFX'\r\n\r\n  if(!fontsLoaded) {\r\n    return (<></>)\r\n  }\r\n  else {\r\n    return (<Text style={{fontFamily: Roboto_700Bold, fontSize: 20, color: 'white', fontWeight: '500'}}>{title}</Text>)\r\n  }\r\n}\r\n\r\nexport default ToolbarTitle\r\n","import React from 'react';\r\nimport { StyleSheet, View} from 'react-native';\r\nimport VerticalSlider from 'rn-vertical-slider';\r\nimport VolumeContext from './VolumeContext'\r\n\r\n\r\nconst VolumeSlider = (props) => {\r\n\r\n  const [volume, setVolume] = React.useContext(VolumeContext)\r\n  const visibility = props.visibility\r\n\r\n  const styles = StyleSheet.create({\r\n    volumeSlider:\r\n      {position: 'absolute', right: 86, top:64, zIndex: 1, visibility: visibility,\r\n      elevation: 5,\r\n    }\r\n  })\r\n\r\n  return (\r\n      <View style={styles.volumeSlider}>\r\n          <VerticalSlider\r\n            value={volume}\r\n            min={0}\r\n            max={100}\r\n            onChange={(value: number) => {\r\n              setVolume(value)\r\n            }}\r\n            width={36}\r\n            height={100}\r\n            step={5}\r\n            minimumTrackTintColor={\"#2196F3\"}\r\n            maximumTrackTintColor={\"#bdbdbd\"}\r\n            shadowProps = {{\r\n              shadowRadius: 5,\r\n              shadowOpacity: 0.5,\r\n              shadowOffsetHeight: 2\r\n            }}\r\n          />\r\n        </View>\r\n  )\r\n}\r\n\r\nexport default VolumeSlider\r\n","import React, { useState, useEffect } from 'react';\r\nimport {View, Animated, Image} from 'react-native';\r\n\r\nconst cardClassImageDict = {\r\n    \"DEATHKNIGHT\": require(\"./assets/img/class_small_deathknight.png\"),\r\n    \"DEMONHUNTER\": require(\"./assets/img/class_small_demonhunter.png\"),\r\n    \"DRUID\": require(\"./assets/img/class_small_druid.png\"),\r\n    \"HUNTER\": require(\"./assets/img/class_small_hunter.png\"),\r\n    \"MAGE\": require(\"./assets/img/class_small_mage.png\"),\r\n    \"PALADIN\": require(\"./assets/img/class_small_paladin.png\"),\r\n    \"PRIEST\": require(\"./assets/img/class_small_priest.png\"),\r\n    \"ROGUE\": require(\"./assets/img/class_small_rogue.png\"),\r\n    \"SHAMAN\": require(\"./assets/img/class_small_shaman.png\"),\r\n    \"WARLOCK\": require(\"./assets/img/class_small_warlock.png\"),\r\n    \"WARRIOR\": require(\"./assets/img/class_small_warrior.png\"),\r\n    \"NEUTRAL\": require(\"./assets/img/class_small_neutral.png\")\r\n}\r\n\r\nconst SmallClassImage = (props) => {\r\n\r\n  const cardClass = props.card.cardClass\r\n  const multiClassList = props.card.classes\r\n\r\n  return (\r\n    <>\r\n    {\r\n      multiClassList != null ? <AnimatedImage multiClassList={multiClassList}/> : <Image style={{width: 34, height: 34}} source={cardClassImageDict[cardClass]}/>\r\n    }\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nconst AnimatedImage = (props) => {\r\n  const fadeInOpacity = new Animated.Value(.75);\r\n  const multiClassList = props.multiClassList\r\n\r\n  useEffect(() => {\r\n    Animated.sequence([\r\n      Animated.timing(fadeInOpacity, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: true\r\n      })\r\n    ]).start(event => {\r\n        if (event.finished) {\r\n          Animated.timing(fadeInOpacity, {\r\n            toValue: .75,\r\n            duration: 2000,\r\n            useNativeDriver: true\r\n          }).start(event => {\r\n            setMultiClassIndex(multiClassIndex == multiClassList.length - 1 ? 0 : multiClassIndex + 1)\r\n          })\r\n        }})\r\n\r\n\r\n  })\r\n\r\n  const [multiClassIndex, setMultiClassIndex] = useState(0)\r\n\r\n  return (\r\n    <View>\r\n      <Animated.Image style={{width: 34, height: 34, opacity: fadeInOpacity}} source={cardClassImageDict[multiClassList[multiClassIndex]]}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SmallClassImage;\r\n","import React from 'react';\r\nimport {View, Image} from 'react-native';\r\nimport DeviceContext from './DeviceContext'\r\n\r\nconst TribeImage = (props) => {\r\n\r\n  const deviceType = React.useContext(DeviceContext)\r\n\r\n  function tribeImage() {\r\n    switch (props.tribe) {\r\n      case \"Beast\":   return require('./assets/img/bg_beasts.png')\r\n      case \"Demon\":   return require('./assets/img/bg_demons.png')\r\n      case \"Mech\":    return require('./assets/img/bg_mechs.png')\r\n      case \"Pirate\":  return require('./assets/img/bg_pirates.png')\r\n      case \"Murloc\":  return require('./assets/img/bg_murlocs.png')\r\n      case \"Dragon\":  return require('./assets/img/bg_dragons.png')\r\n      case \"Elemental\": return require('./assets/img/bg_elementals.png')\r\n      case \"Bartender\": return require('./assets/img/bg_bartenders.png')\r\n      default:  return require('./assets/img/bg_neutrals.png')\r\n    }\r\n  }\r\n\r\n  return (\r\n        <Image target='' style={{transform: [{scale: deviceType == 'mobile' ? .80 : 1.0}], width: 34, height: 34}} source={tribeImage()}/>\r\n  )\r\n}\r\nexport default TribeImage;\r\n","import React from 'react';\r\nimport {View, Image} from 'react-native';\r\nimport DeviceContext from './DeviceContext'\r\n\r\nconst TechLevelImage = (props) => {\r\n\r\n  const deviceType = React.useContext(DeviceContext)\r\n\r\n  function techLevelImage() {\r\n    switch (props.techlevel) {\r\n      case 1:   return require('./assets/img/techlevel1.png')\r\n      case 2:   return require('./assets/img/techlevel2.png')\r\n      case 3:   return require('./assets/img/techlevel3.png')\r\n      case 4:   return require('./assets/img/techlevel4.png')\r\n      case 5:   return require('./assets/img/techlevel5.png')\r\n      case 6:   return require('./assets/img/techlevel6.png')\r\n      default:  return require('./assets/img/techlevel0.png')\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Image style={{transform: [{scale: deviceType == 'mobile' ? .80 : 1.0}], width: 34, height: 34}} source={techLevelImage()}/>\r\n\r\n  )\r\n}\r\nexport default TechLevelImage;\r\n","import React from 'react';\r\nimport { Text, View, TouchableOpacity } from 'react-native';\r\nimport SmallClassImage from './SmallClassImage';\r\nimport SoundButton from './SoundButton';\r\nimport TribeImage from './TribeImage';\r\nimport TechLevelImage from './TechLevelImage';\r\nimport { battlegroundTribe, battlegroundTechLevel, getCardSounds } from './HelperFunctions'\r\n\r\n\r\nconst CardListItem = (props) => {\r\n\r\n  const card = props.item\r\n  const typeFilter = props.typeFilter\r\n  const showCard = props.showCard\r\n\r\n  let includeRowSounds = (card.type == 'MINION' && !['BGS_046t', 'BAR_919t'].includes(card.id)) && typeFilter == 'Cards'\r\n\r\n  let cardSounds = []\r\n\r\n  if (includeRowSounds) {\r\n    cardSounds = getCardSounds(card).filter(sound => ['Play', 'Attack', 'Death'].includes(sound.name))\r\n  }\r\n\r\n  return (\r\n\r\n    <TouchableOpacity onPress= {() => {showCard(card)}}>\r\n      <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center'\r\n      , justifyContent: 'space-between'\r\n      , marginTop: 4, marginBottom: 4, marginRight: 8}}>\r\n        { typeFilter == 'Battlegrounds' ?\r\n            <>\r\n              <TribeImage tribe={battlegroundTribe(card.id)}/>\r\n              <TechLevelImage techlevel={battlegroundTechLevel(card)}/>\r\n            </>\r\n            : <SmallClassImage card={card}/>\r\n        }\r\n\r\n        <Text style={{flexGrow: 1}} >{card.name}</Text>\r\n        {includeRowSounds ?\r\n          <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center'}}>\r\n            {cardSounds.map(sound => (\r\n              <SoundButton title={sound.name} sound={sound.audio} listButton={true}/>\r\n            ))} \r\n          </View>\r\n          : <></>\r\n\r\n      }\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nexport default CardListItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { StyleSheet, Text, View, Image, Button, TouchableOpacity, TouchableWithoutFeedback, FlatList } from 'react-native';\r\nimport MinionFilters from './filters/MinionFilters'\r\nimport BattlegroundFilters from './filters/BattlegroundFilters'\r\nimport SoundDivider from './SoundDivider';\r\nimport Card from './Card';\r\nimport FlatListItemSeparator from './FlatListItemSeparator';\r\nimport InfoModal from './InfoModal'\r\nimport { NavigationContainer, useScrollToTop, useIsFocused } from '@react-navigation/native';\r\nimport { Toolbar } from 'react-native-material-ui';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport ToolbarTitle from './ToolbarTitle'\r\nimport VolumeSlider from './VolumeSlider'\r\nimport CardListItem from './CardListItem'\r\nimport DeviceContext from './DeviceContext'\r\nimport {generalCards, heroCards, bgCards, duelsCards, tokenIDs, duelsIDs,\r\n  battlegroundToken, battlegroundHeroSpecific, battlegroundFlavor, battlegroundRetired,\r\n  nonCoreCardVersions} from './HelperFunctions'\r\n\r\nconst CardListTab = ( { route, navigation, state }) => {\r\n\r\n  // Context variables.\r\n  const deviceType = useContext(DeviceContext)\r\n\r\n  // State variables\r\n  const [cardDisplayed, setCardDisplayed] = useState('none')\r\n  const [card, setCard] = useState([])\r\n  const [myCardData, setMyCardData] = useState([])\r\n  const [cards, setCards] = useState([])\r\n  const [loadLimit, setLoadLimit] = useState(100)\r\n  const [showFooter, setShowFooter] = useState(true)\r\n  const [toolbarVisibilities, setToolbarVisilities] = useState({'filterMenu': 'hidden', 'infoModal': 'hidden', 'volumeSlider': 'hidden'})\r\n\r\n  // Card filter variables.\r\n  const cardFilterDict = {\r\n    'nonCollectible': useState(false),\r\n    'types': useState({'MINION': true, 'HERO': true, 'SPELL': false, 'WEAPON': false}),\r\n    'rarity': useState({undefined: true, 'FREE': true, 'COMMON': true, 'RARE': true, 'EPIC': true, 'LEGENDARY': true})\r\n  }\r\n\r\n  // Battlegrounds filter variables.\r\n  const bgFilterDict = {\r\n    'bgTiers': useState({1: true, 2: true, 3: true, 4: true, 5: true, 6: true}),\r\n    'bgTribes': useState({'Beast': true, 'Demon': true, 'Dragon': true, 'Mech': true, 'Murloc': true,'Pirate': true,'Elemental': true,'Neutral': true}),\r\n    'bgTokens': useState(false),\r\n    'bgHeroSpecific': useState(false),\r\n    'bgRetired': useState(false)\r\n  }\r\n\r\n  // Used to move to top of card list on nav to tab.\r\n  const flatListRef = React.useRef()\r\n  useScrollToTop(flatListRef)\r\n\r\n  var {cardSet} = route.params\r\n  const typeFilter = route.name\r\n  var {cardID} = route.params\r\n\r\n  useEffect(() => {\r\n    if(cardID != '' && cardID != undefined)\r\n      setCardDisplayed('')\r\n    else\r\n      setCardDisplayed('none')\r\n  })\r\n\r\n  const filterCards = (searchCriteria, applyLoadLimit, increaseLoadLimit,\r\n    newCardFilterDict, newBGFilterDict) => {\r\n    var filteredData\r\n\r\n    if (typeFilter == 'Cards') {\r\n      // If no newCardFilterDict is passed to the function, assume default filters of no nonCollectible.\r\n      if(newCardFilterDict == null) {\r\n        filteredData = generalCards.filter(x =>\r\n          cardFilterDict['types'][0][x.type]\r\n          && cardFilterDict['rarity'][0][(x.rarity == undefined) ? 'FREE' : x.rarity]\r\n          && (x.collectible == true || tokenIDs.includes((cardFilterDict['nonCollectible'][0]) ? x.id : 'N/A'))\r\n          && (x.set == cardSet \r\n            || (['all','DARKMOON_RACES','WAILING_CAVERNS','DEADMINES','ONYXIA','THRONE_TIDES','MAW_AND_DISORDER','RETURN_TO_NAXXRAMAS','AUDIOPOCALYPSE','YOGG'].includes(cardSet) && !nonCoreCardVersions().includes(x.id))\r\n            || (cardSet == 'CORE' && x.set == undefined && x.id.toString().slice(0,3) == 'RLK'))\r\n          && ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n          && (x.set != 'HERO_SKINS')\r\n          //&& (x.set == cardSet || (cardSet == 'all' && !nonCoreCardVersions().includes(x.id)))\r\n      )}\r\n      else {\r\n        filteredData = generalCards.filter(x =>\r\n          newCardFilterDict['types'][x.type]\r\n          && newCardFilterDict['rarity'][(x.rarity == undefined) ? 'FREE' : x.rarity]\r\n          && (x.collectible == true || tokenIDs.includes((newCardFilterDict['nonCollectible']) ? x.id : 'N/A'))\r\n          && (x.set == cardSet \r\n            || (['all','DARKMOON_RACES','WAILING_CAVERNS','DEADMINES','ONYXIA','THRONE_TIDES','MAW_AND_DISORDER','RETURN_TO_NAXXRAMAS','AUDIOPOCALYPSE','YOGG'].includes(cardSet) && !nonCoreCardVersions().includes(x.id))\r\n            || (cardSet == 'CORE' && x.set == undefined && x.id.toString().slice(0,3) == 'RLK'))\r\n          && ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n          && (x.set != 'HERO_SKINS')\r\n      )}\r\n\r\n      // Minisets technically belongs to their base expansion sets, but implement special logic so they can be broken out too.\r\n      if (cardSet == 'DARKMOON_RACES')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'YOP')\r\n      if (cardSet == 'WAILING_CAVERNS')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,2) == 'WC')\r\n      if (cardSet == 'DEADMINES')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'DED')\r\n      if (cardSet == 'ONYXIA')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'ONY')\r\n      if (cardSet == 'THRONE_TIDES')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'TID')\r\n      if (cardSet == 'MAW_AND_DISORDER')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'MAW')\r\n      if (cardSet == 'RETURN_TO_NAXXRAMAS')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'NX2')\r\n      if (cardSet == 'AUDIOPOCALYPSE')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'JAM')                                       \r\n      if (cardSet == 'YOGG')\r\n        filteredData = filteredData.filter(x => (x.id).toString().slice(0,3) == 'YOG')         \r\n\r\n      if(applyLoadLimit && !increaseLoadLimit) {\r\n        filteredData = filteredData.slice(0, loadLimit)\r\n        setMyCardData(filteredData)\r\n      } else if (increaseLoadLimit) {\r\n        filteredData = filteredData.slice(loadLimit,loadLimit+100)\r\n        setMyCardData(myCardData.concat(filteredData))\r\n      } else {\r\n        setMyCardData(filteredData)\r\n      }\r\n    }\r\n\r\n    else if (typeFilter == 'Battlegrounds') {\r\n      // If no newBGFilterDict is passed to the function, assume default filters of no tokens, no retired, no hero-specific cards.\r\n      if (newBGFilterDict == null)\r\n          setMyCardData(bgCards.filter(x =>\r\n            !battlegroundToken(x.id) && !battlegroundRetired(x.id) && !battlegroundHeroSpecific(x.id)\r\n          ))\r\n      else {\r\n        setMyCardData(bgCards.filter(x =>\r\n            (!battlegroundToken(x.id) || newBGFilterDict['bgTokensFilter']) &&\r\n            (battlegroundTechLevel(x) == undefined || newBGFilterDict['bgTierFilter'][(battlegroundTechLevel(x))]) &&\r\n            (!battlegroundHeroSpecific(x.id) || newBGFilterDict['bgHeroSpecificFilter']) &&\r\n            (!battlegroundRetired(x.id) || newBGFilterDict['bgRetiredFilter']) &&\r\n            (newBGFilterDict['bgTribeFilter'][(battlegroundTribe(x.id))]) &&\r\n            ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n      ))}\r\n    }\r\n\r\n    else if (typeFilter == 'Duels') {\r\n      setMyCardData(duelsCards.filter(x =>\r\n          ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n    ))}\r\n\r\n    else if (typeFilter == 'Heroes') {\r\n      setMyCardData(heroCards.filter(x =>\r\n        ((searchCriteria != \"\" && searchCriteria != null) ? (x.name.toUpperCase()).includes(searchCriteria.toUpperCase()) : 1 == 1)\r\n    ))}\r\n  }\r\n\r\n  function search(criteria) {\r\n    if(criteria != \"\" && criteria != null) {\r\n      filterCards(criteria, false, false)\r\n      setShowFooter(false)\r\n    }\r\n    else {\r\n      filterCards(null, true, false)\r\n      setShowFooter(true)\r\n    }\r\n  }\r\n\r\n  navigation.addListener('tabPress', e => {\r\n    if (typeFilter == 'Cards') {\r\n      cardID = null\r\n      navigation.navigate(\r\n        'Cards',\r\n        {cardSet: 'all'}\r\n      )\r\n    } else if (typeFilter == 'Heroes') {\r\n      filterCards()\r\n      navigation.navigate(\r\n        'Heroes'\r\n      )\r\n      focus()\r\n    } else if (typeFilter == 'Battlegrounds') {\r\n      filterCards()\r\n      navigation.navigate(\r\n        'Battlegrounds'\r\n      )\r\n    }\r\n    focus()\r\n  })\r\n\r\n  navigation.addListener('focus', e => {\r\n    focus()\r\n  })\r\n\r\n  function focus() {\r\n    goToTop()\r\n\r\n    if (typeFilter == 'Cards' && cardSet != 'all') {\r\n      filterCards(null, false, false)\r\n\r\n    }\r\n    else if (typeFilter == 'Cards' && cardSet == 'all')\r\n      filterCards(null, true, false)\r\n    else if (['Heroes', 'Battlegrounds', 'Duels'].includes(typeFilter))\r\n      filterCards()\r\n\r\n    if (cardID != '') {\r\n\r\n      let cardToShow = generalCards.concat(heroCards).find(x => x.id == cardID)    \r\n      if (cardToShow != undefined) {\r\n        showCard(cardToShow)\r\n      }\r\n    }\r\n\r\n    else {\r\n      navigation.setParams({\r\n        cardID: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  function goToTop() {\r\n    flatListRef.current.scrollToOffset({ animated: true, offset: 0 })\r\n  }\r\n\r\n  function showCard(card) {\r\n    setCard(card)\r\n    setCards([card])\r\n    setToolbarVisilities({'filterMenu': 'hidden', 'infoModal': 'hidden', 'volumeSlider': 'hidden'})\r\n    navigation.setParams({\r\n      cardID: card.id\r\n    })\r\n  }\r\n\r\n  const returnToPreviousCard = () => {\r\n    setCard(cards[cards.length-2])\r\n    navigation.setParams({\r\n      cardID: cards[cards.length-2].id\r\n    })\r\n    cards.pop()\r\n  }\r\n\r\n  const CardListFooter = () => {\r\n    if (typeFilter != 'Cards') {\r\n      return (<></>)\r\n    } else {\r\n      return (\r\n        <>\r\n        {\r\n          (myCardData.length < generalCards.filter(x =>\r\n            cardFilterDict['types'][0][x.type]\r\n            && cardFilterDict['rarity'][0][(x.rarity == undefined) ? 'FREE' : x.rarity]\r\n            && (x.collectible == true || tokenIDs.includes((cardFilterDict['nonCollectible'][0]) ? x.id : 'N/A'))\r\n            && (x.set == cardSet || (cardSet == 'all' && !nonCoreCardVersions().includes(x.id)))).length && showFooter) ?\r\n          <TouchableOpacity style={styles.button} onPress= {() => {\r\n            filterCards(null, true, true)\r\n            setLoadLimit(loadLimit+100)\r\n          }}>\r\n            <Text style={styles.text}>Load More</Text>\r\n          </TouchableOpacity>\r\n          : <></>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const FilterMenu = () => {\r\n    if (typeFilter == 'Cards') {\r\n      return (<MinionFilters\r\n        visibility={toolbarVisibilities['filterMenu']}\r\n        filterCards={filterCards}\r\n        cardFiltersHook={cardFilterDict}\r\n        />)\r\n    } else if (typeFilter == 'Battlegrounds') {\r\n      return (<BattlegroundFilters\r\n        visibility={toolbarVisibilities['filterMenu']}\r\n        filterCards={filterCards}\r\n        bgFiltersHook={bgFilterDict}\r\n        />)\r\n    } else\r\n      return (<></>)\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    button: {\r\n      alignItems: \"center\", padding: 10, justifyContent: 'center', backgroundColor: \"#2196F3\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    text: {\r\n      alignItems: \"center\", justifyContent: 'center', color: \"white\", fontSize: 14,\r\n    }\r\n  })\r\n\r\n  return (\r\n\r\n      <>\r\n      <Toolbar\r\n          centerElement={<ToolbarTitle/>}\r\n          isSearchActive={false}\r\n          searchable={{\r\n            autoFocus: true,\r\n            placeholder: 'Search',\r\n            onChangeText: (criteria) => { search(criteria) },\r\n            onSearchClosed: () => {\r\n              filterCards(null, true)\r\n              setShowFooter(true)},\r\n            onSearchPressed: () => {\r\n              setToolbarVisilities({'filterMenu': 'hidden', 'infoModal': 'hidden', 'volumeSlider': 'hidden'})\r\n            }\r\n          }}\r\n          rightElement= {\r\n            <>\r\n              <TouchableOpacity style={{paddingTop: 8, paddingRight: 8}} onPress={() => {\r\n                setToolbarVisilities({'filterMenu': 'hidden', 'infoModal': toolbarVisibilities['infoModal'] == 'hidden' ? 'visible' : 'hidden', 'volumeSlider': 'hidden'})\r\n              }}>\r\n                <MaterialCommunityIcons name=\"information-outline\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={{paddingTop: 8, paddingRight: 8}} onPress={() => {\r\n                setToolbarVisilities({'filterMenu': 'hidden', 'infoModal': 'hidden', 'volumeSlider': toolbarVisibilities['volumeSlider'] == 'hidden' ? 'visible' : 'hidden'})\r\n              }}>\r\n                <MaterialCommunityIcons name=\"volume-high\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n              {typeFilter == 'Cards' || typeFilter == 'Battlegrounds' ?\r\n                <TouchableOpacity style={{paddingTop: 8}} onPress={() => {\r\n                  setToolbarVisilities({'filterMenu': toolbarVisibilities['filterMenu'] == 'hidden' ? 'visible' : 'hidden', 'infoModal': 'hidden', 'volumeSlider': 'hidden'})\r\n                  }}>\r\n                <MaterialCommunityIcons name=\"filter-variant\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n            : <></>}\r\n\r\n            </>\r\n          }\r\n        />\r\n        <FilterMenu/>\r\n        <VolumeSlider visibility={toolbarVisibilities['volumeSlider']}/>\r\n        <InfoModal closeInfoModal={() => setToolbarVisilities({'filterMenu': 'hidden', 'infoModal': 'hidden', 'volumeSlider': 'hidden'})} infoModalVisibility={toolbarVisibilities['infoModal']}/>\r\n        <View style={{ flex: 1, padding: 8, flexDirection: 'row'}}>\r\n            <View style={{flex: (cardDisplayed == 'none' || deviceType == 'desktop') ? 3 : 0}}>\r\n              <FlatList\r\n              data={myCardData}\r\n              keyExtractor={item => item.id}\r\n              renderItem={({item}) => (<CardListItem item={item} typeFilter={typeFilter} showCard={showCard} />)}\r\n              ItemSeparatorComponent={FlatListItemSeparator}\r\n              ListFooterComponent={CardListFooter}\r\n              ref={flatListRef}\r\n            />\r\n            </View>\r\n            {cardDisplayed == 'none' ? <></> : \r\n              <View style={{flex: 2, justifyContent:'center', display:cardDisplayed}}>\r\n                 <Card card={card}\r\n                    battlegrounds={(typeFilter == 'Battlegrounds')}\r\n                    openNewCard={(newCardID, addToCardsList=true) => {\r\n                      var newCard = generalCards.concat(heroCards).find(x => x.id == newCardID)\r\n                      if(addToCardsList)\r\n                        cards.push(newCard)\r\n                      setCard(newCard)\r\n                      navigation.setParams({cardID: newCardID})\r\n                    }}\r\n                    closeCards={() => {\r\n                      navigation.setParams({cardID: ''})\r\n                    }}\r\n                    returnToPreviousCard={returnToPreviousCard}\r\n                    previousCardExists={(cards.length>1) ? true : false}\r\n                  />\r\n              </View>\r\n            }\r\n          </View>\r\n          </>\r\n        )\r\n      }\r\n\r\nexport default CardListTab;\r\n","import React from 'react';\r\nimport { Text, View, TouchableWithoutFeedback, FlatList} from 'react-native';\r\nimport FlatListItemSeparator from './FlatListItemSeparator';\r\nimport SmallSetImage from './SmallSetImage';\r\nimport cardsets from './assets/cardsets.json';\r\nimport { Toolbar } from 'react-native-material-ui';\r\nimport ToolbarTitle from './ToolbarTitle'\r\n\r\nconst SetList = ({ navigation }) => {\r\n\r\n  const cardSets = cardsets.filter(x => x.craftable === 1)\r\n\r\n  return (\r\n    <>\r\n    <Toolbar centerElement={<ToolbarTitle/>}/>\r\n    <View style={{ flex: 1, padding: 8 }}>\r\n      <FlatList\r\n        data={cardSets}\r\n        renderItem={({ item }) => (\r\n          <TouchableWithoutFeedback onPress= {e => {\r\n              navigation.navigate('Cards', {\r\n                cardSet: item.set,\r\n                cardID: ''\r\n              })\r\n            }\r\n          }>\r\n          <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center'\r\n          , justifyContent: 'space-between'\r\n          , marginTop: 4, marginBottom: 4, marginRight: 8}}>\r\n            <SmallSetImage cardSet={item.set}/>\r\n            <Text style={{flexGrow: 1}}>{item.name}</Text>\r\n          </View>\r\n          </TouchableWithoutFeedback>\r\n        )}\r\n        ItemSeparatorComponent={FlatListItemSeparator}\r\n      />\r\n    </View>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SetList\r\n","import React from 'react';\r\nimport * as Linking from 'expo-linking';\r\nimport CardListTab from './CardListTab';\r\nimport SetList from './SetList';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationEvents } from \"react-navigation\";\r\nimport VolumeContext from './VolumeContext'\r\nimport DeviceInfo from 'react-native-device-info';\r\nimport DeviceContext from './DeviceContext'\r\n\r\n\r\nconst App = ({navigation}) => {\r\n  const Tab = createBottomTabNavigator();\r\n  const config = {\r\n    screens: {\r\n      Cards: 'cards/:cardSet?/:cardID?',\r\n      Heroes: 'heroes/:cardID?',\r\n      Sets: 'sets',\r\n      Battlegrounds: 'battlegrounds/:cardID?',\r\n      Duels: 'duels/:cardID?'\r\n    }\r\n  }\r\n  const linking = {\r\n    prefixes: ['https://hearthsfx.github.io'],\r\n    config: config\r\n  }\r\n\r\n  const volumeHook = React.useState(100)\r\n  const [deviceType, setDeviceType] = React.useState('')\r\n\r\n  DeviceInfo.getUserAgent().then(userAgent => {\r\n    setDeviceType(String(userAgent).toLowerCase().includes(\"mobi\") ? 'mobile' : 'desktop')\r\n  })\r\n\r\n  return (\r\n    <VolumeContext.Provider value={volumeHook}>\r\n      <DeviceContext.Provider value={deviceType}>\r\n        <NavigationContainer linking={linking}>\r\n          <Tab.Navigator>\r\n            <Tab.Screen name=\"Cards\" component={CardListTab} initialParams = {{cardSet: 'all'}} />\r\n            <Tab.Screen name=\"Heroes\" component={CardListTab} initialParams = {{}} />\r\n            <Tab.Screen name=\"Sets\" component={SetList}/>\r\n            {/* <Tab.Screen name=\"Battlegrounds\" component={CardListTab} initialParams = {{}} /> */}\r\n            \r\n         </Tab.Navigator>\r\n        </NavigationContainer>\r\n      </DeviceContext.Provider>\r\n    </VolumeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./common_gem_small.png\": 234,\n\t\"./epic_gem_small.png\": 235,\n\t\"./legendary_gem_small.png\": 236,\n\t\"./rare_gem_small.png\": 237\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 468;","var map = {\n\t\"./techlevel0.png\": 177,\n\t\"./techlevel1.png\": 178,\n\t\"./techlevel2.png\": 179,\n\t\"./techlevel3.png\": 180,\n\t\"./techlevel4.png\": 181,\n\t\"./techlevel5.png\": 182,\n\t\"./techlevel6.png\": 183\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 469;","var map = {\n\t\"./bg_bartenders.png\": 184,\n\t\"./bg_beasts.png\": 185,\n\t\"./bg_demons.png\": 186,\n\t\"./bg_dragons.png\": 187,\n\t\"./bg_elementals.png\": 188,\n\t\"./bg_mechs.png\": 189,\n\t\"./bg_murlocs.png\": 190,\n\t\"./bg_neutrals.png\": 191,\n\t\"./bg_pirates.png\": 192\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 470;","var map = {\n\t\"./AVIcon.png\": 478,\n\t\"./AVIcon_MiniSet.png\": 479,\n\t\"./BARIcon.png\": 480,\n\t\"./BARIcon_MiniSet.png\": 481,\n\t\"./BOTIcon.png\": 482,\n\t\"./BRMIcon.png\": 483,\n\t\"./BTIcon.png\": 484,\n\t\"./BotBIcon.png\": 485,\n\t\"./BotBIcon_MiniSet.png\": 486,\n\t\"./ClassicIcon.png\": 240,\n\t\"./ClassicIconSelected.png\": 241,\n\t\"./DALIcon.png\": 487,\n\t\"./DHIIcon.png\": 488,\n\t\"./DMFIcon.png\": 489,\n\t\"./DMFIcon_MiniSet.png\": 490,\n\t\"./DRGIcon.png\": 491,\n\t\"./DRGIcon_MiniSet.png\": 492,\n\t\"./FSG_major_icon_79.png\": 493,\n\t\"./GILIcon.png\": 494,\n\t\"./GangsIcon.png\": 495,\n\t\"./GryphonIcon.png\": 242,\n\t\"./GryphonIconSelected.png\": 243,\n\t\"./GvGIcon.png\": 496,\n\t\"./HallOfFameIcon.png\": 497,\n\t\"./HydraIcon.png\": 498,\n\t\"./ICCIcon.png\": 499,\n\t\"./KaraIcon.png\": 500,\n\t\"./LOEIcon.png\": 501,\n\t\"./LOOTIcon.png\": 502,\n\t\"./NaxxIcon.png\": 503,\n\t\"./OGIcon.png\": 504,\n\t\"./PoAIcon.png\": 505,\n\t\"./REVIcon.png\": 506,\n\t\"./REVIcon_MiniSet.png\": 507,\n\t\"./RLKIcon.png\": 508,\n\t\"./RLKIcon_MiniSet.png\": 509,\n\t\"./SCHIcon.png\": 510,\n\t\"./SCIcon.png\": 511,\n\t\"./SCIcon_MiniSet.png\": 512,\n\t\"./SWIcon.png\": 513,\n\t\"./SWIcon_MiniSet.png\": 514,\n\t\"./Set1_Icon.png\": 244,\n\t\"./Set1_IconSelected.png\": 245,\n\t\"./TGTIcon.png\": 515,\n\t\"./TRLIcon.png\": 516,\n\t\"./TTNIcon.png\": 517,\n\t\"./TTNIcon_MiniSet.png\": 518,\n\t\"./TwistIcon.png\": 519,\n\t\"./UNGIcon.png\": 520,\n\t\"./UldumIcon.png\": 521,\n\t\"./WolfIcon.png\": 522,\n\t\"./bg_bartenders.png\": 184,\n\t\"./bg_beasts.png\": 185,\n\t\"./bg_demons.png\": 186,\n\t\"./bg_dragons.png\": 187,\n\t\"./bg_elementals.png\": 188,\n\t\"./bg_mechs.png\": 189,\n\t\"./bg_murlocs.png\": 190,\n\t\"./bg_neutrals.png\": 191,\n\t\"./bg_pirates.png\": 192,\n\t\"./bitcoin.png\": 246,\n\t\"./class_small_deathknight.png\": 247,\n\t\"./class_small_demonhunter.png\": 248,\n\t\"./class_small_druid.png\": 249,\n\t\"./class_small_hunter.png\": 250,\n\t\"./class_small_mage.png\": 251,\n\t\"./class_small_neutral.png\": 252,\n\t\"./class_small_paladin.png\": 253,\n\t\"./class_small_priest.png\": 254,\n\t\"./class_small_rogue.png\": 255,\n\t\"./class_small_shaman.png\": 256,\n\t\"./class_small_warlock.png\": 257,\n\t\"./class_small_warrior.png\": 258,\n\t\"./common_gem_small.png\": 234,\n\t\"./epic_gem_small.png\": 235,\n\t\"./exclude.png\": 125,\n\t\"./kofi.png\": 259,\n\t\"./legendary_gem_small.png\": 236,\n\t\"./litecoin.png\": 260,\n\t\"./rare_gem_small.png\": 237,\n\t\"./techlevel0.png\": 177,\n\t\"./techlevel1.png\": 178,\n\t\"./techlevel2.png\": 179,\n\t\"./techlevel3.png\": 180,\n\t\"./techlevel4.png\": 181,\n\t\"./techlevel5.png\": 182,\n\t\"./techlevel6.png\": 183,\n\t\"./twitter.png\": 523\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 477;","module.exports = __webpack_public_path__ + \"static/media/AVIcon.2d47a674.png\";","module.exports = __webpack_public_path__ + \"static/media/AVIcon_MiniSet.051189a3.png\";","module.exports = __webpack_public_path__ + \"static/media/BARIcon.b0ffa042.png\";","module.exports = __webpack_public_path__ + \"static/media/BARIcon_MiniSet.52cb1c42.png\";","module.exports = __webpack_public_path__ + \"static/media/BOTIcon.e5ff7520.png\";","module.exports = __webpack_public_path__ + \"static/media/BRMIcon.446540f2.png\";","module.exports = __webpack_public_path__ + \"static/media/BTIcon.1c69bd42.png\";","module.exports = __webpack_public_path__ + \"static/media/BotBIcon.35467494.png\";","module.exports = __webpack_public_path__ + \"static/media/BotBIcon_MiniSet.36391d54.png\";","module.exports = __webpack_public_path__ + \"static/media/DALIcon.88d1b880.png\";","module.exports = __webpack_public_path__ + \"static/media/DHIIcon.3c827183.png\";","module.exports = __webpack_public_path__ + \"static/media/DMFIcon.f4c83930.png\";","module.exports = __webpack_public_path__ + \"static/media/DMFIcon_MiniSet.3af851b6.png\";","module.exports = __webpack_public_path__ + \"static/media/DRGIcon.bde25580.png\";","module.exports = __webpack_public_path__ + \"static/media/DRGIcon_MiniSet.a5fcd6d5.png\";","module.exports = __webpack_public_path__ + \"static/media/FSG_major_icon_79.7f8812e7.png\";","module.exports = __webpack_public_path__ + \"static/media/GILIcon.836508be.png\";","module.exports = __webpack_public_path__ + \"static/media/GangsIcon.be4ad498.png\";","module.exports = __webpack_public_path__ + \"static/media/GvGIcon.8743247a.png\";","module.exports = __webpack_public_path__ + \"static/media/HallOfFameIcon.37379c27.png\";","module.exports = __webpack_public_path__ + \"static/media/HydraIcon.cf32ebca.png\";","module.exports = __webpack_public_path__ + \"static/media/ICCIcon.45a747ea.png\";","module.exports = __webpack_public_path__ + \"static/media/KaraIcon.c214d778.png\";","module.exports = __webpack_public_path__ + \"static/media/LOEIcon.9975dfb8.png\";","module.exports = __webpack_public_path__ + \"static/media/LOOTIcon.edfb0176.png\";","module.exports = __webpack_public_path__ + \"static/media/NaxxIcon.3b105f8e.png\";","module.exports = __webpack_public_path__ + \"static/media/OGIcon.53624503.png\";","module.exports = __webpack_public_path__ + \"static/media/PoAIcon.40b532d8.png\";","module.exports = __webpack_public_path__ + \"static/media/REVIcon.7b99553e.png\";","module.exports = __webpack_public_path__ + \"static/media/REVIcon_MiniSet.2b015965.png\";","module.exports = __webpack_public_path__ + \"static/media/RLKIcon.e94a3143.png\";","module.exports = __webpack_public_path__ + \"static/media/RLKIcon_MiniSet.953ce222.png\";","module.exports = __webpack_public_path__ + \"static/media/SCHIcon.5e6aa75c.png\";","module.exports = __webpack_public_path__ + \"static/media/SCIcon.81ac9bbb.png\";","module.exports = __webpack_public_path__ + \"static/media/SCIcon_MiniSet.1027d794.png\";","module.exports = __webpack_public_path__ + \"static/media/SWIcon.bbce98ee.png\";","module.exports = __webpack_public_path__ + \"static/media/SWIcon_MiniSet.8c8d515f.png\";","module.exports = __webpack_public_path__ + \"static/media/TGTIcon.253b1f48.png\";","module.exports = __webpack_public_path__ + \"static/media/TRLIcon.a700a78e.png\";","module.exports = __webpack_public_path__ + \"static/media/TTNIcon.fc170b88.png\";","module.exports = __webpack_public_path__ + \"static/media/TTNIcon_MiniSet.30786c10.png\";","module.exports = __webpack_public_path__ + \"static/media/TwistIcon.1862972a.png\";","module.exports = __webpack_public_path__ + \"static/media/UNGIcon.01f6a5f3.png\";","module.exports = __webpack_public_path__ + \"static/media/UldumIcon.76a3f13f.png\";","module.exports = __webpack_public_path__ + \"static/media/WolfIcon.ada2fb5d.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter.1cb2dbe4.png\";"],"sourceRoot":""}